var h6=(B,a)=>()=>(a||B((a={exports:{}}).exports,a),a.exports);var O6=h6((R6,Z2)=>{(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const Z of document.querySelectorAll('link[rel="modulepreload"]'))p1(Z);new MutationObserver(Z=>{for(const R0 of Z)if(R0.type==="childList")for(const E1 of R0.addedNodes)E1.tagName==="LINK"&&E1.rel==="modulepreload"&&p1(E1)}).observe(document,{childList:!0,subtree:!0});function r0(Z){const R0={};return Z.integrity&&(R0.integrity=Z.integrity),Z.referrerPolicy&&(R0.referrerPolicy=Z.referrerPolicy),Z.crossOrigin==="use-credentials"?R0.credentials="include":Z.crossOrigin==="anonymous"?R0.credentials="omit":R0.credentials="same-origin",R0}function p1(Z){if(Z.ep)return;Z.ep=!0;const R0=r0(Z);fetch(Z.href,R0)}})();const L3=document.querySelector(".control-al__size-box"),m6=document.querySelector(".control-al__start"),v6=document.querySelector(".control-al__reset"),I3=document.querySelector(".algebra__matrix-first"),S3=document.querySelector(".algebra__matrix-second");let N3=1;function g6(B,a){let r0=a.querySelectorAll(".algebra__matrix-str"),p1=r0.length;if(B!==p1)if(B>p1){for(;B>p1;)a.insertAdjacentHTML("beforeend",`
            <ol class="algebra__matrix-str"></ol>
            `),p1++;r0=a.querySelectorAll(".algebra__matrix-str"),r0.forEach(Z=>{for(;Z.querySelectorAll("input").length<B;)Z.insertAdjacentHTML("beforeend",`
                <input type="number" value="" placeholder="0">
                `)})}else{for(;B<p1;)console.log(a.lastChild),r0[p1-1].remove(),p1--;r0=a.querySelectorAll(".algebra__matrix-str"),r0.forEach(Z=>{for(;Z.querySelectorAll("input").length>B;)Z.lastChild.remove()})}}function d6(B){let a=B.querySelectorAll(".algebra__matrix-str"),r0=a.length,p1=new Array(r0),Z=0;for(a.forEach(R0=>{p1[Z]=new Array(r0);let E1=a[Z].querySelectorAll("input"),m0=0;E1.forEach(G0=>{p1[Z][m0]=G0.value,m0++}),Z++}),Z=0;Z<r0-1;Z++)for(let R0=Z+1;R0<r0;R0++){let E1;+p1[Z][Z]==0?E1=0:E1=+p1[R0][Z]*1/+p1[Z][Z];for(let m0=0;m0<r0;m0++){let G0=p1[R0][m0]-E1*p1[Z][m0];p1[R0][m0]=Math.round(G0*100)/100}}return p1}L3.addEventListener("change",()=>{let B=L3.value;if(window.innerWidth<1024&&B>8){alert("Размер не должен быть больше 8");return}if(!N3){alert('Нажмите кнопку "RESET"');return}if(B<2){alert("Размер не должен быть меньше 2");return}if(B>10){alert("Размер не должен быть больше 10");return}g6(B,I3)});m6.addEventListener("click",()=>{if(N3){N3=0;let B=d6(I3),a=L3.value;for(let Z=0;Z<a;Z++)S3.insertAdjacentHTML("beforeend",`
            <ol class="algebra__matrix-str"></ol>
            `);let r0=S3.querySelectorAll(".algebra__matrix-str"),p1=0;r0.forEach(Z=>{for(let R0=0;R0<a;R0++)Z.insertAdjacentHTML("beforeend",`
                <p>${+B[p1][R0]}</p>
                `);p1++}),I3.classList.add("mtr-first-active"),S3.classList.add("mtr-second-active")}});v6.addEventListener("click",()=>{N3||(I3.classList.remove("mtr-first-active"),S3.classList.remove("mtr-second-active"),setTimeout(()=>{S3.querySelectorAll(".algebra__matrix-str").forEach(a=>{a.remove()})},350),N3=1)});const w6=document.querySelector(".dm__n"),y6=document.querySelector(".dm__m"),S6=document.querySelector(".dm__start"),M6=document.querySelector(".dm__reset"),_3=document.querySelector(".dm__out-content"),E6=(B,a,r0=!1)=>{const p1=[],Z=Array(a),R0=(E1,m0)=>{if(m0===a){p1.push([...Z]);return}for(let G0=E1;G0<B.length;G0++)Z[m0]=B[G0],R0(G0+(r0?0:1),m0+1)};return R0(0,0),p1};let R3=0;S6.addEventListener("click",()=>{if(R3){alert('Воспользуйтесь кнопокой "Reset"');return}let B=+w6.value,a=+y6.value;if(a>B){alert('Число "N" не может быть меньше числа "M", попробуйте ещё раз');return}if(B<1||a<1||B>10||a>10){alert('Числа "N" и "M" должны быть в диапазоне от 1 до 10');return}R3=1;let r0=new Array(B);for(let Z=1;Z<=B;Z++)r0[Z-1]=Z;E6(r0,a).forEach(Z=>{let R0="[";Z.forEach(E1=>{R0+=E1+","}),R0=R0.slice(0,-1),R0+="]",_3.insertAdjacentHTML("beforeend",`<div><p>${R0}<p></div>`)})});M6.addEventListener("click",()=>{R3=0,_3.querySelectorAll("div").forEach(a=>{a.remove()})});var N6=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function b6(B){return B&&B.__esModule&&Object.prototype.hasOwnProperty.call(B,"default")?B.default:B}var U3={exports:{}};(function(B){var a=function(r0){var p1="1.1.13",Z=new V1,R0=r0.bigInt,E1=r0.bigDec;E1.set({precision:250});var m0={},G0=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],N0={},W={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{π:"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};(function(){W.CACHE.roots={};for(var e=40,l=40,d=2;d<=e;d++)for(var N=2;N<=l;N++){var _=R0(d).pow(N);W.CACHE.roots[_+"-"+N]=d}})();var j=m0.N=1,c1=m0.P=2,T0=m0.S=3,o1=m0.EX=4,K0=m0.FN=5,k0=m0.PL=6,l0=m0.CB=7,Q0=m0.CP=8,A1=W.CONST_HASH="#",f1=W.PARENTHESIS,h1=W.SQRT,z0=W.ABS,d0=W.FACTORIAL,g=W.DOUBLEFACTORIAL,b=[],A={},w=[],S=[],C=function(e,l){if(!W.suppress_errors)throw l?new l(e):new Error(e)},V=function(e){var l=function(d){this.name=e,this.message=d!==void 0?d:"";var N=new Error(this.message);N.name=this.name,this.stack=N.stack};return l.prototype=Object.create(Error.prototype),l},K=function(e){return w.indexOf(e)!==-1},S0=function(e){for(var l=e[0],d=1,N=e.length;d<N;d++)if(!e[d].equals(l))return!1;return!0},h0=function(e){S.push(e),W.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},y0=function(e,l){if(l=l||"variable",W.ALLOW_CHARS.indexOf(e)===-1){var d=W.VALIDATION_REGEX;if(!d.test(e))throw new h(e+" is not a valid "+l+" name")}},g0=function(e){var l=Math.sign(e);if(e=Math.abs(e),/\d+\.?\d*e[\+\-]*\d+/i.test(e)){var d="0",N=String(e).toLowerCase().split("e"),_=N.pop(),G=Math.abs(_),t0=_/G,q0=N[0].split(".");if(t0===-1)G=G-q0[0].length,G<0?e=q0[0].slice(0,G)+"."+q0[0].slice(G)+(q0.length===2?q0[1]:""):e=d+"."+new Array(G+1).join(d)+q0.join("");else{var X0=q0[1];X0&&(G=G-X0.length),G<0?e=q0[0]+X0.slice(0,G)+"."+X0.slice(G):e=q0.join("")+new Array(G+1).join(d)}}return l<0?"-"+e:e},C1=function(e){for(var l=Math.floor(Math.sqrt(e)),d=2;d<=l;d++)if(e%d===0)return!1;return!0},I1=function(e,l){var d={};return d[e]=l,d},x1=function(e){return/^\d+\.?\d*$/.test(e)},s0=function(e){for(var l=0;l<e.length;l++)if(!x1(e[l]))return!1;return!0},n0=function(e){return a0(e)?n0(e.multiplier.toDecimal()):e%1!==0},a0=function(e){return e instanceof P},Y=function(e){return e instanceof t1},C0=function(e,l,d){if(d=d||{c:[],add:function(q0){this.c.indexOf(q0)===-1&&isNaN(q0)&&this.c.push(q0)}},a0(e)){var N=e.group,_=e.previousGroup;if(N===o1&&C0(e.power,l,d),N===Q0||N===l0||_===Q0||_===l0)for(var G in e.symbols)C0(e.symbols[G],l,d);else if(N===T0||_===T0)e.value==="e"||e.value==="pi"||e.value===W.IMAGINARY||d.add(e.value);else if(N===k0||_===k0)C0(f0(e.symbols),l,d);else if(N===o1)isNaN(e.value)||d.add(e.value),C0(e.power,l,d);else if(N===K0&&!l)for(var t0=0;t0<e.args.length;t0++)C0(e.args[t0],l,d)}return d.c.sort()},m1=function(e,l){for(var d=new P(0),N=0;N<e.length;N++){var _=e[N];d=Z.add(d,a0(_)?_:Z.parse(_))}return l?Number(d):d},B0=function(e,l){e=Z.expand(e),l=l||{};var d=function(N,_){l[N]||(l[N]=new P(0)),l[N]=Z.add(l[N],_.clone())};return e.each(function(N){if(N.isConstant("all"))d("constants",N);else if(N.group===T0)d(N.value,N);else if(N.group===K0&&(N.fname===z0||N.fname===""))B0(N.args[0]);else{if(N.group===o1||N.group===K0)throw new Error("Unable to separate. Term cannot be a function!");d(C0(N).join(" "),N)}}),l},e0=function(e,l){l=l||e.length;for(var d=0;d<l;d++){var N=e[d];N||(e[d]=new P(0))}return e},i0=function(e){return e instanceof y1},H0=function(e){return e instanceof L1},u1=function(e){return e instanceof O1},x=function(e){return e.group===j||e.group===c1},q=function(e){return e.group===T0&&e.multiplier.equals(1)&&e.power.equals(1)},$=function(e){return Array.isArray(e)},o0=function(e){return/^[-+]?\d+e?\+?\d*$/gim.test(e.toString())},F0=function(e){return a0(e)&&(e=e.multiplier),e.lessThan(0)},D0=function(e){return e&&String(e)},c0=function(e){return"("+e+")"},l1=function(e,l,d,N){return e.substr(0,l)+N+e.substr(d,e.length)},Z0=function(e){return e!==void 0&&e.custom},i1=function(e,l){return e<0==l<0},P1=function(){var e=[].slice.call(arguments),l=e.shift(),d=l.replace(/{(\d+)}/g,function(N,_){var G=e[_];return typeof G=="function"?G():G});return d},T=function(e,l,d){var N=[];d=d||1;for(var _=e;_<=l;_++)N.push(_*d);return N},H=Object.keys,f0=function(e,l,d){for(var N in e)break;return l?N:d?{key:N,obj:e[N]}:e[N]},v0=function(e,l,d){for(var N=5,_={},G,t0=0;t0<d.length;t0++)_[d[t0]]=new P(Math.floor(Math.random()*N)+1);return F1("PARSE2NUMBER",function(){G=Z.parse(e,_).equals(Z.parse(l,_))}),G},u0=function(e,l,d){return y0(e),K(e)?null:(l=l||C0(Z.parse(d)),Z.functions[e]=[Z.mapped_function,l.length,{name:e,params:l,body:d}],d)},b0=function(e){return Math.max.apply(void 0,e)},O0=function(e){return Math.min.apply(void 0,e)},M0=function(e,l){if(e.sort(),l.sort(),e.length===l.length){for(var d=0;d<e.length;d++)if(e[d]!==l[d])return!1;return!0}return!1},P0=function(e){for(var l=[],d=e.length,N=0;N<d;N++)l[N]=e[N].clone();return l},I0=function(e,l){l=l||20;var d=[],N,_,G;d.push(e[0]);for(var t0=0;t0<e.length-1;t0++){N=e[t0],_=e[t0+1]-N,G=_/l;for(var q0=0;q0<l;q0++)N+=G,d.push(N)}return d},d1=function(e){var l,d;if(e.group===K0&&e.fname===""?(l=P.unwrapPARENS(Z.parse(e).toLinear()),d=Z.parse(e.power)):e.group===c1&&(l=Z.parse(e.value),d=Z.parse(e.power)),l&&d&&l.group===j&&d.group===j&&l.multiplier.isNegative()){for(var N=[],_=P.toPolarFormArray(n2(e)),G=_[0],t0=Z.arg(l),q0=d.multiplier.den.toString(),X0=d.multiplier.num.toString(),i="(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",u=0;u<q0;u++){var O=n2(Z.parse(P1("(({0})+2*pi*({1}))/({2})",t0,u,q0))).multiplier.toDecimal();N.push(n2(Z.parse(P1(i,G,q0,W.IMAGINARY,O,X0))))}return y1.fromArray(N)}else if(e.isConstant(!0,!0)){var I=e.sign(),t0=n2(e.abs()),z=Z.sqrt(t0),N=[z.clone(),z.negate()];I<0&&(N=N.map(function(e1){return Z.multiply(e1,P.imaginary())}))}else N=[Z.parse(e)];return y1.fromArray(N)},j0=function(e,l){for(var d=e.length,N=[],_=0;_<e.length;_++)N.push([e[_],l[_]]);N.sort(function(q0,X0){return q0[0]-X0[0]});var G=[],t0=[];for(_=0;_<d;_++)G.push(N[_][0]),t0.push(N[_][1]);return[G,t0]},v1=function(e,l,d){l=String(l);var N,_,G,t0;if(e.group===Q0){var q0=Z.expand(e.clone()).stripVar(l);N=Z.subtract(e.clone(),q0.clone()),t0=q0}else N=e.clone();return _=N.stripVar(l),G=Z.divide(N.clone(),_.clone()),t0=t0||new P(0),d?{a:_,x:G,ax:N,b:t0}:[_,G,N,t0]},U1=function(e,l){return o0(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(l=typeof l>"u"?14:l,Math.round(e*Math.pow(10,l))/Math.pow(10,l))},i2=function(e){for(var l="u",d=l,N=0,_=C0(e);!(w.indexOf(d)===-1&&_.indexOf(d)===-1);)d=l+N++;for(var G=0,t0=w.length;G<=t0;G++)if(!w[G]){w[G]=d;break}return d},Q1=function(e){var l=w.indexOf(e);l!==-1&&(w[l]=void 0)},e2=function(e,l){if($(e))for(var d=e.length,N=0;N<d;N++)l.call(e,N);else for(var _ in e)e.hasOwnProperty(_)&&l.call(e,_)},j1=function(e){return e%2===0},o2=function(e){return 1/(e%1)%2===0},p2=function(e){for(var l=e.length,d=[],N=0;N<l;N++){var _=e[N];d.indexOf(_)===-1&&d.push(_)}return d},A2=function(e){for(var l=C0(e[0],null,null),d=1,N=e.length;d<N;d++)l=l.concat(C0(e[d]));return l=p2(l).sort(),l},c2=function(e,l){var d=typeof l;(d!=="function"||d==="undefined")&&(l=function(X0,i){return X0===i});for(var N=[];e.length;){var _=e[0];if(e.length===1){N.push(_);break}var G=[];N.push(_);for(var t0=1;t0<e.length;t0++){var q0=e[t0];l(_,q0)||G.push(q0)}e=G}return N},L2=function(e){var l=function(d){w.indexOf(d)===-1&&w.push(d)};typeof e=="string"?l(e):e2(e,function(d){l(d)})},q2=function(e,l){var d;return $(e)?d=e.splice(l,1)[0]:(d=e[l],delete e[l]),d},F1=function(e,l,d,N){var _=W[e];W[e]=d===void 0?!0:!!d;var G=l.call(N);return W[e]=_,G},_1=function(){var e={};for(var l in Z.functions)e[l]=Z.functions[l][0];return e},r2=function(e){return[].slice.call(e)},B2=function(e,l,d){var N=[];e.each(function(G){if(G.contains(l))var t0=G.stripVar(l),q0=Z.divide(G.clone(),t0.clone()),X0=q0.power.toDecimal();else t0=G,X0=0;var i=N[X0];N[X0]=i?Z.add(i,t0):t0},!0);for(var _=0;_<N.length;_++)N[_]||(N[_]=new P(0));return N},n2=function(e,l){return F1("PARSE2NUMBER",function(){return Z.parse(e,l)},!0)},v2=function(e){if($(e)){for(var l=new y1([]),d=0;d<e.length;d++)l.elements.push(v2(e[d]));return l}return a0(e)?e:Z.parse(e)},g1=function(e){for(var l=G0[G0.length-1]||2,d=l;d<e;d++)C1(d)&&G0.push(d)},r=function(e){for(var l=0;l<e.length;l++)if(e[l].group!==j)return!1;return!0},v=function(e){for(var l=0;l<e.length;l++)if(!(e[l].isPi()||e[l].isE())&&!e[l].isConstant(!0))return!1;return!0},p=function(e,l,d){(l.isComposite()&&!e.isComposite()||l.isLinear()&&!e.isLinear())&&([e,l]=[l,e]);var N=new P(0);return e.isLinear()?e.each(function(_){if(l.isComposite())l.isLinear()?l.each(function(t0){var q0=Z.multiply(Z.parse(_),Z.parse(t0)),X0=Z.expand(Z.parse(q0),d);N=Z.add(N,X0)},!0):N=Z.add(N,Z.multiply(_,Z.parse(l)));else{var G=Z.multiply(Z.parse(_),Z.parse(l));N=Z.add(N,Z.expand(G,d))}},!0):N=Z.multiply(e,l),N},f=V("DivisionByZero"),E=V("ParseError"),m=V("UndefinedError"),M=V("OutOfFunctionDomainError"),R=V("MaximumIterationsReached"),D=V("NerdamerTypeError"),U=V("ParityError"),F=V("OperatorError"),t=V("OutOfRangeError"),s=V("DimensionError"),h=V("InvalidVariableNameError"),y=V("ValueLimitExceededError"),L=V("NerdamerValueError"),X=V("SolveError"),A0=V("InfiniteLoopError"),Q=V("UnexpectedTokenError"),Y0={DivisionByZero:f,ParseError:E,OutOfFunctionDomainError:M,UndefinedError:m,MaximumIterationsReached:R,NerdamerTypeError:D,ParityError:U,OperatorError:F,OutOfRangeError:t,DimensionError:s,InvalidVariableNameError:h,ValueLimitExceededError:y,NerdamerValueError:L,SolveError:X,InfiniteLoopError:A0,UnexpectedTokenError:Q},E0={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var l=1/(1+.5*Math.abs(e)),d=1-l*Math.exp(-e*e-1.26551223+l*(1.00002368+l*(.37409196+l*(.09678418+l*(-.18628806+l*(.27886807+l*(-1.13520398+l*(1.48851587+l*(-.82215223+l*.17087277)))))))));return e>=0?d:-d},diff:function(e){var l=.001,d=function(N){return(e(N+l)-e(N-l))/(2*l)};return d},median:function(...e){e.sort(function(d,N){return d-N});var l=Math.floor(e.length/2);return e.length%2?e[l]:(e[l-1]+e[l])/2},fromContinued:function(e){for(var l=e.fractions.slice(),d=1/l.pop(),N=0,_=l.length;N<_;N++)d=1/(l.pop()+d);return e.sign*(e.whole+d)},continuedFraction:function(e,l){l=l||20;for(var d=Math.sign(e),N=Math.abs(e),_=Math.floor(N),G=N-_,t0=0,q0=!1,X0=1e-14,i=1e7,u,O,I={whole:_,sign:d,fractions:[]};!q0&&G!==0;){if(u=1/G,O=Math.floor(u),O>i){var z=E0.fromContinued(I)-e;if(z<=Number.EPSILON)break}I.fractions.push(O),G=u-O,(G<=X0||t0>=l-1)&&(q0=!0),t0++}var p0=I.fractions.length-1;return I.fractions[p0]===1&&(I.fractions.pop(),I.fractions[--p0]++),I},bigpow:function(e,l){e instanceof x0||(e=x0.create(e)),l instanceof x0||(l=x0.create(l));var d=new x0(0);if(l.isInteger())d.num=e.num.pow(l.toString()),d.den=e.den.pow(l.toString());else{var N=x0.create(Math.pow(e.num,l.num)),_=x0.create(Math.pow(e.den,l.num));d.num=E0.nthroot(N,l.den.toString()),d.den=E0.nthroot(_,l.den)}return d},gamma:function(e){var l=7,d=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*E0.gamma(1-e));e-=1;for(var N=d[0],_=1;_<l+2;_++)N+=d[_]/(e+_);var G=e+l+.5;return Math.sqrt(2*Math.PI)*Math.pow(G,e+.5)*Math.exp(-G)*N},bigfactorial:function(e){for(var l=new R0(1),d=2;d<=e;d++)l=l.times(d);return new x0(l)},bigLog:function(e){var l=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(l[e])return x0.quick.apply(null,l[e].split("/"));e=new x0(e);for(var d=80,N=new x0(0),_=e.subtract(new x0(1)),G=e.add(new x0(1)),t0=0;t0<d;t0++){var q0=new x0(2*t0+1),X0=E0.bigpow(_.divide(G),q0),i=q0.clone().invert().multiply(X0);N=N.add(i)}return N.multiply(new x0(2))},factorial:function(e){var l=e%1===0;if(l&&e<0)return NaN;if(!l)return E0.gamma(e+1);for(var d=1,N=2;N<=e;N++)d=d*N;return d},dfactorial:function(e){if(o0(e)){var l=e%2===0,d=l?e/2:(e+1)/2,N=new x0(1);if(l)for(var _=1;_<=d;_++)N=N.multiply(new x0(2).multiply(new x0(_)));else for(var _=1;_<=d;_++)N=N.multiply(new x0(2).multiply(new x0(_)).subtract(new x0(1)))}else N=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*E0.gamma(1+e/2);return N},GCD:function(){for(var e=p2([].slice.call(arguments).map(function(_){return Math.abs(_)})).sort(),l=Math.abs(e.shift()),d=e.length;d-- >0;)for(var N=Math.abs(e.shift());;){if(l%=N,l===0){l=N;break}if(N%=l,N===0)break}return l},QGCD:function(){for(var e=[].slice.call(arguments),l=e[0],d=1;d<e.length;d++){var N=e[d],_=l.isNegative()&&N.isNegative()?-1:1;l=N.gcd(l),_<0&&l.negate()}return l},LCM:function(e,l){return e*l/E0.GCD(e,l)},pow:function(e,l){return e<0&&Math.abs(l)<1?1/l%2===0?NaN:-Math.pow(Math.abs(e),l):Math.pow(e,l)},factor:function(e){e=Number(e);var l=Math.sign(e);e=Math.abs(e);var d=E0.ifactor(e),N=new P;N.symbols={},N.group=l0;for(var _ in d){var G=new P(1);G.group=c1,G.value=_,G.power=new P(d[_]),N.symbols[_]=G}return N.updateHash(),e===1&&(N=new P(e)),l<0&&N.negate(),N},sfactor:function(e,l){l=l||{};var d=Math.floor(Math.sqrt(e)),N=G0[G0.length-1];d>N&&e<1e6&&g1(d);for(var _=G0.length,G=0;G<_;G++)for(var t0=G0[G];e%t0===0;)e=e/t0,l[t0]=(l[t0]||0)+1;return e>1&&(l[e]=1),l},ifactor:function(e){var l=new R0(e);if(e=String(e),e==="0")return{0:1};e=new R0(e);var d=e.sign?-1:1;e=e.abs();var N={};if(e.lt("65536"))N=E0.sfactor(e,N);else{var _=function(u){u.isPrime()?N[u]=(N[u]||0)+1:N=E0.sfactor(u,N)};try{for(var G=1e3,t0=0;!e.abs().equals(1);)if(e.isPrime()){_(e);break}else{let u=function(O){for(var I=new R0(O),z=2,p0=new R0(O),L0=new R0(1);L0.equals(1);){for(var e1=0;e1<=z&&L0.equals(1);e1++){if(t0++>G)throw new Error("stopping");p0=p0.pow(2).add(1).mod(e),L0=R0.gcd(p0.minus(I).abs(),e)}z=z*2,I=p0}return L0.equals(e)?u(O+1):L0};var i=u,q0=u(2);_(q0),e=e.divide(q0)}}catch{N={},_(l)}}if(d===-1){var X0=O0(H(N));N["-"+X0]=N[X0],delete N[X0]}return N},boxfactor:function(e,l){l=l||200;for(var d,N,_=Math.floor(5/12*e),G=0,t0=!1;d=Math.floor(e/_),N=e%_,N!==0;){if(t0)return[e,1];_=Math.max(N,_-N),G++,t0=G>l}return[d,_,G]},fib:function(e){var l=Math.sign(e);e=Math.abs(e),l=j1(e)?l:Math.abs(l);for(var d=0,N=1,_=1,G=2;G<=e;G++)_=d+N,d=N,N=_;return _*l},mod:function(e,l){return e%l},integer_part:function(e){var l=Math.sign(e);return l*Math.floor(Math.abs(e))},simpson:function(e,l,d,N){var _=function(z,p0,L0){var e1=z(p0),$0=1e-12;return isNaN(e1)&&(e1=z(L0===1?p0+$0:p0-$0)),e1};N=N||1e-4;var G=Math.abs(Math.floor((d-l)/N));G%2!==0&&G++;for(var t0=(d-l)/G,q0=_(e,l,1),X0=!1,i=l+t0,u,O,I=1;I<G;I++)u=X0?2:4,O=u*_(e,i,1),q0+=O,X0=!X0,i+=t0;return(q0+_(e,i,2))*(t0/3)},num_integrate:function(e,l,d,N,_){if(_<0)throw new Error("max depth cannot be negative");function G(X0,i,u,O,I,z,p0,L0,e1,$0,V0){if(V0.nanEncountered)return NaN;var M1,W0,T1,w1,a1,$1,J1,H1,D1,W1;if(M1=u-i,W0=X0(i+M1*.25),T1=X0(u-M1*.25),isNaN(W0)){V0.nanEncountered=!0;return}if(isNaN(T1)){V0.nanEncountered=!0;return}if(w1=M1*(O+4*W0+I)/12,a1=M1*(I+4*T1+z)/12,$1=w1+a1,W1=($1-p0)/15,!(V0.maxDepthCount>1e3*e1))return $0>e1?(V0.maxDepthCount++,$1+W1):Math.abs(W1)<L0?$1+W1:(J1=i+M1*.5,H1=G(X0,i,J1,O,W0,I,w1,L0*.5,e1,$0+1,V0),isNaN(H1)?(V0.nanEncountered=!0,NaN):(D1=G(X0,J1,u,I,T1,z,a1,L0*.5,e1,$0+1,V0),isNaN(D1)?(V0.nanEncountered=!0,NaN):H1+D1))}function t0(X0,i,u,O,I){var z={maxDepthCount:0,nanEncountered:!1};O===void 0&&(O=1e-9),I===void 0&&(I=45);var p0=X0(i),L0=X0(.5*(i+u)),e1=X0(u),$0=(p0+4*L0+e1)*(u-i)/6,V0=G(X0,i,u,p0,L0,e1,$0,O,I,1,z);if(z.maxDepthCount>0&&h0("integrate-adaptive-simpson: Warning: maximum recursion depth ("+I+") reached "+z.maxDepthCount+" times"),z.nanEncountered)throw new Error("Function does not converge over interval!");return V0}var q0;try{q0=t0(e,l,d,N,_)}catch{return E0.simpson(e,l,d)}return U1(q0,12)},Ci:function(e){for(var l=20,d=.5772156649015329,N=0,_=1;_<l;_++){var G=2*_;N+=Math.pow(-1,_)*Math.pow(e,G)/(G*E0.factorial(G))}return Math.log(e)+d+N},Si:function(e){for(var l=20,d=0,N=0;N<l;N++){var _=2*N;d+=Math.pow(-1,N)*Math.pow(e,_+1)/((_+1)*E0.factorial(_+1))}return d},Ei:function(e){if(Number(e)===0)return-1/0;for(var l=30,d=.5772156649015329,N=0,_=1;_<l;_++)N+=Math.pow(e,_)/(_*E0.factorial(_));return d+Math.abs(Math.log(e))+N},Shi:function(e){for(var l=30,d=0,N,_,G=0;G<l;G++)N=2*G,_=N+1,d+=Math.pow(e,_)/(_*_*E0.factorial(N));return d},Chi:function(e){var l,d,N;return l=.001,d=.5772156649015329,N=function(_){return(Math.cosh(_)-1)/_},Math.log(e)+d+E0.num_integrate(N,.002,e,l)},Li:function(e){return E0.Ei(E0.bigLog(e))},gamma_incomplete:function(e,_){for(var d=e-1,N=0,_=_||0,G=0;G<d;G++)N+=Math.pow(_,G)/E0.factorial(G);return E0.factorial(d)*Math.exp(-_)*N},step:function(e){return e>0?1:e<0?0:.5},rect:function(l){var l=Math.abs(l);return l===.5?l:l>.5?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return e=Math.abs(e),e>=1?0:1-e},nthroot:function(e,l){if(e instanceof x0||(e=new x0(e.toString())),l instanceof x0||(l=new x0(l.toString())),l.equals(1))return e;var d=e.divide(new x0(2)),N=new x0(1e-15),_,G,t0,q0=l.clone().invert(),X0=l.subtract(new x0(1));do{var i=E0.bigpow(d,X0),u=q0.multiply(e.divide(i).subtract(d)).toDecimal(25);if(_=x0.create(u),t0)break;d=d.add(_);var u=_.toDecimal();t0=G?G===u:!1,G=u}while(_.abs().gte(N));return d},sqrt:function(e){e instanceof x0||(e=new x0(e));var l,d,N,_,G=0,t0=!1,q0=new x0(1e-20);l=e.divide(new x0(2));var X0=1e3;do{if(G>X0)throw new Error("Unable to calculate square root for "+e);l=l.add(e.divide(l)).divide(new x0(2)),l=new x0(l.decimal(30)),d=e.subtract(l.multiply(l)),_=N?N.equals(d):!1,(d.clone().abs().lessThan(q0)||_)&&(t0=!0),N=d,G++}while(!t0);return l}};W.FUNCTION_MODULES.push(E0),L2(E0),Math.sign=Math.sign||function(e){return e=+e,e===0||isNaN(e)?e:e>0?1:-1},Math.cosh=Math.cosh||function(e){var l=Math.exp(e);return(l+1/l)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){var l=Math.exp(e);return(l-1/l)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;var l=Math.exp(2*e);return(l-1)/(l+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:e>0?Math.floor(e):Math.ceil(e)};function U0(e,l,d,N){var _=l==="hash",G=void 0,t0=_?void 0:l,q0=t0==="decimal"||t0==="decimals";q0&&typeof N>"u"&&(N=W.DEFAULT_DECP);function X0(J1){switch(l){case"decimals":case"decimal":return G=G||function(e3){return!1},J1.valueOf();case"recurring":G=G||function(e3){return e3.indexOf("'")!==-1};var N2=J1.toString(),P2=/^-?\d+(?:\/\d+)?$/.exec(N2);if(P2.length===0)return N2;var $2=P2[0].split("/"),H1=!1,D1=Number($2[0]);D1<0&&(D1=-D1,H1=!0);var W1=Number($2[1]);W1||(W1=1);var Q2=Math.floor(D1/W1),t2=10*(D1-Q2*W1);for(Q2=Q2.toString()+".";t2&&t2<W1;)t2*=10,Q2+="0";for(var Z1="",s1=[],Y1=0;;){if(typeof s1[t2]<"u"){var B1=Z1.slice(0,s1[t2]),K1=Z1.slice(s1[t2]),m2=Q2+B1+"'"+K1+"'";return(H1?"-":"")+m2.replace("'0'","").replace(/\.$/,"")}var M2=Math.floor(t2/W1),w2=t2-M2*W1;s1[t2]=Y1,Z1+=M2.toString(),Y1+=1,t2=10*w2}case"mixed":G=G||function(e3){return e3.indexOf("/")!==-1};var N2=J1.toString(),P2=/^-?\d+(?:\/\d+)?$/.exec(N2);if(P2.length===0)return N2;var $2=P2[0].split("/"),J2=new R0($2[0]),m3=new R0($2[1]);m3.equals(0)&&(m3=new R0(1));var b3=J2.divmod(m3),Q2=b3.quotient,v3=b3.remainder,X2=$2[0][0]==="-"||Q2.equals(0)||v3.equals(0)?"":"+";return(Q2.equals(0)?"":Q2.toString())+X2+(v3.equals(0)?"":v3.toString()+"/"+$2[1]);case"scientific":return G=G||function(e3){return!1},new S1(J1.valueOf()).toString(W.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return G=G||function(e3){return e3.indexOf("/")!==-1},J1.toString()}}if(a0(e)){var i="",u="",O="",I=e.group||d,z=e.value;if(!_){var p0=X0(e.multiplier);p0=="-1"&&String(e.multiplier)==="-1"&&(O="-",p0="1"),p0!="1"&&(i=p0);var L0=e.power?X0(e.power):"";L0!="1"&&(a0(L0)?u=U0(L0,t0):u=L0)}switch(I){case j:i="";var e1=N&&q0?e.multiplier.toDecimal(N):X0(e.multiplier);z=String(e.multiplier)=="-1"?"1":e1,u="";break;case k0:z=e.collectSymbols().map(function(J1){var H1=U0(J1,t0,d,N);return H1=="0"&&(H1=""),H1}).sort().join("+").replace(/\+\-/g,"-");break;case Q0:z=e.collectSymbols().map(function(J1){var H1=U0(J1,t0,d,N);return H1=="0"&&(H1=""),H1}).sort().join("+").replace(/\+\-/g,"-");break;case l0:z=e.collectSymbols(function(J1){var H1=J1.group;return(H1===k0||H1===Q0)&&J1.power.equals(1)&&J1.multiplier.equals(1)?c0(U0(J1,t0)):U0(J1,t0)}).join("*");break;case o1:var $0=e.previousGroup,V0=e.power.group;$0===k0&&(z=e.collectSymbols(U0,t0).join("+").replace("+-","-")),!($0===j||$0===T0||$0===K0)&&!_&&(z=c0(z)),(V0===Q0||V0===l0||V0===k0||e.power.multiplier.toString()!="1")&&u&&(u=c0(u));break}if(I===K0&&(z=e.fname+c0(e.args.map(function(J1){return U0(J1,t0)}).join(","))),I===K0&&e.fname in N0){var M1=U0(e.args[0]),W0=U0(e.args[1]);e.args[0].isComposite()&&(M1=c0(M1)),e.args[1].isComposite()&&(W0=c0(W0)),z=M1+N0[e.fname]+W0}u&&I!==o1&&G(u)&&(u=c0(u)),((I===Q0||I===k0)&&(i&&i!="1"||O==="-")||(I===l0||I===Q0||I===k0)&&u&&u!="1"||!_&&I===c1&&z==-1||e.fname===f1)&&(z=c0(z)),N&&(l==="decimal"||l==="decimals"&&i)&&(i=U1(i,N));var T1=O+i;if(i&&G(i)&&(T1=c0(T1)),u<0&&(u=c0(u)),i&&(T1=T1+"*"),u){if(z==="e"&&W.E_TO_EXP)return T1+"exp"+c0(u);u=W.POWER_OPERATOR+u}I===o1&&z.charAt(0)==="-"&&(z=c0(z));var w1=T1+z;return e.parens&&(w1=c0(w1)),w1+u}else if(i0(e)){for(var a1=e.elements.length,T1=[],$1=0;$1<a1;$1++)T1.push(e.elements[$1].text(l));return"["+T1.join(",")+"]"}else try{return e.toString()}catch{return""}}function R1(e){if(C1(e))return[e];for(var l=e,d=1,N=[],_=2220446049250313e-31;d<l;){var G=e/d,t0=Math.floor(G),q0=G-t0;if(q0<=_&&d>1){if(C1(d)&&(G0.indexOf(d)===-1&&G0.push(d),N.push(d)),C1(t0)){N.push(t0);break}l=t0}d++}return N.sort(function(X0,i){return X0-i})}R1(314146179365);function t1(e){this.symbol=e}t1.getExpression=function(e,l){(e==="last"||!e)&&(e=b.length),e==="first"&&(e=1);var d=e-1,N=b[d],_=N&&new t1(N);return _},t1.prototype={text:function(e,l){return l=l||W.EXPRESSION_DECP,e=e||"decimals",this.symbol.text_?this.symbol.text_(e):U0(this.symbol,e,void 0,l)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):N1.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(i0(this.symbol)&&this.symbol.dimensions()===0)return this;var e=arguments[0],l,d=1;typeof e=="string"?l=e.charAt(0)==="%"?t1.getExpression(e.substr(1)).text():e:e instanceof t1||a0(e)?l=e.text():(l=this.symbol.text(),d--);var N=arguments[d]||{},_=new t1(F1("PARSE2NUMBER",function(){return Z.parse(l,N)},!0));return _},buildFunction:function(e){return g2.build(this.symbol,e)},isNumber:function(){return x(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return n2(Z.parse(this.symbol)).isImaginary()},variables:function(){return C0(this.symbol)},toString:function(){try{return $(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch{return""}},toDecimal:function(e){W.precision=e;var l=U0(this.symbol,"decimals");return W.precision=void 0,l},isFraction:function(){return n0(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,l){return new t1(this.symbol.sub(Z.parse(e),Z.parse(l)))},operation:function(e,l){return Y(l)?l=l.symbol:a0(l)||(l=Z.parse(l)),new t1(Z[e](this.symbol.clone(),l.clone()))},add:function(e){return this.operation("add",e)},subtract:function(e){return this.operation("subtract",e)},multiply:function(e){return this.operation("multiply",e)},divide:function(e){return this.operation("divide",e)},pow:function(e){return this.operation("pow",e)},expand:function(){return new t1(Z.expand(this.symbol))},each:function(e,l){if(this.symbol.each)this.symbol.each(e,l);else if($(this.symbol))for(var l=0;l<this.symbol.length;l++)e.call(this.symbol,this.symbol[l],l);else e.call(this.symbol)},eq:function(e){a0(e)||(e=Z.parse(e));try{var l=Z.subtract(this.symbol.clone(),e);return l.equals(0)}catch{return!1}},lt:function(e){a0(e)||(e=Z.parse(e));try{var l=n2(Z.subtract(this.symbol.clone(),e));return l.lessThan(0)}catch{return!1}},gt:function(e){a0(e)||(e=Z.parse(e));try{var l=n2(Z.subtract(this.symbol.clone(),e));return l.greaterThan(0)}catch{return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new t1(this.symbol.getNum())},denominator:function(){return new t1(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}},t1.prototype.toTeX=t1.prototype.latex;function S1(e){return this instanceof S1?(e=String(typeof e>"u"?0:e),e.startsWith("-")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,S1.isScientific(e)?this.fromScientific(e):this.convert(e),this):new S1(e)}S1.prototype={fromScientific:function(e){var l=String(e).toLowerCase().split("e");return this.coeff=l[0],this.exponent=l[1],this},convert:function(e){var l=e.split("."),d=l[0]||"",N=l[1]||"";d=S1.removeLeadingZeroes(d),N=S1.removeTrailingZeroes(N);var _=d.length,G=d+N,t0=S1.leadingZeroes(G).length;this.exponent=_-(t0+1);var q0=S1.removeLeadingZeroes(G);this.coeff=q0.charAt(0)+"."+(q0.substr(1,q0.length)||"0");var X0=this.coeff.split(".")[1]||"";return this.decp=X0==="0"?0:X0.length,this.dec=N,this.wholes=d,this},round:function(e){var l=this.copy();if(e=Number(e),e===0)l.coeff=l.coeff.charAt(0);else{var d=this.coeff.substring(0,e+1),N=this.coeff.substring(e+1,e+3),_=N.charAt(0);N.charAt(1)>4&&_++,l.coeff=d+_}return l},copy:function(){var e=new S1(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var l;if(W.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&this.exponent===0&&this.decp<e)this.decp===0?l=this.wholes:l=this.coeff;else{var d=typeof e>"u"?this.coeff:S1.round(this.coeff,Math.min(e,this.decp||1));l=this.exponent===0?d:d+"e"+this.exponent}return(this.sign===-1?"-":"")+l}},S1.isScientific=function(e){return/\d+\.?\d*e[\+\-]*\d+/i.test(e)},S1.leadingZeroes=function(e){var l=e.match(/^(0*).*$/);return l?l[1]:""},S1.removeLeadingZeroes=function(e){var l=e.match(/^0*(.*)$/);return l?l[1]:""},S1.removeTrailingZeroes=function(e){var l=e.match(/0*$/);return l?e.substring(0,e.length-l[0].length):""},S1.round=function(e,l){var d=U1(e,l),N=String(d).split(".").pop(),_=l-N.length;return _>0&&(d=d+new Array(_+1).join(0)),d};function x0(e){if(e instanceof x0)return e;if(e===void 0)return this;try{if(o0(e))try{this.num=R0(e),this.den=R0(1)}catch{return x0.simple(e)}else{var l=e instanceof E1?X1.quickConversion(e):X1.convert(e);this.num=new R0(l[0]),this.den=new R0(l[1])}}catch{return x0.simple(e)}}x0.create=function(e){if(e instanceof x0)return e;e=e.toString();var l=e.charAt(0)==="-";l&&(e=e.substr(1,e.length-1));var d=new x0(e);return l&&d.negate(),d},x0.isFrac=function(e){return e instanceof x0},x0.quick=function(e,l){var d=new x0;return d.num=new R0(e),d.den=new R0(l),d},x0.simple=function(e){for(var l=String(g0(e)),d=l.split("."),N=d.join(""),_=1,G=(d[1]||"").length,t0=0;t0<G;t0++)_+="0";var q0=x0.quick(N,_);return q0.simplify()},x0.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var l=this.clone();return l.num=l.num.multiply(e.num),l.den=l.den.multiply(e.den),l.simplify()},divide:function(e){if(e.equals(0))throw new f("Division by zero not allowed!");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var l=this.den,d=e.den,N=this.clone(),_=N.num,G=e.num;return l.equals(d)?N.num=_.add(G):(N.num=_.multiply(d).add(G.multiply(l)),N.den=l.multiply(d)),N.simplify()},mod:function(e){var l=this.clone(),d=e.clone();return l.num=l.num.multiply(d.den),l.den=l.den.multiply(d.den),d.num=d.num.multiply(this.den),d.den=d.den.multiply(this.den),l.num=l.num.mod(d.num),l.simplify()},simplify:function(){var e=R0.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new x0;return e.num=new R0(this.num),e.den=new R0(this.den),e},decimal:function(e){var l=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";e=e||W.PRECISION,e++;for(var d=[],N=this.num.abs(),_=this.den,G=0;G<e;G++){var t0=N.divide(_),q0=N.subtract(t0.multiply(_));if(d.push(t0),q0.equals(0))break;N=q0.times(10)}var X0=d.shift();if(d.length===0)return l+X0.toString();if(G===e){for(var i=[],G=0;G<2;G++)i.unshift(d.pop());d.push(Math.round(i.join(".")))}var u=X0.toString()+"."+d.join("");return l+u},toDecimal:function(e){return e=e||W.PRECISION,e?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new x0(e));var l=this.qcompare(e);return l[0].equals(l[1])},absEquals:function(e){isNaN(e)||(e=new x0(e));var l=this.qcompare(e);return l[0].abs().equals(l[1])},greaterThan:function(e){isNaN(e)||(e=new x0(e));var l=this.qcompare(e);return l[0].gt(l[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new x0(e));var l=this.qcompare(e);return l[0].lt(l[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e=this.den;if(!this.num.equals(0)){var l=this.num.isNegative();this.den=this.num.abs(),this.num=e,l&&(this.num=this.num.multiply(-1))}return this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return x0.quick(R0.gcd(e.num,this.num),R0.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){if(W.USE_BIG)return new E1(this.num.toString()).div(new E1(this.den.toString()));var e=this.num/this.den;return e},isNegative:function(){return this.toDecimal()<0}};function P(e){var l=e==="Infinity";return this instanceof P?(e instanceof E1&&(e=e.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(e)||e instanceof E1?(this.group=j,this.value=A1,this.multiplier=new x0(e)):(this.group=T0,y0(e),this.value=e,this.multiplier=new x0(1),this.imaginary=e===W.IMAGINARY,this.isInfinity=l),this.power=new x0(1),this):new P(e)}P.imaginary=function(){var e=new P(W.IMAGINARY);return e.imaginary=!0,e},P.infinity=function(e){var l=new P("Infinity");return e===-1&&l.negate(),l},P.shell=function(e,l){var d=new P(l);return d.group=e,d.symbols={},d.length=0,d},P.unwrapSQRT=function(e,l){var d=e.power;if(e.fname===h1&&(e.isLinear()||l)){var N=e.args[0].clone();N.power=N.power.multiply(new x0(.5)),N.multiplier=N.multiplier.multiply(e.multiplier),e=N,l&&(e.power=d.multiply(new x0(.5)))}return e},P.hyp=function(e,l){return e=e||new P(0),l=l||new P(0),Z.sqrt(Z.add(Z.pow(e.clone(),new P(2)),Z.pow(l.clone(),new P(2))))},P.toPolarFormArray=function(e){var l,d,N,_;return l=e.realpart(),d=e.imagpart(),N=P.hyp(l,d),_=l.equals(0)?Z.parse("pi/2"):Z.trig.atan(Z.divide(d,l)),[N,_]},P.unwrapPARENS=function(e){if(e.fname===""){var l=e.args[0];return l.power=l.power.multiply(e.power),l.multiplier=l.multiplier.multiply(e.multiplier),e.fname===""?P.unwrapPARENS(l):l}return e},P.create=function(e,l){return l=l===void 0?1:l,Z.parse("("+e+")^("+l+")")},P.prototype={getNth:function(e){var l=n2(Z.pow(Z.parse(this.multiplier),Z.parse(e).invert())),d=Z.parse(U1(l)),N=n2(Z.pow(d,Z.parse(e)));return N.equals(Z.parse(this.multiplier))?d:l},isToNth:function(e){var l=this.getNth(e),d=o0(l),N;return this.group===l0?(N=!0,this.each(function(_){var G=_.isToNth(e);G||(N=!1)})):N=this.group===j?!0:o0(Z.divide(Z.parse(this.power),Z.parse(e))),d&&N},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group===l0){var e=[],d=this.multiplier.sign();this.each(function(O){var I=O.power;if(a0(I)||I.equals(1))return this.clone();e.push(I)});var l=new x0(O0(e)),d=this.multiplier.sign(),N=this.multiplier.clone().abs(),_=E0.ifactor(N),G=new x0(1),t0=new x0(1);for(var q0 in _){var X0=new x0(_[q0]);X0.lessThan(l)||(X0=X0.divide(l).subtract(new x0(1)),t0=t0.multiply(new x0(q0))),G=G.multiply(Z.parse(c0(q0)+"^"+c0(X0)).multiplier)}var i=new P(t0);this.each(function(O){O=O.clone(),O.power=O.power.divide(l),i=Z.multiply(i,O)});var u=Z.symfunction(f1,[i]);return u.power=l,u.multiplier=d<0?G.negate():G,u}return this.clone()},equals:function(e){return a0(e)||(e=new P(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return a0(e)||(e=new P(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return a0(e)||(e=new P(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return a0(e)||(e=new P(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return a0(e)||(e=new P(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var l=this.group,d=this.power;if(!o0(d)||d<0)return!1;if(l===j||l===T0||this.isConstant(!0))return!0;var N=C0(this);if(l===l0&&N.length===1){var _=N[0];if(!_)return!0;for(var G in this.symbols){var t0=this.symbols[G];if(t0.group===K0&&!t0.args[0].isConstant()||!t0.contains(_)&&!t0.isConstant(!0))return!1}return!0}if(this.isComposite()||l===l0&&e){if(!e&&N.length>1)return!1;for(var G in this.symbols)if(!this.symbols[G].isPoly(e))return!1;return!0}else return!1},stripVar:function(e,l){var d;return(this.group===k0||this.group===T0)&&this.value===e?d=new P(l?0:this.multiplier):this.group===l0&&this.isLinear()?(d=new P(1),this.each(function(N){N.contains(e,!0)||(d=Z.multiply(d,N.clone()))}),d.multiplier=d.multiplier.multiply(this.multiplier)):this.group===Q0&&!this.isLinear()?d=new P(this.multiplier):this.group===Q0&&this.isLinear()?(d=new P(0),this.each(function(N){if(!N.contains(e)){var _=N.clone();_.multiplier=_.multiplier.multiply(this.multiplier),d=Z.add(d,_)}}),d.equals(0)&&(d=new P(this.multiplier))):this.group===o1&&this.power.contains(e,!0)?d=new P(this.multiplier):this.group===K0&&this.contains(e)?d=new P(this.multiplier):d=this.clone(),d},toArray:function(e,l){l=l||{arr:[],add:function(q0,X0){var i=this.arr[X0];this.arr[X0]=i?Z.add(i,q0):q0}};var d=this.group;if(d===T0&&this.contains(e))l.add(new P(this.multiplier),this.power);else if(d===l0){var N=this.stripVar(e),_=Z.divide(this.clone(),N.clone()),G=_.isConstant()?0:_.power;l.add(N,G)}else if(d===k0&&this.value===e)this.each(function(q0,X0){l.add(q0.stripVar(e),X0)});else if(d===Q0)this.each(function(q0){q0.toArray(e,l)});else{if(this.contains(e))throw new D("Cannot convert to array! Exiting");l.add(this.clone(),0)}l=l.arr;for(var t0=0;t0<l.length;t0++)l[t0]||(l[t0]=new P(0));return l},hasFunc:function(e){var l=this.group===K0||this.group===o1;if(l&&!e||l&&this.contains(e))return!0;if(this.symbols){for(var d in this.symbols)if(this.symbols[d].hasFunc(e))return!0}return!1},sub:function(e,l){e=a0(e)?e.clone():Z.parse(e),l=a0(l)?l.clone():Z.parse(l),(e.group===j||e.group===c1)&&C("Cannot substitute a number. Must be a variable");var d=!1,N=e.multiplier.equals(1),_=this.multiplier.clone(),G;if(this.value===e.value&&(this.group!==k0&&e.group!==k0||this.group===k0&&e.group===k0))(N||e.multiplier.equals(this.multiplier))&&(e.isLinear()?G=l:e.power.equals(this.power)&&(G=l,d=!0),e.multiplier.equals(this.multiplier)&&(_=new x0(1)));else if(this.group===l0||this.previousGroup===l0)G=new P(1),this.each(function(z){var p0=Z.parse(z.sub(e,l));G=Z.multiply(G,p0)});else if(this.isComposite()){var t0=this.clone();if(e.isComposite()&&t0.isComposite()&&t0.isLinear()&&e.isLinear()){var q0=function(z,p0){for(var L0 in z.symbols){var e1=z.symbols[L0];if(e1.isComposite()&&q0(e1,p0)||e1.equals(p0))return!0}return!1};for(var X0 in e.symbols)if(!q0(t0,e.symbols[X0]))return t0.clone();G=Z.add(Z.subtract(t0.clone(),e),l)}else G=new P(0),t0.each(function(z){G=Z.add(G,z.sub(e,l))})}else if(this.group===o1)G=Z.parse(this.value).sub(e,l);else if(this.group===K0){for(var i=[],u=0;u<this.args.length;u++){var O=this.args[u];a0(O)||(O=Z.parse(O)),i.push(O.sub(e,l))}G=Z.symfunction(this.fname,i)}if(G){if(!d){var I=this.group===o1?this.power.sub(e,l):Z.parse(this.power);G=Z.pow(G,I)}return G.multiplier=G.multiplier.multiply(_),G}return this.clone()},isMonomial:function(){if(this.group===T0)return!0;if(this.group===l0){for(var e in this.symbols)if(this.symbols[e].group!==T0)return!1}else return!1;return!0},isPi:function(){return this.group===T0&&this.value==="pi"},sign:function(){return this.multiplier.sign()},isE:function(){return this.value==="e"},isSQRT:function(){return this.fname===h1},isConstant:function(e,l){if(l&&this.group===l0){for(var d in this.symbols)if(this.symbols[d].isConstant(!0))return!0}if(e==="functions"&&this.isComposite()){var N=!0;return this.each(function(G){G.isConstant(e,l)||(N=!1)},!0),N}if(e==="all"&&(this.isPi()||this.isE()))return!0;if(e&&this.group===K0){for(var _=0;_<this.args.length;_++)if(!this.args[_].isConstant(e))return!1;return!0}return e?x(this):this.value===A1},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols){for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0}return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new P(0);if(this.isComposite()){var e=new P(0);return this.each(function(l){e=Z.add(e,l.realpart())}),e}else if(this.isImaginary())return new P(0);return this.clone()},imagpart:function(){if(this.group===T0&&this.isImaginary())return new P(this.multiplier);if(this.isComposite()){var e=new P(0);return this.each(function(l){e=Z.add(e,l.imagpart())}),e}return this.group===l0?this.stripVar(W.IMAGINARY):new P(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===T0)return this.value===e?this.power.equals(1):!0;if(this.isComposite()&&this.power.equals(1)){for(var l in this.symbols)if(!this.symbols[l].isLinear(e))return!1;return!0}return this.group===l0&&this.symbols[e]?this.symbols[e].isLinear(e):!1}else return this.power.equals(1)},containsFunction:function(e){if(typeof e=="string"&&(e=[e]),this.group===K0&&e.indexOf(this.fname)!==-1)return!0;if(this.symbols){for(var l in this.symbols)if(this.symbols[l].containsFunction(e))return!0}return!1},multiplyPower:function(e){if(this.group===j&&this.multiplier.equals(1))return this;var l=this.power;if(this.group!==o1&&e.group===j){var d=e.multiplier;this.group===j&&!d.isInteger()&&this.convert(c1),this.power=l.equals(1)?d.clone():l.multiply(d),this.group===c1&&o0(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(j))}else this.group!==o1&&(l=new P(l),this.convert(o1)),this.power=Z.multiply(l,e);return this},setPower:function(e,l){if(this.group===j&&this.multiplier.equals(1))return this;if(this.group===o1&&!a0(e))this.group=this.previousGroup,delete this.previousGroup,this.group===j?(this.multiplier=new x0(this.value),this.value=A1):this.power=e;else{var d=!1;a0(e)&&(e.group===j?e=e.multiplier:d=!0);var N=d?o1:c1;this.power=e,this.group===j&&N&&this.convert(N,l)}return this},isInverse:function(){return this.group===o1?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var l=e||new P(0),d=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],N=d.length,_;if(this.symbols){l.symbols={};for(var G in this.symbols)l.symbols[G]=this.symbols[G].clone()}for(_=0;_<N;_++)this[d[_]]!==void 0&&(l[d[_]]=this[d[_]]);return l.power=this.power.clone(),l.multiplier=this.multiplier.clone(),this.isConversion&&(l.isConversion=this.isConversion),this.isUnit&&(l.isUnit=this.isUnit),l},toUnitMultiplier:function(e){return this.multiplier.num=new R0(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new R0(1),this},toLinear:function(){return this.power.equals(1)?this:(this.setPower(new x0(1)),this)},each:function(e,l){if(!this.symbols)e.call(this,this,this.value);else for(var d in this.symbols){var N=this.symbols[d];if(N.group===k0&&l)for(var _ in N.symbols)e.call(d,N.symbols[_],_);else e.call(this,N,d)}},valueOf:function(){return this.group===j?this.multiplier.valueOf():this.power===0?1:this.multiplier===0?0:U0(this,"decimals")},contains:function(e,l){e=String(e);var d=this.group;if(this.value===e)return!0;if(this.symbols){for(var N in this.symbols)if(this.symbols[N].contains(e,l))return!0}if(d===K0||this.previousGroup===K0){for(var _=0;_<this.args.length;_++)if(this.args[_].contains(e,l))return!0}return d===o1&&(l&&this.power.contains(e,l)||this.value===e)?!0:this.value===e},negate:function(){return this.multiplier.negate(),(this.group===Q0||this.group===k0)&&this.distributeMultiplier(),this},invert:function(e,l){return e||(this.multiplier=this.multiplier.invert()),a0(this.power)?this.power.negate():this.group===l0&&l?this.each(function(d){return d.invert()}):this.power&&this.group!==j&&this.power.negate(),this},distributeMultiplier:function(e){var l=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&l&&this.group!==l0&&!this.multiplier.equals(1)){for(var d in this.symbols){var N=this.symbols[d];N.multiplier=N.multiplier.multiply(this.multiplier),N.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e=this.power;for(var l in this.symbols){var d=this.symbols[l];d.group===o1?d.power=Z.multiply(d.power,new P(e)):this.symbols[l].power=this.symbols[l].power.multiply(e)}this.toLinear()}return this},convert:function(e,l){if(e>K0){var d=this.clone();this.symbols={},e===l0?d.toUnitMultiplier():this.toUnitMultiplier(),this.group===K0&&(d.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[d.keyForGroup(e)]=d,this.group=e,this.length=1}else if(e===o1)this.group===j&&this.multiplier.equals(1)||(this.group!==o1&&(this.previousGroup=this.group),this.group===j?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=U0(this,"hash"),this.group=o1);else if(e===j){var N=this.multiplier.toDecimal();this.symbols&&(this.symbols=void 0),new P(this.group===c1?N*Math.pow(this.value,this.power):N).clone(this)}else e===c1&&this.group===j&&(this.value=l?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!l),this.group=c1);return this},insert:function(e,l){if(a0(e)||C("Object "+e+" is not of type Symbol!"),this.symbols){var d=this.group;if(d>K0){var N=e.keyForGroup(d),_=N in this.symbols?this.symbols[N]:!1;if(l==="add"){var G=N;_?(this.symbols[G]=Z.add(_,e),this.symbols[G].multiplier.equals(0)&&(delete this.symbols[G],this.length--,this.length===0&&(this.convert(j),this.multiplier=new x0(0)))):(this.symbols[N]=e,this.length++)}else e.group===c1&&o0(e.power)&&e.convert(j),e.group!==o1?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),_&&(e=Z.multiply(q2(this.symbols,N),e),e.isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new P(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[N]=e,this.length++);this.length===0&&this.convert(j),(this.group===Q0||this.group===l0)&&this.updateHash()}}return this},attach:function(e){if($(e)){for(var l=0;l<e.length;l++)this.insert(e[l],"add");return this}return this.insert(e,"add")},combine:function(e){if($(e)){for(var l=0;l<e.length;l++)this.insert(e[l],"multiply");return this}return this.insert(e,"multiply")},updateHash:function(){if(this.group!==j)if(this.group===K0){for(var e="",l=this.args,d=this.fname===f1,N=0;N<l.length;N++)e+=(N===0?"":",")+U0(l[N]);var _=d?"":this.fname;this.value=_+(d?e:c0(e))}else this.group===T0||this.group===k0||(this.value=U0(this,"hash"))},keyForGroup:function(e){var l=this.group,d;if(l===j)d=this.value;else if(l===T0||l===c1)e===k0?d=this.power.toDecimal():d=this.value;else if(l===K0)e===k0?d=this.power.toDecimal():d=U0(this,"hash");else{if(l===k0)return e===l0?d=U0(this,"hash"):e===Q0?this.power.equals(1)?d=this.value:d=c0(U0(this,"hash"))+W.POWER_OPERATOR+this.power.toDecimal():e===k0?d=this.power.toString():d=this.value,d;l===Q0?(e===Q0&&(d=U0(this,"hash")),e===k0?d=this.power.toDecimal():d=this.value):l===l0?e===k0?d=this.power.toDecimal():d=U0(this,"hash"):l===o1&&(e===k0?d=U0(this.power):d=U0(this,"hash"))}return d},collectSymbols:function(e,l,d,N){var _=[];if(!this.symbols)_.push(this);else for(var G in this.symbols){var t0=this.symbols[G];N&&(t0.group===k0||t0.group===Q0)?_=_.concat(t0.collectSymbols()):_.push(e?e(t0,l):t0)}return d===null&&(d=void 0),_.sort(d)},latex:function(e){return N1.latex(this,e)},text:function(e){return U0(this,e)},isOne:function(e){var l=e?"absEquals":"equals";return this.group===j?this.multiplier[l](1):this.power.equals(0)},isComposite:function(){var e=this.group,l=this.previousGroup;return e===Q0||e===k0||l===k0||l===Q0},isCombination:function(){var e=this.group,l=this.previousGroup;return e===l0||l===l0},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return a0(e)||(e=new P(e)),!this.isConstant(!0)||!e.isConstant(!0)?!1:this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e,l;if(l=this.clone(),this.group===l0&&this.power.lessThan(0)&&(l=Z.expand(l)),l.power.lessThan(0)||l.group===o1&&l.power.multiplier.lessThan(0)){var d=Z.parse(l.multiplier.den);e=l.toUnitMultiplier(),e.power.negate(),e=Z.multiply(d,e)}else if(l.group===l0){e=Z.parse(l.multiplier.den);for(var N in l.symbols){var _=l.symbols[N];(_.power<0||_.group===o1&&_.power.multiplier.lessThan(0))&&(e=Z.multiply(e,l.symbols[N].clone().invert()))}}else e=Z.parse(l.multiplier.den);return e},getNum:function(){var e,l;return l=this.clone(),l.group===l0&&l.power.lessThan(0)&&(l=Z.expand(l)),l.power.greaterThan(0)&&l.group!==l0||l.group===o1&&l.power.multiplier.greaterThan(0)?e=Z.multiply(Z.parse(l.multiplier.num),l.toUnitMultiplier()):l.group===l0?(e=Z.parse(l.multiplier.num),l.each(function(d){(d.power>0||d.group===o1&&d.power.multiplier>0)&&(e=Z.multiply(e,d.clone()))})):e=Z.parse(l.multiplier.num),e},toString:function(){return this.text()}};function V1(){var e=this,l={},d={names:[],actions:[]};function N(o,c){this.start=o,this.end=c}N.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},N.prototype.text=function(){return U0(this.start)+":"+U0(this.end)};function _(){this.elements=[]}_.prototype.append=function(o){this.elements.push(o)},_.prototype.getItems=function(){return this.elements},_.prototype.toString=function(){return e.pretty_print(this.elements)},_.create=function(o){var c=new _;return o&&c.append(o),c};function G(o,c,k){if(this.type=c,this.value=o,k!==void 0&&(this.column=k+1),c===G.OPERATOR){var J=i[o];for(var w0 in J)this[w0]=J[w0]}else c===G.FUNCTION&&(this.precedence=G.MAX_PRECEDENCE,this.leftAssoc=!1)}G.prototype.toString=function(){return this.value},G.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},G.OPERATOR="OPERATOR",G.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",G.FUNCTION="FUNCTION",G.UNIT="UNIT",G.KEYWORD="KEYWORD",G.MAX_PRECEDENCE=999,this.classes={Collection:_,Slice:N,Token:G};var t0={prec:void 0,cos:function(o,c){var k,J;return k=e.parse(Math.cos(o)*Math.cosh(c)),J=e.parse(Math.sin(o)*Math.sinh(c)),e.subtract(k,e.multiply(J,P.imaginary()))},sin:function(o,c){var k,J;return k=e.parse(Math.sin(o)*Math.cosh(c)),J=e.parse(Math.cos(o)*Math.sinh(c)),e.subtract(k,e.multiply(J,P.imaginary()))},tan:function(o,c){var k,J;return k=e.parse(Math.sin(2*o)/(Math.cos(2*o)+Math.cosh(2*c))),J=e.parse(Math.sinh(2*c)/(Math.cos(2*o)+Math.cosh(2*c))),e.add(k,e.multiply(J,P.imaginary()))},sec:function(o,c){var k=this.removeDen(this.cos(o,c));return e.subtract(k[0],e.multiply(k[1],P.imaginary()))},csc:function(o,c){var k=this.removeDen(this.sin(o,c));return e.add(k[0],e.multiply(k[1],P.imaginary()))},cot:function(o,c){var k=this.removeDen(this.tan(o,c));return e.subtract(k[0],e.multiply(k[1],P.imaginary()))},acos:function(o,c){var k,J,w0,_0,J0,r1;return k=this.fromArray([o,c]),r1=e.pow(k.clone(),new P(2)),J=e.expand(r1),w0=e.multiply(Z1(e.subtract(new P(1),J)),P.imaginary()),_0=e.expand(e.add(k.clone(),w0)),J0=X2(_0),e.expand(e.multiply(P.imaginary().negate(),J0))},asin:function(o,c){return e.subtract(e.parse("pi/2"),this.acos(o,c))},atan:function(o,c){if(o.equals(0)&&(c.equals(1)||c.equals(-1)))return e.parse(`${P.infinity()}*${W.IMAGINARY}*${c}`);var k,J,w0,_0;return _0=t0.fromArray([o,c]),k=e.expand(e.multiply(P.imaginary(),_0.clone())),J=X2(e.expand(e.subtract(new P(1),k.clone()))),w0=X2(e.expand(e.add(new P(1),k.clone()))),e.expand(e.multiply(e.divide(P.imaginary(),new P(2)),e.subtract(J,w0)))},asec:function(o,c){var k=this.removeDen([o,c]);return k[1].negate(),this.acos.apply(this,k)},acsc:function(o,c){var k=this.removeDen([o,c]);return k[1].negate(),this.asin.apply(this,k)},acot:function(o,c){var k=this.removeDen([o,c]);return k[1].negate(),this.atan.apply(this,k)},cosh:function(o,c){var k,J;return k=e.parse(Math.cosh(o)*Math.cos(c)),J=e.parse(Math.sinh(o)*Math.sin(c)),e.add(k,e.multiply(J,P.imaginary()))},sinh:function(o,c){var k,J;return k=e.parse(Math.sinh(o)*Math.cos(c)),J=e.parse(Math.cosh(o)*Math.sin(c)),e.add(k,e.multiply(J,P.imaginary()))},tanh:function(o,c){var k,J;return k=e.parse(Math.sinh(2*o)/(Math.cos(2*c)+Math.cosh(2*o))),J=e.parse(Math.sin(2*c)/(Math.cos(2*c)+Math.cosh(2*o))),e.subtract(k,e.multiply(J,P.imaginary()))},sech:function(o,c){var k=this.removeDen(this.cosh(o,c));return e.subtract(k[0],e.multiply(k[1],P.imaginary()))},csch:function(o,c){var k=this.removeDen(this.sinh(o,c));return e.subtract(k[0],e.multiply(k[1],P.imaginary()))},coth:function(o,c){var k=this.removeDen(this.tanh(o,c));return e.add(k[0],e.multiply(k[1],P.imaginary()))},acosh:function(o,c){var k,J,w0;return w0=this.fromArray([o,c]),k=Z1(e.add(w0.clone(),new P(1))),J=Z1(e.subtract(w0.clone(),new P(1))),e.expand(X2(e.add(w0,e.expand(e.multiply(k,J)))))},asinh:function(o,c){var k,J;return J=this.fromArray([o,c]),k=Z1(e.add(new P(1),e.expand(e.pow(J.clone(),new P(2))))),e.expand(X2(e.add(J,k)))},atanh:function(o,c){var k,J,w0;return w0=this.fromArray([o,c]),k=X2(e.add(w0.clone(),new P(1))),J=X2(e.subtract(new P(1),w0)),e.expand(e.divide(e.subtract(k,J),new P(2)))},asech:function(o,c){var k=this.removeDen([o,c]);return k[1].negate(),this.acosh.apply(this,k)},acsch:function(o,c){var k=this.removeDen([o,c]);return k[1].negate(),this.asinh.apply(this,k)},acoth:function(o,c){var k=this.removeDen([o,c]);return k[1].negate(),this.atanh.apply(this,k)},sqrt:function(o){var c,k,J,w0,_0;return c=o.realpart(),k=o.imagpart(),J=P.hyp(c,k),w0=e.add(c.clone(),J),_0=Z1(e.multiply(new P(2),w0.clone())),e.add(e.divide(w0.clone(),_0.clone()),e.multiply(e.divide(k,_0),P.imaginary()))},log:function(o,c){var k,J,w0;return k=X2(P.hyp(o,c)),w0=W.USE_BIG?P(E1.atan2(c.multiplier.toDecimal(),o.multiplier.toDecimal())):Math.atan2(c,o),J=e.parse(w0),e.add(k,e.multiply(P.imaginary(),J))},erf(o,c){return e.symfunction("erf",[o])},removeDen:function(o){var c,k,J,w0,_0;return $(o)?(k=o[0],J=o[1]):(k=o.realpart(),J=o.imagpart()),c=Math.pow(k,2)+Math.pow(J,2),w0=e.parse(k/c),_0=e.parse(J/c),[w0,_0]},fromArray:function(o){return e.add(o[0],e.multiply(P.imaginary(),o[1]))},evaluate:function(o,c){var k,J,w0;if(w0=o.power.sign(),o.power=o.power.abs(),o.power.greaterThan(1)&&(o=e.expand(o)),w0<0){var _0=this.removeDen(o);k=_0[0],J=_0[1]}else k=o.realpart(),J=o.imagpart();return k.isConstant("all")&&J.isConstant("all")?this[c].call(this,k,J):e.symfunction(c,[o])}},q0=this.trig={cos:function(o){if(o.equals("pi")&&o.multiplier.den.equals(2))return new P(0);if(W.PARSE2NUMBER){if(o.equals(new P(W.PI/2)))return new P(0);if(o.isConstant())return W.USE_BIG?new P(E1.cos(o.multiplier.toDecimal())):new P(Math.cos(o.valueOf()));if(o.isImaginary())return t0.evaluate(o,"cos")}if(o.equals(0))return new P(1);var c,k=!1,J=f3(o.multiplier.toDecimal()),w0=o.multiplier.abs();if(o.multiplier=w0,o.isPi()&&o.isLinear())if(o0(w0))c=new P(j1(w0)?1:-1);else{Number(w0.num);var _0=Number(w0.den);_0===2?c=new P(0):_0===3?(c=e.parse("1/2"),k=!0):_0===4?(c=e.parse("1/sqrt(2)"),k=!0):_0===6?(c=e.parse("sqrt(3)/2"),k=!0):c=e.symfunction("cos",[o])}return k&&(J===2||J===3)&&c.negate(),c||(c=e.symfunction("cos",[o])),c},sin:function(o){if(W.PARSE2NUMBER){if(o.isConstant())return o%Math.PI===0?new P(0):W.USE_BIG?new P(E1.sin(o.multiplier.toDecimal())):new P(Math.sin(o.valueOf()));if(o.isImaginary())return t0.evaluate(o,"sin")}if(o.equals(0))return new P(0);var c,k=!1,J=f3(o.multiplier.toDecimal()),w0=o.multiplier.sign(),_0=o.multiplier.abs();if(o.multiplier=_0,o.equals("pi"))c=new P(0);else if(o.isPi()&&o.isLinear())if(o0(_0))c=new P(0);else{_0.num;var J0=_0.den;J0==2?(c=new P(1),k=!0):J0==3?(c=e.parse("sqrt(3)/2"),k=!0):J0==4?(c=e.parse("1/sqrt(2)"),k=!0):J0==6?(c=e.parse("1/2"),k=!0):c=e.multiply(new P(w0),e.symfunction("sin",[o]))}return c||(c=e.multiply(new P(w0),e.symfunction("sin",[o]))),k&&(J===3||J===4)&&c.negate(),c},tan:function(o){if(W.PARSE2NUMBER){if(o%Math.PI===0&&o.isLinear())return new P(0);if(o.isConstant())return W.USE_BIG?new P(E1.tan(o.multiplier.toDecimal())):new P(Math.tan(o.valueOf()));if(o.isImaginary())return t0.evaluate(o,"tan")}var c,k=!1,J=f3(o.multiplier.toDecimal()),w0=o.multiplier;if(o.multiplier=w0,o.isPi()&&o.isLinear())if(o0(w0))c=new P(0);else{w0.num;var _0=w0.den;if(_0==2)throw new m("tan is undefined for "+o.toString());_0==3?(c=e.parse("sqrt(3)"),k=!0):_0==4?(c=new P(1),k=!0):_0==6?(c=e.parse("1/sqrt(3)"),k=!0):c=e.symfunction("tan",[o])}return c||(c=e.symfunction("tan",[o])),k&&(J===2||J===4)&&c.negate(),c},sec:function(o){if(W.PARSE2NUMBER)return o.isConstant()?W.USE_BIG?new P(new E1(1).dividedBy(E1.cos(o.multiplier.toDecimal()))):new P(E0.sec(o.valueOf())):o.isImaginary()?t0.evaluate(o,"sec"):e.parse(P1("1/cos({0})",o));var c,k=!1,J=f3(o.multiplier.toDecimal()),w0=o.multiplier.abs();if(o.multiplier=w0,o.isPi()&&o.isLinear())if(o0(w0))c=new P(j1(w0)?1:-1);else{w0.num;var _0=w0.den;if(_0==2)throw new m("sec is undefined for "+o.toString());_0==3?(c=new P(2),k=!0):_0==4?(c=e.parse("sqrt(2)"),k=!0):_0==6?(c=e.parse("2/sqrt(3)"),k=!0):c=e.symfunction("sec",[o])}return k&&(J===2||J===3)&&c.negate(),c||(c=e.symfunction("sec",[o])),c},csc:function(o){if(W.PARSE2NUMBER)return o.isConstant()?W.USE_BIG?new P(new E1(1).dividedBy(E1.sin(o.multiplier.toDecimal()))):new P(E0.csc(o.valueOf())):o.isImaginary()?t0.evaluate(o,"csc"):e.parse(P1("1/sin({0})",o));var c,k=!1,J=f3(o.multiplier.toDecimal()),w0=o.multiplier.sign(),_0=o.multiplier.abs();if(o.multiplier=_0,o.isPi()&&o.isLinear()){if(o0(_0))throw new m("csc is undefined for "+o.toString());_0.num;var J0=_0.den;J0==2?(c=new P(1),k=!0):J0==3?(c=e.parse("2/sqrt(3)"),k=!0):J0==4?(c=e.parse("sqrt(2)"),k=!0):J0==6?(c=new P(2),k=!0):c=e.multiply(new P(w0),e.symfunction("csc",[o]))}return c||(c=e.multiply(new P(w0),e.symfunction("csc",[o]))),k&&(J===3||J===4)&&c.negate(),c},cot:function(o){if(W.PARSE2NUMBER)return o%(Math.PI/2)===0?new P(0):o.isConstant()?W.USE_BIG?new P(new E1(1).dividedBy(E1.tan(o.multiplier.toDecimal()))):new P(E0.cot(o.valueOf())):o.isImaginary()?t0.evaluate(o,"cot"):e.parse(P1("1/tan({0})",o));var c,k=!1,J=f3(o.multiplier.toDecimal()),w0=o.multiplier;if(o.multiplier=w0,o.isPi()&&o.isLinear()){if(o0(w0))throw new m("cot is undefined for "+o.toString());w0.num;var _0=w0.den;_0==2?c=new P(0):_0==3?(c=e.parse("1/sqrt(3)"),k=!0):_0==4?(c=new P(1),k=!0):_0==6?(c=e.parse("sqrt(3)"),k=!0):c=e.symfunction("cot",[o])}return c||(c=e.symfunction("cot",[o])),k&&(J===2||J===4)&&c.negate(),c},acos:function(o){if(W.PARSE2NUMBER){if(o.isConstant()){if(o.gt(1)||o.lt(-1)){var c=o.toString();return Y2(n2(`pi/2-asin(${c})`))}return W.USE_BIG?new P(E1.acos(o.multiplier.toDecimal())):new P(Math.acos(o.valueOf()))}if(o.isImaginary())return t0.evaluate(o,"acos")}return e.symfunction("acos",arguments)},asin:function(o){if(W.PARSE2NUMBER){if(o.isConstant()){if(o.gt(1)||o.lt(-1)){var c=W.IMAGINARY,k=o.multiplier.toDecimal();return Y2(n2(`${c}*log(sqrt(1-${k}^2)-${c}*${k})`))}return W.USE_BIG?new P(E1.asin(o.multiplier.toDecimal())):new P(Math.asin(o.valueOf()))}if(o.isImaginary())return t0.evaluate(o,"asin")}return e.symfunction("asin",arguments)},atan:function(o){var c;if(o.equals(0))c=new P(0);else{if(W.PARSE2NUMBER)return o.isConstant()?W.USE_BIG?new P(E1.atan(o.multiplier.toDecimal())):new P(Math.atan(o.valueOf())):o.isImaginary()?t0.evaluate(o,"atan"):e.symfunction("atan",arguments);o.equals(-1)?c=e.parse("-pi/4"):c=e.symfunction("atan",arguments)}return c},asec:function(o){if(W.PARSE2NUMBER){if(o.equals(0))throw new M("Input is out of the domain of sec!");if(o.isConstant())return q0.acos(o.invert());if(o.isImaginary())return t0.evaluate(o,"asec")}return e.symfunction("asec",arguments)},acsc:function(o){if(W.PARSE2NUMBER){if(o.isConstant())return q0.asin(o.invert());if(o.isImaginary())return t0.evaluate(o,"acsc")}return e.symfunction("acsc",arguments)},acot:function(o){if(W.PARSE2NUMBER){if(o.isConstant())return new e.add(e.parse("pi/2"),q0.atan(o).negate());if(o.isImaginary())return t0.evaluate(o,"acot")}return e.symfunction("acot",arguments)},atan2:function(o,c){if(o.equals(0)&&c.equals(0))throw new m("atan2 is undefined for 0, 0");return W.PARSE2NUMBER&&o.isConstant()&&c.isConstant()?new P(Math.atan2(o,c)):e.symfunction("atan2",arguments)}},X0=this.trigh={cosh:function(o){if(W.PARSE2NUMBER){if(o.isConstant())return new P(Math.cosh(o.valueOf()));if(o.isImaginary())return t0.evaluate(o,"cosh")}return e.symfunction("cosh",arguments)},sinh:function(o){if(W.PARSE2NUMBER){if(o.isConstant())return new P(Math.sinh(o.valueOf()));if(o.isImaginary())return t0.evaluate(o,"sinh")}return e.symfunction("sinh",arguments)},tanh:function(o){if(W.PARSE2NUMBER){if(o.isConstant())return new P(Math.tanh(o.valueOf()));if(o.isImaginary())return t0.evaluate(o,"tanh")}return e.symfunction("tanh",arguments)},sech:function(o){return W.PARSE2NUMBER?o.isConstant()?new P(Math.sech(o.valueOf())):o.isImaginary()?t0.evaluate(o,"sech"):e.parse(P1("1/cosh({0})",o)):e.symfunction("sech",arguments)},csch:function(o){return W.PARSE2NUMBER?o.isConstant()?new P(Math.csch(o.valueOf())):o.isImaginary()?t0.evaluate(o,"csch"):e.parse(P1("1/sinh({0})",o)):e.symfunction("csch",arguments)},coth:function(o){return W.PARSE2NUMBER?o.isConstant()?new P(Math.coth(o.valueOf())):o.isImaginary()?t0.evaluate(o,"coth"):e.parse(P1("1/tanh({0})",o)):e.symfunction("coth",arguments)},acosh:function(o){var c;return W.PARSE2NUMBER&&o.isImaginary()?c=t0.evaluate(o,"acosh"):W.PARSE2NUMBER?c=n2(e.parse(P1(W.LOG+"(({0})+sqrt(({0})^2-1))",o.toString()))):c=e.symfunction("acosh",arguments),c},asinh:function(o){var c;return W.PARSE2NUMBER&&o.isImaginary()?c=t0.evaluate(o,"asinh"):W.PARSE2NUMBER?c=n2(e.parse(P1(W.LOG+"(({0})+sqrt(({0})^2+1))",o.toString()))):c=e.symfunction("asinh",arguments),c},atanh:function(o){var c;return W.PARSE2NUMBER&&o.isImaginary()?c=t0.evaluate(o,"atanh"):W.PARSE2NUMBER?c=n2(e.parse(P1("(1/2)*"+W.LOG+"((1+({0}))/(1-({0})))",o.toString()))):c=e.symfunction("atanh",arguments),c},asech:function(o){var c;return W.PARSE2NUMBER&&o.isImaginary()?c=t0.evaluate(o,"asech"):W.PARSE2NUMBER?c=n2(X2(e.add(o.clone().invert(),Z1(e.subtract(e.pow(o,new P(-2)),new P(1)))))):c=e.symfunction("asech",arguments),c},acsch:function(o){var c;return W.PARSE2NUMBER&&o.isImaginary()?c=t0.evaluate(o,"acsch"):W.PARSE2NUMBER?c=n2(e.parse(P1(W.LOG+"((1+sqrt(1+({0})^2))/({0}))",o.toString()))):c=e.symfunction("acsch",arguments),c},acoth:function(o){var c;return W.PARSE2NUMBER&&o.isImaginary()?c=t0.evaluate(o,"acoth"):W.PARSE2NUMBER?o.equals(1)?c=P.infinity():c=n2(e.divide(X2(e.divide(e.add(o.clone(),new P(1)),e.subtract(o.clone(),new P(1)))),new P(2))):c=e.symfunction("acoth",arguments),c}};this.units={};var i={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(o){return o}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(o){return e.symfunction(W.DOUBLEFACTORIAL,[o])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(o){return W0(o)}},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(o){return e.divide(o,new P(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(o){return o}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(o){return o}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(o){return o.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},u={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},O=this.functions={cos:[q0.cos,1],sin:[q0.sin,1],tan:[q0.tan,1],sec:[q0.sec,1],csc:[q0.csc,1],cot:[q0.cot,1],acos:[q0.acos,1],asin:[q0.asin,1],atan:[q0.atan,1],arccos:[q0.acos,1],arcsin:[q0.asin,1],arctan:[q0.atan,1],asec:[q0.asec,1],acsc:[q0.acsc,1],acot:[q0.acot,1],atan2:[q0.atan2,2],acoth:[X0.acoth,1],asech:[X0.asech,1],acsch:[X0.acsch,1],sinh:[X0.sinh,1],cosh:[X0.cosh,1],tanh:[X0.tanh,1],asinh:[X0.asinh,1],sech:[X0.sech,1],csch:[X0.csch,1],coth:[X0.coth,1],acosh:[X0.acosh,1],atanh:[X0.atanh,1],log10:[,1],exp:[H1,1],radians:[D1,1],degrees:[W1,1],min:[b3,-1],max:[m3,-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[J1,1],tri:[,1],sign:[Q2,1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[W0,1],factorial:[W0,1],continued_fraction:[T1,[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[e3,[1,2]],scientific:[Y1,[1,2]],mod:[w1,2],pfactor:[K1,1],vector:[j3,-1],matrix:[J3,-1],Set:[W3,-1],imatrix:[F3,-1],parens:[V0,-1],sqrt:[Z1,1],cbrt:[s1,1],nthroot:[B1,2],log:[X2,[1,2]],expand:[k3,1],abs:[M1,1],invert:[n6,1],determinant:[K3,1],size:[Q3,1],transpose:[r6,1],dot:[t6,2],cross:[e6,2],vecget:[B3,2],vecset:[V3,3],vectrim:[G3,[1,2]],matget:[H3,3],matset:[Y3,4],matgetrow:[X3,2],matsetrow:[z3,3],matgetcol:[$3,2],matsetcol:[Z3,3],rationalize:[t2,1],IF:[a1,3],is_in:[$1,2],realpart:[m2,1],imagpart:[M2,1],conjugate:[w2,1],arg:[N2,1],polarform:[P2,1],rectform:[$2,1],sort:[v3,[1,2]],integer_part:[,1],union:[i6,2],contains:[a6,2],intersection:[s6,2],difference:[o6,2],intersects:[u6,2],is_subset:[l6,2],print:[f6,-1]};this.error=C;var I=function(o){for(var c=W.FUNCTION_MODULES,k=c.length,J=0;J<k;J++){var w0=c[J];if(o in w0)return w0[o]}C("The function "+o+" is undefined!")};this.override=function(o,c){l[o]||(l[o]=[]),l[o].push(this[o]),this[o]=c},this.restore=function(o){this[o]&&(this[o]=l[o].pop())},this.extend=function(o,c,k){var J=this,w0=this[o];if(typeof w0=="function"&&typeof c=="function"){var _0=this[o];this[o]=function(J0,r1){return a0(J0)&&a0(r1)&&!k?_0.call(J,J0,r1):c.call(J,J0,r1,_0)}}},this.symfunction=function(o,c){var k=new P(o);return k.group=K0,typeof c=="object"&&(c=[].slice.call(c)),k.args=c,k.fname=o===f1?"":o,k.updateHash(),k},this.callfunction=function(o,c,k){var J=O[o];J||C("Nerdamer currently does not support the function "+o);var w0=J[1]||k,_0=J[0],J0;if(c instanceof Array||(c=c!==void 0?[c]:[]),w0!==-1){var r1=$(w0),b1=r1?w0[0]:w0,q1=r1?w0[1]:w0,z1=c.length,n1=o+" requires a {0} of {1} arguments. {2} provided!";z1<b1&&C(P1(n1,"minimum",b1,z1)),z1>q1&&C(P1(n1,"maximum",q1,z1))}var u2=r(c);return _0?J0=_0.apply(J[2],c):(_0=I(o),W.PARSE2NUMBER&&u2?J0=T3(_0.apply(_0,c)):J0=e.symfunction(o,c)),J0},this.operator_filter_regex=function(){var o="^\\"+Object.keys(i).filter(function(c){if(c.length===1)return c}).join("\\");return new RegExp("(["+o+"])\\s+(["+o+"])")}(),this.setOperator=function(o,c,k){var J=o.operator;if(i[J]=o,c&&(this[o.action]=c),e[J]=o.operation,!o.action&&!(o.prefix||o.postif)&&(o.action=J),k==="over"||k==="under"){var w0=o.precedence;for(var _0 in i){var J0=i[_0],r1=k==="over"?J0.precedence>=w0:J0.precedence>w0;r1&&J0.precedence++}}},this.getOperator=function(o){return i[o]},this.aliasOperator=function(o,c){var k={},J=i[o];for(var w0 in J)k[w0]=J[w0];k.operator=c,this.setOperator(k)},this.getOperators=function(){return i},this.getBrackets=function(){return u};var z=function(o){o=String(o);for(var c=0;c<d.actions.length;c++)o=d.actions[c].call(this,o);for(o=o.replace(/\s+/g," "),/e/gi.test(o)&&(o=o.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,function(J){return g0(J)})),o=o.replace(W.IMPLIED_MULTIPLICATION_REGEX,function(){var J=arguments[4],w0=arguments[1],_0=arguments[2],J0=arguments[3],r1=J.charAt(J0),b1="",q1="*";return r1.match(/[\+\-\/\*]/)||(b1=J.charAt(J0-1)),b1.match(/[a-z]/i)&&(q1=""),w0+q1+_0}).replace(/([a-z0-9_]+)/gi,function(J,w0){return W.USE_MULTICHARACTER_VARS===!1&&!(w0 in O)&&isNaN(w0)?w0.split("").join("*"):w0}).replace(/\)\(/g,")*(")||"0";;){var k=o;if(o=o.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(J,w0,_0,J0,r1){var b1=w0||J0,q1=_0||r1;return b1 in O?b1+q1:b1+"*"+q1}),k===o)break}return o};this.initConstants=function(){this.CONSTANTS={E:new P(W.E),PI:new P(W.PI)}},this.pretty_print=function(o){if(Array.isArray(o)){var c=o.map(k=>e.pretty_print(k)).join(", ");return o.type==="vector"?"vector<"+c+">":"("+c+")"}return o.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(o){if(W.callPeekers)for(var c=this.peekers[o],k=r2(arguments).slice(1).map(D0),J=0;J<c.length;J++)c[J].apply(null,k)},this.tokenize=function(o){o=String(o),o=o.trim().replace(/\s+/g," ");for(var c in u){var k=new RegExp(u[c].is_close?"\\s+\\"+c:"\\"+c+"\\s+","g");o=o.replace(k,c)}for(var J=0,w0=o.length,_0=0,J0=[],r1=[J0],b1=r1[0],q1=0,z1=[],n1=!1,u2=" ",a2="",l2=",",h2="-",y2="*",E2=function(R2,H2){var k2=[];R2!==void 0&&(k2.type=R2),k2.column=H2,r1.push(k2),b1.push(k2),b1=k2,q1++},k1=function(){r1.pop(),b1=r1[--q1]},f2=function(R2){R2=R2!==void 0?R2:J;for(var H2=R2+1;o.charAt(H2++)in i;);return o.substring(R2,H2-1)},b2=function(R2){for(var H2=J-R2.length,k2=[],t3=R2.charAt(0),s3=1,c3=R2.length;s3<c3;s3++){var p3=R2.charAt(s3),i3=t3+p3;i3 in i?t3=i3:(k2.push(new G(t3,G.OPERATOR,H2+s3)),t3=p3)}return k2.push(new G(t3,G.OPERATOR,H2+s3)),k2},d2=function(R2,H2){H2===void 0&&(H2=o.substring(_0,R2)),H2 in e.units?b1.push(new G(H2,G.UNIT,_0)):H2!==""&&b1.push(new G(H2,G.VARIABLE_OR_LITERAL,_0))},I2=function(R2){b1.push(new G(R2,G.FUNCTION,_0))},O2=function(R2){_0=R2+1},x2=function(){_0=_0+U2.length-2,J=_0-1};J<w0;J++){var C2=o.charAt(J);if(C2 in i){d2(J);var T2=b1[0]&&x1(b1[0]),G2=T2&&C2===y2;n1&&_0<J&&!(C2===l2||G2)&&(n1=!1,k1()),O2(J+1);var U2=f2(J);x2(),b1.push.apply(b1,b2(U2))}else if(C2 in u){var F2=u[C2];if(F2.is_open){z1.push([F2,_0]);var V2=o.substring(_0,J);V2 in O?I2(V2):V2!==""&&b1.push(new G(V2,G.VARIABLE_OR_LITERAL,_0)),E2(F2.maps_to,J)}else if(F2.is_close){var r3=z1.pop();if(r3){if(r3[0].id!==F2.id-1)throw new U("Parity error")}else throw new U("Missing open bracket for bracket at: "+(J+1));d2(J),k1()}O2(J)}else if(C2===u2){var D2=o.substring(_0,J),W2=o.charAt(J+1);if(n1){if(D2 in i)b1.push(new G(D2,G.OPERATOR,J));else{d2(void 0,D2),k1();var n3=W2 in i;(n3&&i[W2].value===h2||!n3)&&b1.push(new G(y2,G.OPERATOR,J))}n1=!1}else{var V2=o.substring(_0,J);if(V2 in O)n1=!0,I2(V2),E2();else if(V2 in i)b1.push(new G(V2,G.OPERATOR,J));else{d2(void 0,V2);var W2=o.charAt(J+1);D2!==a2&&W2!==a2&&!(D2 in i)&&!(W2 in i)&&b1.push(new G(y2,G.OPERATOR,J))}}O2(J)}}if(z1.length){var K2=z1.pop();throw new U("Missing closed bracket for bracket at "+(K2[1]+1))}return d2(J),J0},this.toRPN=function(o){var c=o.type,k=o.length,J,w0=[],_0=[],J0=[],r1=function(y2,E2){for(;y2.length;)E2.push(y2.pop())};for(J=0;J<k;J++){var b1=o[J];if(b1.type!==G.OPERATOR)break;if(!b1.prefix)throw new F("Not a prefix operator");b1.is_prefix=!0,_0.push(b1)}for(;J<k;J++){var q1=o[J];if(q1.type===G.OPERATOR){var z1=q1;if(z1.overloaded){var n1=o[J+1];n1&&n1.type===G.VARIABLE_OR_LITERAL&&(z1.postfix=!1,z1.action=z1.overloadAction,z1.leftAssoc=z1.overloadLeftAssoc)}for(;_0.length;){var u2=_0[_0.length-1];if(!(u2.precedence>z1.precedence||!z1.leftAssoc&&u2.precedence===z1.precedence))break;w0.push(_0.pop())}if((c==="vector"||c==="set")&&"vectorFn"in z1&&(z1.action=z1.vectorFn),z1.postfix){var a2=o[J-1];if(a2){if(a2.type===G.OPERATOR&&!a2.postfix)throw new F("Unexpected prefix operator '"+a2.value+"'! at "+a2.column)}else throw new F("Unexpected prefix operator '"+q1.value+"'! at "+q1.column)}else do{var n1=o[J+1],l2=n1?n1.type===G.OPERATOR:!1;if(l2){if(!n1.prefix)throw new F("A prefix operator was expected at "+n1.column);n1.is_prefix=!0,J0.push(n1),J++}}while(l2);for(z1.is_prefix?J0.push(z1):_0.push(z1);J0.length&&(z1.leftAssoc||!z1.leftAssoc&&J0[J0.length-1].precedence>=z1.precedence);)_0.push(J0.pop())}else if(q1.type===G.VARIABLE_OR_LITERAL){w0.length===0&&r1(J0,_0),w0.push(q1);var h2=_0[_0.length-1];(!h2||!h2.leftAssoc)&&r1(J0,w0)}else q1.type===G.FUNCTION?_0.push(q1):q1.type===G.UNIT&&w0.push(q1);Array.isArray(q1)&&(w0.push(this.toRPN(q1)),q1.type&&w0.push(new G(q1.type,G.FUNCTION,q1.column)))}return r1(_0,w0),r1(J0,w0),w0},this.parseRPN=function(o,c){try{c=c||{};for(var k in c)c[k]=e.parse(c[k],{});W.PARSE2NUMBER&&("e"in c||(c.e=new P(W.E)),"pi"in c||(c.pi=new P(W.PI)));for(var J=[],w0=0,_0=o.length;w0<_0;w0++){var J0=o[w0];if(Array.isArray(J0)&&(J0=this.parseRPN(J0,c)),J0)if(J0.type===G.OPERATOR)if(J0.is_prefix||J0.postfix)J.push(J0.operation(J.pop()));else{var r1=J.pop(),b1=J.pop();if(typeof b1>"u")throw new F(J0+" is not a valid postfix operator at "+J0.column);var q1=J0.action==="comma";b1 instanceof O1&&!q1&&(b1=y1.fromSet(b1)),r1 instanceof O1&&!q1&&(r1=y1.fromSet(r1)),this.callPeekers("pre_operator",b1,r1,J0);var z1=e[J0.action](b1,r1);this.callPeekers("post_operator",z1,b1,r1,J0),J.push(z1)}else if(J0.type===G.FUNCTION){var n1=J.pop(),u2=n1.parent;n1 instanceof _||(n1=_.create(n1));var a2=J0.value,l2=n1.getItems();this.callPeekers("pre_function",a2,l2);var h2=e.callfunction(a2,l2);this.callPeekers("post_function",h2,a2,l2);var y2=J[J.length-1],E2=o[w0+1],k1=E2&&E2.type===G.OPERATOR&&E2.value===",";if(!k1&&h2 instanceof y1&&y2&&y2.elements&&!(y2 instanceof _)){var f2=J.pop(),b2=h2.elements[0];if(!b2.isConstant())f2.getter=b2,J.push(f2),J.push(h2);else if(b2 instanceof N)J.push(y1.fromArray(f2.elements.slice(b2.start,b2.end)));else{var d2=Number(b2),I2=f2.elements.length;if(d2<0&&(d2=I2+d2),d2<0||d2>=I2)throw new t("Index out of range "+(J0.column+1));var O2=f2.elements[d2];f2.getter=d2,O2.parent=f2,J.push(O2)}}else u2&&(h2.parent=u2),J.push(h2)}else{var x2,C2=J0.value;C2 in W.ALIASES?J0=e.parse(W.ALIASES[J0]):J0.type===G.VARIABLE_OR_LITERAL?J0=new P(C2):J0.type===G.UNIT&&(J0=new P(C2),J0.isUnit=!0),C2 in e.CONSTANTS?(x2=J0,J0=new P(e.CONSTANTS[C2])):C2 in c&&C2!==c[C2].toString()?(x2=J0,J0=c[C2].clone()):C2 in A&&(x2=J0,J0=A[C2].clone()),x2&&(J0.subbed=x2),J.push(J0)}}var T2=J[0];if(["undefined","string","number"].indexOf(typeof T2)!==-1)throw new Q("Unexpected token!");return T2}catch(U2){var G2=[M];throw G2.forEach(function(F2){if(U2 instanceof F2)throw new F2(U2.message+": "+J0.column)}),new E(U2.message+": "+J0.column)}};function p0(o){this.type=o.type,this.value=o.value,this.left=o.left,this.right=o.right}p0.prototype.toString=function(){var o=this.left?this.left.toString()+"---":"",c=this.right?"---"+this.right.toString():"";return o+"("+this.value+")"+c},p0.prototype.toHTML=function(o,c){o=o||0,c=typeof c>"u"?4:c;var k=function(J0){return" ".repeat(c*J0)},_0="",J=this.left?k(o+1)+`<li>
`+this.left.toHTML(o+2,c)+k(o+1)+`</li> 
`:"",w0=this.right?k(o+1)+`<li>
`+this.right.toHTML(o+2,c)+k(o+1)+`</li>
`:"",_0=k(o)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+k(o)+`
`;return(J||w0)&&(_0+=k(o)+`<ul>
`+J+w0+k(o)+`</ul>
`),_0+="",_0},this.tree=function(o){for(var c=[],k=0;k<o.length;k++){var J=o[k];if(Array.isArray(J)){J=this.tree(J),c.push(J);continue}if(J.type===G.OPERATOR)if(J.is_prefix||J.postfix){var w0=J.is_prefix?"left":"right",_0=c.pop();J=new p0(J),J[w0]=_0,c.push(J)}else J=new p0(J),J.right=c.pop(),J.left=c.pop(),c.push(J);else if(J.type===G.FUNCTION){J=new p0(J);var J0=c.pop();if(J.right=J0,J.value==="object"){var _0=c[c.length-1];if(_0){for(;_0.right;)_0=_0.right;_0.right=J;continue}}c.push(J)}else c.push(new p0(J))}return c[0]},this.parse=function(o,c){o=z(o),c=c||{};var k=this.tokenize(o),J=this.toRPN(k);return this.parseRPN(J,c)},this.toObject=function(o){var c=function(k){for(var J=[],w0=0,_0=k.length;w0<_0;w0++){var J0=k[w0],r1=J0.value;if(J0.type===G.VARIABLE_OR_LITERAL)J.push(new P(r1));else if(J0.type===G.FUNCTION){w0++;var b1=e.symfunction(r1,c(k[w0]));b1.isConversion=!0,J.push(b1)}else J0.type===G.OPERATOR?J.push(r1):J.push(c(J0))}return J};return c(e.tokenize(o))};var L0=function(o){for(var c,k=0,J=[[]],c=0,w0=o.length;c<w0;c++)o[c]===","?(k++,J[k]=[]):J[k].push(o[c]);return J},e1=function(o){return o.replace(/^\\left\((.+)\\right\)$/g,function(c,k){return k||c})},$0=function(o){for(var c=[];o.length;){var k=o.shift(),J=o[0],w0=$(J),_0=J==="-";if(k==="^"&&(J==="+"?o.shift():w0&&J[0]==="+"&&J.shift(),w0&&J.length===1&&o.unshift(o.shift()[0])),k==="^"&&(w0&&J[0]==="-"||_0)){var J0=c.pop(),r1=c[c.length-1],b1="1";r1==="*"?(c.pop(),b1=c.pop()):$(r1)&&(b1=c.pop()),c.push(b1,"/",J0,k),w0?J.shift():o.shift(),w0&&J.length===1&&c.push(o.shift()[0])}else c.push(k)}return c};this.toTeX=function(o,c){c=c||{};var k=c.decimals===!0?"decimals":void 0,J=typeof o=="string"?this.toObject(o):o,w0=[],_0=typeof c.cdot>"u"?"\\cdot":c.cdot;if(J=$0(J),$(J)){for(var J0=[],r1,b1,q1=0;q1<J.length;q1++)r1=J[q1],J[q1+1]==="^"?(b1=J[q1+2],J0.push(N1.braces(this.toTeX([r1]))+"^"+N1.braces(this.toTeX([b1]))),q1+=2):J0.push(r1);J=J0}for(var q1=0,z1=J.length;q1<z1;q1++){var n1=J[q1];if(n1==="*"&&(n1=_0),a0(n1))if(n1.group===K0){var u2=n1.fname,a2;if(u2===h1)a2="\\sqrt"+N1.braces(this.toTeX(n1.args));else if(u2===z0)a2=N1.brackets(this.toTeX(n1.args),"abs");else if(u2===f1)a2=N1.brackets(this.toTeX(n1.args),"parens");else if(u2===W.LOG10)a2="\\"+W.LOG10_LATEX+"\\left( "+this.toTeX(n1.args)+"\\right)";else if(u2==="integrate"){var l2=L0(n1.args),h2=N1.braces(this.toTeX(l2[0])),y2=this.toTeX(l2[1]);a2="\\int "+h2+"\\, d"+y2}else if(u2==="defint"){var l2=L0(n1.args),h2=N1.braces(this.toTeX(l2[0])),y2=this.toTeX(l2[3]),E2=this.toTeX(l2[1]),k1=this.toTeX(l2[2]);a2="\\int\\limits_{"+E2+"}^{"+k1+"} "+h2+"\\, d"+y2}else if(u2==="diff"){var l2=L0(n1.args),y2="",h2=N1.braces(this.toTeX(l2[0]));if(l2.length===1){var f2=[];for(d2=0;d2<l2[0].length;d2++)l2[0][d2].group===3&&f2.push(l2[0][d2].value);f2.sort(),y2=f2.length>0?"\\frac{d}{d "+f2[0]+"}":"\\frac{d}{d x}"}else l2.length===2?y2="\\frac{d}{d "+l2[1]+"}":y2="\\frac{d^{"+l2[2]+"}}{d "+this.toTeX(l2[1])+"^{"+l2[2]+"}}";a2=y2+"\\left("+h2+"\\right)"}else if(u2==="sum"||u2==="product"){var b2=[[],[],[],[]],d2=0,q1;for(q1=0;q1<n1.args.length;q1++){if(n1.args[q1]===","){d2++;continue}b2[d2].push(n1.args[q1])}a2=(u2==="sum"?"\\sum_":"\\prod_")+N1.braces(this.toTeX(b2[1])+" = "+this.toTeX(b2[2])),a2+="^"+N1.braces(this.toTeX(b2[3]))+N1.braces(this.toTeX(b2[0]))}else if(u2==="limit"){var I2=L0(n1.args).map(function(x2){return Array.isArray(x2)?e.toTeX(x2.join("")):e.toTeX(String(x2))});a2="\\lim_"+N1.braces(I2[1]+"\\to "+I2[2])+" "+N1.braces(I2[0])}else u2===d0||u2===g?a2=this.toTeX(n1.args)+(u2===d0?"!":"!!"):a2=N1.latex(n1,k);w0.push(a2)}else w0.push(N1.latex(n1,k));else $(n1)?w0.push(N1.brackets(this.toTeX(n1))):n1==="/"?w0.push(N1.frac(e1(w0.pop()),e1(this.toTeX([J[++q1]])))):w0.push(n1)}return w0.join(" ")};function V0(o){return W.PARSE2NUMBER?o:e.symfunction("parens",[o])}function M1(o){if(o.isInfinity)return P.infinity();if(o.multiplier.lessThan(0)&&o.multiplier.negate(),o.isImaginary()){var c=o.realpart(),k=o.imagpart();if(c.isConstant()&&k.isConstant())return Z1(e.add(e.pow(c,new P(2)),e.pow(k,new P(2))))}else if(x(o)||j1(o.power))return o;if(o.isComposite()){var J=[];o.each(function(J0){J.push(J0.multiplier)});var w0=E0.QGCD.apply(null,J);w0.lessThan(0)&&(o.multiplier=o.multiplier.multiply(new x0(-1)),o.distributeMultiplier())}var _0=e.parse(o.multiplier);return o.toUnitMultiplier(),e.multiply(_0,e.symfunction(z0,[o]))}function W0(o){var c;if(i0(o)){var k=new y1;return o.each(function(z1,n1){k.set(n1-1,W0(z1))}),k}if(H0(o)){var J=new L1;return o.each(function(z1,n1,u2){J.set(n1,u2,W0(z1))}),J}if(W.PARSE2NUMBER&&o.isConstant())return o0(o)?c=E0.bigfactorial(o):c=E0.gamma(o.multiplier.add(new x0(1)).toDecimal()),c=T3(c),c;if(o.isConstant()){var w0=o.getDenom();if(w0.equals(2)){var _0=o.getNum(),J0,r1,b1,q1;return o.multiplier.isNegative()?(q1=e.subtract(_0.negate(),new P(1)).multiplier.divide(new x0(2)),J0=e.pow(new P(-4),new P(q1)).multiplier.multiply(E0.bigfactorial(q1)),r1=E0.bigfactorial(new x0(2).multiply(q1))):(q1=e.add(_0,new P(1)).multiplier.divide(new x0(2)),J0=E0.bigfactorial(new x0(2).multiply(q1)),r1=e.pow(new P(4),new P(q1)).multiplier.multiply(E0.bigfactorial(q1))),b1=J0.divide(r1),e.multiply(e.parse("sqrt(pi)"),new P(b1))}}return e.symfunction(d0,[o])}function T1(o,c){var k=n2(o);if(k.isConstant()){var J=E0.continuedFraction(k,c),w0=y1.fromArray(J.fractions.map(function(_0){return new P(_0)}));return y1.fromArray([new P(J.sign),new P(J.whole),w0])}return e.symfunction("continued_fraction",arguments)}function w1(o,c){if(o.isConstant()&&c.isConstant()){var k=new P(1);return k.multiplier=k.multiplier.multiply(o.multiplier.mod(c.multiplier)),k}var J=e.divide(o.clone(),c.clone());return o0(J)?new P(0):e.symfunction("mod",[o,c])}function a1(o,c,k){return typeof o!="boolean"&&x(o)&&(o=!!Number(o)),o?c:k}function $1(o,c){if(H0(o))for(var k=0,J=o.rows();k<J;k++)for(var w0=0,_0=o.cols();w0<_0;w0++){var J0=o.elements[k][w0];if(J0.equals(c))return new P(1)}else if(o.elements){for(var k=0,J=o.elements.length;k<J;k++)if(o.elements[k].equals(c))return new P(1)}return new P(0)}function J1(o){return W.PARSE2NUMBER?o.isConstant()?new P(E0.sinc(o)):e.parse(P1("sin({0})/({0})",o)):e.symfunction("sinc",[o])}function H1(o){return o.fname===W.LOG&&o.isLinear()?e.pow(o.args[0],P.create(o.multiplier)):e.parse(P1("e^({0})",o))}function D1(o){return e.parse(P1("({0})*pi/180",o))}function W1(o){return e.parse(P1("({0})*180/pi",o))}function t2(o){if(o.isComposite()){var c=new P(0),k,J,w0,_0,J0,r1,b1,q1;return o.each(function(z1){k=z1.getNum(),J=z1.getDenom(),w0=c.getNum(),_0=c.getDenom(),J0=e.multiply(J,w0),r1=e.multiply(k,_0),b1=e.expand(e.add(J0,r1)),q1=e.multiply(_0,J),c=e.divide(b1,q1)},!0),c}return o}function Z1(o){if(a0(o)||(o=e.parse(o)),o.group===o1)return e.symfunction(h1,[o]);o.fname===""&&o.power.equals(1)&&(o=o.args[0]);var c=o.multiplier.sign()<0;if(W.PARSE2NUMBER){if(o.isConstant()&&!c)return new P(E1.sqrt(o.multiplier.toDecimal()));if(o.isImaginary())return t0.sqrt(o);if(o.group===T0)return e.symfunction("sqrt",[o])}var k,J,w0=o.isConstant();if(o.group===l0&&o.isLinear()){var _0=Z1(P(o.multiplier));for(var J0 in o.symbols){var r1=o.symbols[J0];_0=e.multiply(_0,Z1(r1))}J=_0}else if(o.fname===h1){var J0=o.args[0],b1=o.multiplier;J0.setPower(o.power.multiply(new x0(.25))),J=J0,b1.equals(1)||(J=e.multiply(Z1(e.parse(b1)),J))}else if(!o.power.isInteger())o.setPower(o.power.multiply(new x0(.5))),J=o;else if(o.multiplier<0&&o.group===T0){var q1=e.parse(o.multiplier).negate(),z1=e.parse(o).toUnitMultiplier().negate();J=e.multiply(e.symfunction(W.SQRT,[z1]),Z1(q1))}else{var n1=o.power.sign();o.power=o.power.abs(),w0&&o.multiplier.lessThan(0)&&(k=P.imaginary(),o.multiplier=o.multiplier.abs());var u2=o.multiplier.toDecimal(),a2=Math.abs(u2),l2=Math.sqrt(a2),_0;if(o0(l2))_0=new P(l2);else if(o0(u2)){var h2=E0.ifactor(u2),y2=1;for(var r1 in h2){var E2=h2[r1],k1=E2-E2%2;if(k1){var f2=Math.pow(r1,k1);y2*=Math.pow(r1,k1/2),u2/=f2}}_0=e.multiply(e.symfunction(h1,[new P(u2)]),new P(y2))}else{for(var b2=[new P(o.multiplier.num),new P(o.multiplier.den)],d2=[new P(1),new P(1)],I2=[new P(1),new P(1)],O2=0;O2<2;O2++){var E2=b2[O2];K1(E2).each(function(T2){T2=P.unwrapPARENS(T2);var G2=T2.clone().toLinear(),U2=Number(T2.power),F2=U2%2,V2=(U2-F2)/2;d2[O2]=e.multiply(d2[O2],e.pow(G2,new P(V2))),I2[O2]=e.multiply(I2[O2],Z1(e.pow(G2,new P(F2))))})}_0=e.divide(e.multiply(d2[0],I2[0]),e.multiply(d2[1],I2[1]))}o=o.toUnitMultiplier(!0),o.isOne()?J=o:j1(o.power.toString())?J=e.pow(o.clone(),new P(.5)):J=e.symfunction(h1,[o]),n1<0&&J.power.negate(),_0&&(J=e.multiply(_0,J)),k&&(J=e.multiply(k,J))}return c&&W.PARSE2NUMBER?e.parse(J):J}function s1(o){if(!o.isConstant(!0)){var c,k=o.power/3,J=e.pow(e.parse(o.multiplier),new P(1/3)),w0=o.toUnitMultiplier();return o0(k)?c=e.pow(w0.toLinear(),e.parse(k)):w0.group===l0?(c=new P(1),w0.each(function(_0){c=e.multiply(c,s1(_0))})):c=e.symfunction("cbrt",[w0]),e.multiply(J,c)}return B1(o,new P(3))}function Y1(o,c){return o.scientific=c||10,o}function B1(o,c,k,J){if(c=n2(e.parse(c)),c.equals(0))throw new m("Unable to calculate nthroots of zero");if(o<0&&j1(c))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!o.isConstant(!0))return e.symfunction("nthroot",arguments);o.group!==j&&(o=n2(o)),typeof J>"u"&&(J=!0),k=k||25;var w0=o.sign(),_0,J0;if(w0<0&&(o=M1(o)),o0(o)&&c.isConstant()){o<18446744073709552e3?J0=x0.create(Math.pow(o,1/c)):J0=E0.nthroot(o,c);var _0;return J&&(_0=new P(J0)),_0=new P(J0.toDecimal(k)),e.multiply(new P(w0),_0)}}function K1(o){if(o.greaterThan(9999999999998891e26)||o.equals(-1))return o;if(o.equals(Math.PI))return new P(Math.PI);if(o=n2(o.clone()),o.isConstant()){var c=new P(1),k=o.toString();if(o0(k)){var J=E0.ifactor(k);for(var w0 in J){var _0=J[w0];c=e.multiply(c,e.symfunction("parens",[new P(w0).setPower(new x0(_0))]))}}else{var J0=K1(new P(o.multiplier.num)),r1=K1(new P(o.multiplier.den));c=e.multiply(e.symfunction("parens",[J0]),e.symfunction("parens",[r1]).invert())}}else c=e.symfunction("pfactor",arguments);return c}function m2(o){return o.realpart()}function M2(o){return o.imagpart()}function w2(o){var c=o.realpart(),k=o.imagpart();return e.add(c,e.multiply(k.negate(),P.imaginary()))}function N2(o){var c=o.realpart(),k=o.imagpart();return c.isConstant()&&k.isConstant()?k.equals(0)&&c.equals(-1)?e.parse("pi"):k.equals(1)&&c.equals(0)?e.parse("pi/2"):k.equals(1)&&c.equals(1)?e.parse("pi/4"):new P(Math.atan2(k,c)):e.symfunction("atan2",[k,c])}function P2(o){var c,k,J,w0;return c=P.toPolarFormArray(o),w0=c[1],k=c[0],J=e.parse(P1("e^({0}*({1}))",W.IMAGINARY,w0)),e.multiply(k,J)}function $2(o){var c=o.clone();try{var k,J,w0,_0,J0,r1,b1;return k=v1(o,"e",!0),J=e.divide(k.x.power,P.imaginary()),w0=n2(q0.tan(J)),_0=e.pow(k.a,new P(2)),r1=w0.getDenom(!0),b1=w0.getNum(),J0=P.hyp(b1,r1),J0.equals(k.a)?e.add(r1,e.multiply(P.imaginary(),b1)):c}catch{return c}}function J2(o,c){c.map(function(_0){_0.numVal=n2(_0).multiplier});for(var k,J,w0;;){if(k=c.length,k<2)return c[0];J=c.pop(),w0=c[k-2],(o==="min"?J.numVal<w0.numVal:J.numVal>w0.numVal)&&(c.pop(),c.push(J))}}function m3(){var o=[].slice.call(arguments);return S0(o)?o[0]:r(o)?new P(Math.max.apply(null,o)):W.SYMBOLIC_MIN_MAX&&v(o)?J2("max",o):e.symfunction("max",o)}function b3(){var o=[].slice.call(arguments);return S0(o)?o[0]:r(o)?new P(Math.min.apply(null,o)):W.SYMBOLIC_MIN_MAX&&v(o)?J2("min",o):e.symfunction("min",o)}function Q2(o){return o.isConstant(!0)?new P(Math.sign(n2(o))):e.symfunction("sign",arguments)}function v3(o,c){c=c?c.toString():"asc";var k=function(w0){return w0.group===j?w0.multiplier:w0.group===K0?w0.fname===""?k(w0.args[0]):w0.fname:w0.group===T0?w0.power:w0.value},J=i0(o)?o.elements:o.collectSymbols();return new y1(J.sort(function(w0,_0){var J0=k(w0),r1=k(_0);return c==="desc"?r1-J0:J0-r1}))}function X2(o,c){if(o.equals(1))return new P(0);var k;if(o.fname===h1&&o.multiplier.equals(1))return k=e.divide(X2(o.args[0]),new P(2)),o.power.sign()<0&&k.negate(),k;if(o.equals(0))throw new m(W.LOG+"(0) is undefined!");if(o.isImaginary())return t0.evaluate(o,W.LOG);if(o.isConstant()&&typeof c<"u"&&c.isConstant()){var J=Math.log(o),w0=Math.log(c);k=new P(J/w0)}else if(o.group===o1&&o.power.multiplier.lessThan(0)||o.power.toString()==="-1")o.power.negate(),k=X2(o).negate();else if(o.value==="e"&&o.multiplier.equals(1)){var _0=o.power;k=a0(_0)?_0:new P(_0)}else if(o.group===K0&&o.fname==="exp"){var J0=o.args[0];o.multiplier.equals(1)?k=e.multiply(J0,new P(o.power)):k=e.symfunction(W.LOG,[o])}else if(W.PARSE2NUMBER&&x(o)){o=e.parse(o);var r1;o.multiplier.lessThan(0)&&(o.negate(),r1=e.multiply(new P(Math.PI),new P("i"))),k=new P(Math.log(o.multiplier.toDecimal())),r1&&(k=e.add(k,r1))}else{var J0;!o.power.equals(1)&&!o.contains("e")&&(J0=o.group===o1?o.power:new P(o.power),o.toLinear()),arguments.length>1&&S0(arguments)?k=new P(1):k=e.symfunction(W.LOG,arguments),J0&&(k=e.multiply(J0,k))}return k}function e3(o,c){var k=c&&c.isConstant()||typeof c>"u";if(o.isConstant()&&k){var J,w0,_0,J0;return J=o,c&&c.lessThan(0)&&(c=M1(c),w0=Number(o).toExponential().toString().split("e"),J=w0[0],_0=w0[1]),J0=new P(U1(J,Number(c||0))),e.multiply(J0,e.pow(new P(10),new P(_0||0)))}return e.symfunction("round",arguments)}function f3(o){var c=o%2,k;return c<0&&(c=2+c),c>=0&&c<=.5?k=1:c>.5&&c<=1?k=2:c>1&&c<=1.5?k=3:k=4,k}function T3(o){if(!isFinite(o)){var c=Math.sign(o),k=new P(String(Math.abs(o)));return k.multiplier=k.multiplier.multiply(new x0(c)),k}if(a0(o))return o;if(typeof o=="number")try{o=x0.simple(o)}catch{o=new x0(o)}var J=new P(0);return J.multiplier=o,J}function A3(o){var c=o.group,k;if(c===Q0){var J=o.getNum(),w0=o.getDenom()||new P(1),_0=Number(o.power),J0=new P(1);if(Math.abs(_0)===1){w0.each(function(q1){q1.group===l0?J0=e.multiply(J0,A3(q1.getDenom())):q1.power.lessThan(0)&&(J0=e.multiply(J0,A3(q1.clone().toUnitMultiplier())))});var r1=new P(0);w0.each(function(q1){r1=e.add(e.divide(q1,J0.clone()),r1)}),J0.invert();var b1;J.isComposite()?(b1=new P(0),J.each(function(q1){b1=e.add(e.multiply(A3(q1),J0.clone()),b1)})):b1=e.multiply(J0,J),k=e.divide(b1,r1)}}else c===l0?(k=new P(1),o.each(function(q1){k=e.multiply(k,e.clean(q1))})):c===K0&&o.args.length===1&&o.args[0].isConstant()&&(k=F1("PARSE2NUMBER",function(){return e.parse(o)},!0));return k||(k=o),k}function k3(o,c){return c=c||{expand_denominator:!0,expand_functions:!0},Y2(o,c)}function Y2(o,c){if(Array.isArray(o))return o.map(function(l2){return Y2(l2,c)});if(c=c||{},o.group===K0&&o.fname===""){var k=Y2(o.args[0],c),J=Y2(e.pow(k,e.parse(o.power)),c);return e.multiply(e.parse(o.multiplier),J).distributeMultiplier()}if([j,c1,T0].indexOf(o.group)!==-1)return o;var w0=o.clone();try{var _0=o.multiplier.toString(),J0=Number(o.power),r1=o;if(o.isComposite()&&o0(o.power)&&o.power>0){var b1=J0-1,k=new P(0);o.each(function(h2){k=e.add(k,Y2(e.parse(h2),c))});for(var q1=e.parse(k),z1=0;z1<b1;z1++)q1=p(q1,k,c);r1=e.multiply(e.parse(_0),q1).distributeMultiplier()}else if(o.group===K0&&c.expand_functions===!0){var n1=[];o.args.forEach(function(l2){n1.push(Y2(l2,c))}),r1=e.pow(e.symfunction(o.fname,n1),e.parse(o.power)),r1=e.multiply(r1,e.parse(o.multiplier))}else if(o.isComposite()&&o0(o.power)&&o.power<0&&c.expand_denominator===!0)o=o.invert(),r1=Y2(o,c),r1.invert();else if(o.group===l0){var u2=function(h2){switch(h2.group){case Q0:return 0;case k0:return 1;case l0:return 2;case K0:return 3;default:return 4}},a2=o.collectSymbols().sort(function(h2,y2){return u2(y2)-u2(h2)}).map(function(h2){var y2=e.pow(h2,e.parse(J0)),E2=Y2(y2,c);return E2}),k=a2.pop();k.isComposite()&&k.isLinear()?(a2.forEach(function(h2){k=p(k,h2,c)}),k.isComposite()?(k.power>1&&(k=Y2(e.pow(k,e.parse(k.power)),c)),r1=e.multiply(e.parse(_0),k).distributeMultiplier()):r1=k):(r1=k,a2.forEach(function(h2){r1=e.multiply(r1,h2)}),r1=e.multiply(r1,e.parse(_0)).distributeMultiplier()),r1.group===l0&&(r1=e.parse(r1))}else r1=o;return r1}catch{return w0}return w0}function F3(o){return L1.identity(o)}function B3(o,c){return c.isConstant()&&o0(c)?o.elements[c]:e.symfunction("vecget",arguments)}function G3(o,c){return c=typeof c>"u"?1e-14:c,o=o.clone(),c=Number(c),o.elements.sort(function(k,J){return J.group-k.group}),o.elements=c2(o.elements,function(k,J){var w0=Number(e.subtract(n2(k),n2(J)).abs());return w0<=c}),o}function V3(o,c,k){return c.isConstant?(o.elements[c]=k,o):e.symfunction("vecset",arguments)}function H3(o,c,k){return c.isConstant()&&k.isConstant()?o.elements[c][k]:e.symfunction("matget",arguments)}function X3(o,c){return c.isConstant()?new L1(o.elements[c]):e.symfunction("matgetrow",arguments)}function z3(o,c,k){if(!c.isConstant())return e.symfunction("matsetrow",arguments);if(o.elements[c].length!==k.elements.length)throw new s("Matrix row must match row dimensions!");var J=o.clone();return J.elements[c]=k.clone().elements,J}function $3(o,c){if(!c.isConstant())return e.symfunction("matgetcol",arguments);c=Number(c);var k=L1.fromArray([]);return o.each(function(J,w0,_0){_0===c&&k.elements.push([J.clone()])}),k}function Z3(o,c,k){if(!c.isConstant())return e.symfunction("matsetcol",arguments);if(c=Number(c),o.rows()!==k.elements.length)throw new s("Matrix columns must match number of columns!");return k.each(function(J,w0){o.set(w0-1,c,J.elements[0].clone())}),o}function Y3(o,c,k,J){return o.elements[c][k]=J,o}function j3(){return new y1([].slice.call(arguments))}function J3(){return L1.fromArray(arguments)}function W3(){return O1.fromArray(arguments)}function K3(o){return H0(o)?o.determinant():o}function Q3(o){var c;return H0(o)?c=[new P(o.cols()),new P(o.rows())]:i0(o)||u1(o)?c=new P(o.elements.length):C("size expects a matrix or a vector"),c}function t6(o,c){if(i0(o)&&i0(c))return o.dot(c);C("function dot expects 2 vectors")}function e6(o,c){if(i0(o)&&i0(c))return o.cross(c);C("function cross expects 2 vectors")}function r6(o){if(H0(o))return o.transpose();C("function transpose expects a matrix")}function n6(o){if(H0(o))return o.invert();C("invert expects a matrix")}function i6(o,c){return o.union(c)}function s6(o,c){return o.intersection(c)}function a6(o,c){return o.contains(c)}function o6(o,c){return o.difference(c)}function u6(o,c){return new P(Number(o.intersects(c)))}function l6(o,c){return new P(Number(o.is_subset(c)))}function f6(){r2(arguments).map(function(o){console.log(o.toString())})}function C3(o){if(!a0(o.power)&&o.power.absEquals(.5)){var c=o.power.sign(),k=Z1(o.group===c1?new P(o.value):o.toLinear());return c<0&&k.invert(),k}return o}function c6(o){if(o.group===c1){var c=o.value,k=R1(c)[0];if(!k)return h0("Unable to compute prime factors. This should not happen. Please review and report."),o;var J=new x0(Math.log(c)/Math.log(k)),w0=J.multiply(o.power);if(w0.den>o.power.den)return o;o0(w0)?o=P(Math.pow(k,w0)):o=new P(k).setPower(w0)}return o}this.expand=Y2,this.round=e3,this.clean=A3,this.sqrt=Z1,this.cbrt=s1,this.abs=M1,this.log=X2,this.rationalize=t2,this.nthroot=B1,this.arg=N2,this.conjugate=w2,this.imagpart=M2,this.realpart=m2,this.getFunction=function(o){return O[o][0]},this.addPreprocessor=function(o,c,k,J){var w0=d.names,_0=d.actions;if(typeof c!="function")throw new PreprocessorError("Incorrect parameters. Function expected!");k?J?(w0.splice(k,0,o),_0.splice(k,0,c)):(w0[k]=o,_0[k]=c):(w0.push(o),_0.push(c))},this.getPreprocessors=function(){for(var o={},c=0,k=o.names.length;c<k;c++){var J=o.names[c];o[J]={order:c,action:o.actions[c]}}return o},this.removePreprocessor=function(o,c){var k=d.names.indexOf(o);c?(q2(d.names,k),q2(d.actions,k)):(d.names[k]=void 0,d.actions[k]=void 0)},this.mapped_function=function(){for(var o={},c=this.params,k=0;k<c.length;k++)o[c[k]]=String(arguments[k]);return e.parse(this.body,o)},this.add=function(o,c){var k=a0(o),J=a0(c);if(k&&J){if(o.unit||c.unit)return e.Unit.add(o,c);if(o.isInfinity||c.isInfinity){var w0=o.multiplier.lessThan(0),_0=c.multiplier.lessThan(0);if(o.isInfinity&&c.isInfinity&&w0!==_0)throw new m("("+o+")+("+c+") is not defined!");var J0=P.infinity();return _0&&J0.negate(),J0}if(o.isComposite()&&o.isLinear()&&c.isComposite()&&c.isLinear()&&(o.distributeMultiplier(),c.distributeMultiplier(),c.length>o.length&&o.group===c.group&&([o,c]=[c,o])),o.multiplier.equals(0))return c;if(c.multiplier.equals(0))return o;if(o.isConstant()&&c.isConstant()&&W.PARSE2NUMBER){var f2=new P(o.multiplier.add(c.multiplier).toDecimal(W.PRECISION));return f2}var r1=o.group,b1=c.group,q1=o.power.toString(),z1=c.power.toString();if(r1<b1||r1===b1&&q1>z1&&z1>0)return this.add(c,o);if(r1===l0&&b1===k0&&o.value===c.value){var n1=o;o=c,c=n1,r1=o.group,b1=c.group,q1=o.power.toString(),z1=c.power.toString()}var u2=q1===z1,a2=o.value,l2=c.value,h2=o.isComposite(),y2=c.isComposite(),E2,k1,f2;if(h2&&(E2=U0(o,"hash")),y2&&(k1=U0(c,"hash")),r1===Q0&&b1===Q0&&c.isLinear()&&!o.isLinear()&&E2!==k1)return this.add(c,o);r1===k0&&b1===k0&&(a2=E2,l2=k1);var b2=r1===c1&&b1===j,d2=o.value===c.multiplier.toString(),I2=a2===l2||E2===k1&&E2!==void 0||b2&&d2;if(I2&&u2&&r1===b1)if(b2&&(c=c.convert(c1)),r1===k0&&(b1===T0||b1===c1))o.distributeMultiplier(),f2=o.attach(c);else if(f2=o,o.multiplier.isOne()&&c.multiplier.isOne()&&r1===Q0&&o.isLinear()&&c.isLinear())for(var O2 in c.symbols){var x2=c.symbols[O2];f2.attach(x2)}else f2.multiplier=f2.multiplier.add(c.multiplier);else if(I2&&r1!==k0)r1===Q0&&b1===k0?(c.insert(o,"add"),f2=c):(f2=P.shell(k0).attach([o,c]),f2.value=r1===k0?E2:a2);else if(h2&&o.isLinear()){var C2=r1===b1,T2=r1===k0&&b1===k0;if(T2&&(C2=o.value===c.value),o.distributeMultiplier(),c.isComposite()&&c.isLinear()&&C2){c.distributeMultiplier();for(var O2 in c.symbols){var x2=c.symbols[O2];o.attach(x2)}f2=o}else T2&&o.value!==k1||r1===k0&&!I2?(f2=P.shell(Q0).attach([o,c]),f2.updateHash()):f2=o.attach(c)}else{if(r1===K0&&o.fname===h1&&b1!==o1&&c.power.equals(.5)){var G2=c.multiplier.clone();c=Z1(c.toUnitMultiplier().toLinear()),c.multiplier=G2}o.length===2&&c.length===2&&j1(o.power)&&j1(c.power)?f2=e.add(Y2(o),Y2(c)):(f2=P.shell(Q0).attach([o,c]),f2.updateHash())}if(f2.multiplier.equals(0)&&(f2=new P(0)),f2.length===1){var G2=f2.multiplier;f2=f0(f2.symbols),f2.multiplier=f2.multiplier.multiply(G2)}return f2}else{if(J&&!k){var n1=o;o=c,c=n1,n1=J,J=k,k=n1}var U2=H0(c);if(k&&U2){var F2=new L1;c.eachElement(function(r3,D2,W2){F2.set(D2,W2,e.add(o.clone(),r3))}),c=F2}else if(H0(o)&&U2)c=o.add(c);else if(k&&i0(c))c.each(function(r3,D2){D2--,c.elements[D2]=e.add(o.clone(),c.elements[D2])});else if(i0(o)&&i0(c))c.each(function(r3,D2){D2--,c.elements[D2]=e.add(o.elements[D2],c.elements[D2])});else{if(i0(o)&&H0(c))return e.add(c,o);if(H0(o)&&i0(c))if(c.elements.length===o.rows()){var F2=new L1,V2=o.cols();return c.each(function(D2,W2){for(var n3=[],K2=0;K2<V2;K2++)n3.push(e.add(o.elements[W2-1][K2].clone(),D2.clone()));F2.elements.push(n3)}),F2}else C("Dimensions must match!")}return c}},this.subtract=function(o,c){var k=k=a0(o),J=a0(c);if(k&&J)return o.unit||c.unit?e.Unit.subtract(o,c):this.add(o,c.negate());if(J&&i0(o))c=o.map(function(J0){return e.subtract(J0,c.clone())});else if(k&&i0(c))c=c.map(function(J0){return e.subtract(o.clone(),J0)});else if(i0(o)&&i0(c))o.dimensions()===c.dimensions()?c=o.subtract(c):e.error("Unable to subtract vectors. Dimensions do not match.");else if(H0(o)&&i0(c))if(c.elements.length===o.rows()){var w0=new L1,_0=o.cols();return c.each(function(J0,r1){for(var b1=[],q1=0;q1<_0;q1++)b1.push(e.subtract(o.elements[r1-1][q1].clone(),J0.clone()));w0.elements.push(b1)}),w0}else C("Dimensions must match!");else if(i0(o)&&H0(c)){var w0=c.clone().negate();return e.add(w0,o)}else if(H0(o)&&H0(c))c=o.subtract(c);else if(H0(o)&&J){var w0=new L1;o.each(function(r1,b1,q1){w0.set(b1,q1,e.subtract(r1,c.clone()))}),c=w0}else if(k&&H0(c)){var w0=new L1;c.each(function(r1,b1,q1){w0.set(b1,q1,e.subtract(o.clone(),r1))}),c=w0}return c},this.multiply=function(o,c){var k=a0(o),J=a0(c);if(k&&c instanceof _)return c.elements.push(o),c;if(k&&J){if(c.isUnit){var k1=o.clone();return o.unit=c,k1}if(o.unit||c.unit)return e.Unit.multiply(o,c);if(o.isInfinity||c.isInfinity){if(o.equals(0)||c.equals(0))throw new m(o+"*"+c+" is undefined!");if(c.power.lessThan(0)){if(o.isInfinity)throw new m("Infinity/Infinity is not defined!");return new P(0)}var h2=o.multiplier.multiply(c.multiplier).sign(),w0=P.infinity();if(o.isConstant()||c.isConstant()||o.isInfinity&&c.isInfinity)return h2<0&&w0.negate(),w0}if(o.isConstant()&&c.isConstant()&&W.PARSE2NUMBER){var _0=new E1(o.multiplier.toDecimal()).times(new E1(c.multiplier.toDecimal())).toFixed(),J0=new P(_0);return J0}if(o.isOne())return c.clone();if(c.isOne())return o.clone();if(o.multiplier.equals(0)||c.multiplier.equals(0))return new P(0);if(c.group>o.group&&c.group!==Q0)return this.multiply(c,o);if(o.group===l0&&c.group===k0&&o.value===c.value){var _0=o;o=c,c=_0}var r1=o.group,b1=c.group,q1=c.multiplier.num,z1=c.multiplier.den;if(r1===K0&&o.fname===h1&&!c.isConstant()&&o.args[0].value===c.value&&!o.args[0].multiplier.lessThan(0)){var n1=o.power,u2=e.parse(o.multiplier);o=e.multiply(u2,o.args[0].clone()),o.setPower(new x0(.5).multiply(n1)),r1=o.group}else r1===K0&&o.fname===h1&&o.multiplier.equals(1)&&o.power.equals(-1)&&c.isConstant()&&o.args[0].equals(c)&&(o=e.symfunction(h1,[c.clone()]),c=new P(1));var a2=o.value,l2=c.value,h2=new x0(o.sign()),y2=r1===c1&&b1===j&&c.multiplier.equals(o.value),E2=y2?new x0(1).multiply(o.multiplier).abs():o.multiplier.multiply(c.multiplier).abs(),k1=o.clone().toUnitMultiplier();if(c=c.clone().toUnitMultiplier(!0),r1===K0&&b1===K0){var f2=o.args[0].clone(),b2=c.args[0].clone();if(o.fname===h1&&c.fname===h1&&o.isLinear()&&c.isLinear()){var d2=e.divide(f2,b2).invert();d2.gt(1)&&o0(d2)&&(k1=e.multiply(o.args[0].clone(),Z1(d2.clone())),c=new P(1))}else if(o.fname===d0&&c.fname===d0&&!f2.isConstant()&&!b2.isConstant()&&c.power<0){var I2=e.subtract(f2.clone(),b2.clone());if(I2.isConstant())if(_0=new P(1),I2<0){for(var O2=0,x2=Math.abs(I2);O2<=x2;O2++){var C2=e.add(f2.clone(),new P(O2));_0=e.multiply(_0,C2)}k1=e.multiply(e.pow(f2,new P(o.power)),e.pow(_0,new P(c.power))),c=new P(1)}else{for(var O2=0,x2=Math.abs(I2);O2<=x2;O2++){var C2=e.add(b2.clone(),new P(O2));_0=e.multiply(_0,C2)}k1=e.multiply(e.pow(_0,new P(o.power)),e.pow(b2,new P(c.power))),c=new P(1)}}}if(a2===l2&&r1===k0&&r1===b1&&(a2=o.text("hash"),l2=c.text("hash")),b1===o1&&c.previousGroup===k0&&r1===k0&&(a2=U0(o,"hash",o1)),(a2===l2||y2)&&!(r1===k0&&(b1===T0||b1===c1||b1===K0))&&!(r1===k0&&b1===l0)){var T2=o.power,G2=c.power,U2=a0(T2),F2=a0(G2),V2=U2||F2;if(r1===k0&&b1!==k0&&c.previousGroup!==k0&&T2.equals(1))k1=new P(0),o.each(function(a3){k1=e.add(k1,e.multiply(a3,c.clone()))},!0);else{if(k1.power=V2?e.add(a0(T2)?T2:new P(T2),a0(G2)?G2:new P(G2)):r1===j?T2:T2.add(G2),k1.power.equals(0)&&(k1=k1.convert(j)),V2&&k1.convert(o1),o.imaginary&&c.imaginary){var r3=j1(k1.power%2);r3&&(k1=new P(1),E2.negate())}k1.group!==o1&&k1.previousGroup&&(k1.previousGroup=void 0),k1.multiplier=k1.multiplier.multiply(c.multiplier)}}else if(r1===l0&&o.isLinear())if(b1===l0&&c.distributeExponent(),b1===l0&&c.isLinear()){for(var C2 in c.symbols){var D2=c.symbols[C2];k1=k1.combine(D2)}k1.multiplier=k1.multiplier.multiply(c.multiplier)}else k1.combine(c);else if(r1!==j){if(r1===l0)k1.distributeExponent(),k1.combine(c);else if(!c.isOne()){var W2=c.multiplier.clone();c.toUnitMultiplier(),k1=P.shell(l0).combine([k1,c]),k1.multiplier=k1.multiplier.multiply(W2)}}else k1=c.clone().toUnitMultiplier();if(k1.group===c1){var n3=Math.log(k1.value),K2=Math.log(q1)/n3,R2=Math.log(z1)/n3,H2=E2.num/q1,k2=E2.den/z1;K2!==0&&o0(K2)&&o0(H2)&&(k1.power=k1.power.add(new x0(K2)),E2.num/=q1),R2!==0&&o0(R2)&&o0(k2)&&(k1.power=k1.power.subtract(new x0(R2)),E2.den/=z1)}if(k1.length===1){var _0=k1.multiplier;k1=f0(k1.symbols),k1.multiplier=k1.multiplier.multiply(_0)}var t3=k1.power.toString();if(j1(t3)&&k1.fname===h1){h2=h2*k1.sign();var s3=k1.power;k1=k1.args[0],k1=e.multiply(new P(E2),e.pow(k1,new P(s3.divide(new x0(2))))),h2<0&&k1.negate()}else k1.multiplier=k1.multiplier.multiply(E2).multiply(h2),k1.group===Q0&&k1.isImaginary()&&k1.distributeMultiplier();return k1.group===c1&&o0(k1.power.toDecimal())&&(k1=k1.convert(j)),k1}else{J&&!k&&(_0=o,o=c,c=_0,_0=J,J=k,k=_0);var c3=H0(c),p3=H0(o);if(k&&c3){var i3=new L1;c.eachElement(function(a3,j2,w3){i3.set(j2,w3,e.multiply(o.clone(),a3))}),c=i3}else if(p3&&c3)c=o.multiply(c);else if(k&&i0(c))c.each(function(a3,j2){j2--,c.elements[j2]=e.multiply(o.clone(),c.elements[j2])});else if(i0(o)&&i0(c))c.each(function(a3,j2){j2--,c.elements[j2]=e.multiply(o.elements[j2],c.elements[j2])});else{if(i0(o)&&H0(c))return this.multiply(c,o);if(H0(o)&&i0(c))if(c.elements.length===o.rows()){var i3=new L1,d3=o.cols();return c.each(function(j2,w3){for(var o3=[],u3=0;u3<d3;u3++)o3.push(e.multiply(o.elements[w3-1][u3].clone(),j2.clone()));i3.elements.push(o3)}),i3}else C("Dimensions must match!")}return c}},this.divide=function(o,c){var k=a0(o),J=a0(c);if(k&&J){if(o.unit||c.unit)return e.Unit.divide(o,c);var w0;if(c.equals(0))throw new f("Division by zero not allowed!");return o.isConstant()&&c.isConstant()?(w0=o.clone(),w0.multiplier=w0.multiplier.divide(c.multiplier)):(c.invert(),w0=e.multiply(o,c)),w0}else{var _0=i0(o),J0=i0(c);if(k&&J0)c=c.map(function(z1){return e.divide(o.clone(),z1)});else if(_0&&J)c=o.map(function(z1){return e.divide(z1,c.clone())});else if(_0&&J0)o.dimensions()===c.dimensions()?c=c.map(function(z1,n1){return e.divide(o.elements[--n1],z1)}):e.error("Cannot divide vectors. Dimensions do not match!");else{var r1=H0(o),b1=H0(c);if(r1&&J){var q1=new L1;o.eachElement(function(z1,n1,u2){q1.set(n1,u2,e.divide(z1,c.clone()))}),c=q1}else if(k&&b1){var q1=new L1;c.eachElement(function(n1,u2,a2){q1.set(u2,a2,e.divide(o.clone(),n1))}),c=q1}else if(r1&&b1){var q1=new L1;o.rows()===c.rows()&&o.cols()===c.cols()?(o.eachElement(function(n1,u2,a2){q1.set(u2,a2,e.divide(n1,c.elements[u2][a2]))}),c=q1):e.error("Dimensions do not match!")}else if(r1&&J0)if(o.cols()===c.dimensions()){var q1=new L1;o.eachElement(function(n1,u2,a2){q1.set(u2,a2,e.divide(n1,c.elements[u2].clone()))}),c=q1}else e.error("Unable to divide matrix by vector.")}return c}},this.pow=function(o,c){var k=a0(o),J=a0(c);if(k&&J){if(o.unit||c.unit)return e.Unit.pow(o,c);if(o.group===K0&&o.fname===z0&&j1(c)){var z1=o.multiplier.clone(),w0=e.pow(o.args[0],c);return w0.multiplier=z1,w0}if(o.isInfinity||c.isInfinity){if(o.isInfinity&&c.isInfinity)throw new m("("+o+")^("+c+") is undefined!");if(o.isConstant()&&c.isInfinity){if(o.equals(0)){if(c.lessThan(0))throw new m("0^Infinity is undefined!");return new P(0)}if(o.equals(1))throw new m("1^"+c.toString()+" is undefined!");if(c.lessThan(0))return new P(0);if(!o.lessThan(0))return P.infinity()}if(o.isInfinity&&c.isConstant()){if(c.equals(0))throw new m(o+"^0 is undefined!");return c.lessThan(0)?new P(0):e.multiply(P.infinity(),e.pow(new P(o.sign()),c.clone()))}}var _0=o.equals(0),J0=c.equals(0);if(_0&&J0)throw new m("0^0 is undefined!");if(_0&&c.isConstant()&&c.multiplier.greaterThan(0))return new P(0);if(J0)return new P(1);var r1=c.isConstant(),b1=o.isConstant(),q1=c.isInteger(),z1=o.multiplier,n1=o.clone();if(b1&&r1&&o.equals(0)&&c.lessThan(0))throw new m("Division by zero is not allowed!");if(W.PARSE2NUMBER&&b1&&r1&&o.sign()<0&&o2(c)){var u2,a2,l2;return u2=Math.PI*c,a2=new P(Math.cos(u2)),l2=e.multiply(P.imaginary(),new P(Math.sin(u2))),e.add(a2,l2)}if(W.PARSE2NUMBER&&o.isImaginary()&&r1&&o0(c)&&!c.lessThan(0)){var a2,l2,h2,y2,E2,k1,f2;if(a2=o.realpart(),l2=o.imagpart(),a2.isConstant("all")&&l2.isConstant("all"))return f2=W.USE_BIG?P(E1.atan2(G2.multiplier.toDecimal(),h2.multiplier.toDecimal()).times(c.toString())):Math.atan2(l2,a2)*c,y2=new P(f2),h2=e.pow(P.hyp(a2,l2),c),E2=e.multiply(h2.clone(),e.trig.cos(y2.clone())),k1=e.multiply(h2,e.trig.sin(y2)),e.add(E2,e.multiply(P.imaginary(),k1))}if(n1.toUnitMultiplier(),n1.group===K0&&n1.fname===h1&&!r1){var b2=n1.args[0];b2.multiplyPower(new P(.5)),b2.multiplier.multiply(n1.multiplier),b2.multiplyPower(c),n1=b2}else{var d2=z1.sign();o2(c)&&d2<0&&(n1.negate(),n1=e.symfunction(f1,[n1]),n1.negate()),n1.multiplyPower(c)}if(b1&&r1&&W.PARSE2NUMBER){var I2;d2<0&&(o.negate(),c.multiplier.den.equals(2)?I2=new P(W.IMAGINARY):o0(c.multiplier)?j1(c.multiplier)?I2=new P(1):I2=new P(-1):j1(c.multiplier.den)?I2=e.pow(e.symfunction(f1,[new P(d2)]),c.clone()):I2=new P(Math.pow(d2,c.multiplier.num))),n1=new P(Math.pow(o.multiplier.toDecimal(),c.multiplier.toDecimal())),I2&&(n1=e.multiply(n1,I2))}else if(q1&&!z1.equals(1)){var O2=c.abs();if(O2.gt(W.MAX_EXP))return c.sign()<0?new P(0):P.infinity();var x2=c.multiplier.toDecimal(),C2=Math.sign(x2);x2=Math.abs(x2);var T2=new x0(1);T2.num=z1.num.pow(x2),T2.den=z1.den.pow(x2),C2<0&&T2.invert(),n1.multiplier=n1.multiplier.multiply(T2)}else{var d2=o.sign();if(c.isConstant()&&o.isConstant()&&!c.multiplier.den.equals(1)&&d2<0)if(c.multiplier.den.equals(2)){var G2=new P(W.IMAGINARY);o.negate(),c.lessThan(0)&&(G2.negate(),c.negate()),n1=e.multiply(e.pow(o,c),G2)}else{var U2=o.clone();U2.multiplier.negate(),n1=e.pow(e.symfunction(f1,[new P(d2)]),c.clone());var F2=e.pow(new P(U2.multiplier.num),c.clone()),V2=e.pow(new P(U2.multiplier.den),c.clone()),h2=e.divide(F2,V2);n1=e.multiply(n1,h2)}else if(W.PARSE2NUMBER&&c.isImaginary()){var a2=c.realpart(),l2=c.imagpart(),U2=o.clone().toLinear(),r3=e.pow(U2.clone(),a2),D2=X2(U2.clone()),W2=q0.cos(e.multiply(l2.clone(),D2)),n3=e.multiply(q0.sin(e.multiply(l2,X2(U2))),P.imaginary());n1=e.multiply(r3,e.add(W2,n3)),n1=e.expand(e.parse(n1))}else{var K2=o.group===j&&d2<0,R2=C3(new P(K2?z1.num:Math.abs(z1.num)).setPower(c.clone())),H2=C3(new P(z1.den).setPower(c.clone()).invert());if(o.imaginary)if(q1){var b2,x2,k2;b2=Math.sign(c),x2=M1(c),k2=x2%4,n1=new P(j1(k2)?-1:W.IMAGINARY),(k2===0||b2<0&&k2===1||b2>0&&k2===3)&&n1.negate()}else{var t3=c.multiplier.multiply(x0.quick(1,2)),s3=Math.pow(-1,t3.num);n1=j1(t3.den)?new P(-1).setPower(t3,!0):new P(s3)}if(d2<0&&!K2&&n1.negate(),r1&&o.group!==o1){var c3=j1(c.multiplier.den),p3=j1(o.power),k2=n1.power.toDecimal(),i3=j1(k2);if(c3&&p3&&!i3){if(k2===1)n1=e.symfunction(z0,[n1]);else if(o0(k2))n1=e.multiply(e.symfunction(z0,[n1.clone().toLinear()]),n1.clone().setPower(new x0(k2-1)));else{var x2=n1.power;n1=e.symfunction(z0,[n1.toLinear()]).setPower(x2)}W.POSITIVE_MULTIPLIERS&&n1.fname===z0&&(n1=n1.args[0])}}if(c.equals(2)&&n1.group===l0){var d3=new P(1);n1.each(function(y3){d3=e.multiply(d3,e.pow(y3,c))}),n1=d3}}}if(n1=C3(n1),R2&&H2&&(n1=e.multiply(n1,c6(e.multiply(R2,H2)))),n1.fname===h1){var a3=n1.group===o1,j2=a3?n1.power.multiplier.toString():n1.power.toString();if(j1(j2)){var w3=a3?e.divide(n1.power,new P(2)):new P(n1.power.divide(new x0(2))),z1=n1.multiplier;n1=e.pow(n1.args[0],w3),n1.multiplier=n1.multiplier.multiply(z1)}}else if(!W.IGNORE_E&&n1.isE()&&n1.group===o1&&n1.power.contains("pi")&&n1.power.contains(W.IMAGINARY)&&c.group===l0){var y2=c.stripVar(W.IMAGINARY);n1=e.add(q0.cos(y2),e.multiply(P.imaginary(),q0.sin(y2)))}return n1}else{if(i0(o)&&J)o=o.map(function(u3){return e.pow(u3,c.clone())});else if(H0(o)&&J){var o3=new L1;o.eachElement(function(u3,y3,O3){o3.set(y3,O3,e.pow(u3,c.clone()))}),o=o3}else if(k&&H0(c)){var o3=new L1;c.eachElement(function(y3,O3,p6){o3.set(O3,p6,e.pow(o.clone(),y3))}),o=o3}return o}},this.comma=function(o,c){return o instanceof _||(o=_.create(o)),o.append(c),o},this.mod=function(o,c){return w1(o,c)},this.slice=function(o,c){return new N(o,c)},this.equals=function(o,c){return o.group!==T0&&!o.isLinear()&&C("Cannot set equality for "+o.toString()),A[o.value]=c.clone(),c},this.percent=function(o){return e.divide(o,new P(100))},this.assign=function(o,c){if(o instanceof _&&c instanceof _)return o.elements.map(function(J,w0){return e.assign(J,c.elements[w0])}),y1.fromArray(c.elements);if(o.parent){var k=o.parent;return k.elements[k.getter]=c,delete k.getter,k}if(o.group!==T0)throw new L("Cannot complete operation. Incorrect LH value for "+o);return A[o.value]=c,c},this.function_assign=function(o,c){var k=o.elements.pop();return u0(k,o.elements,c)};var g3=function(o){return new P(o===!0?1:0)};this.eq=function(o,c){return g3(o.equals(c))},this.gt=function(o,c){return g3(o.gt(c))},this.gte=function(o,c){return g3(o.gte(c))},this.lt=function(o,c){return g3(o.lt(c))},this.lte=function(o,c){return g3(o.lte(c))},this.factorial=function(o){return this.symfunction(d0,[o])},this.dfactorial=function(o){return this.symfunction(g,[o])}}var X1={convert:function(e,l){var d;if(e===0)d=[0,1];else if(e<1e-6||e>1e20){var N=this.quickConversion(Number(e));if(N[1]<=1e20){var _=Math.abs(e),G=e/_;d=this.fullConversion(_.toFixed((N[1]+"").length-1)),d[0]=d[0]*G}else d=N}else d=this.fullConversion(e);return d},quickConversion:function(e){var l=function(N){typeof N!="string"&&(N=N.toString());var _="",G=N.charAt(0);return G==="-"?(N=N.substr(1,N.length),_="-"):G==="+"&&(N=N.substr(1,N.length)),{sign:_,value:N}};function d(N){S1.isScientific(N)&&(N=g0(N));var _=l(N),G=_.value.split("."),t0;G.length===1?t0=G[0]:t0=G[0]+G[1];var q0=G[1]?G[1].length:0,X0=`1${"0".repeat(q0)}`;return t0!=="0"&&(t0=t0.replace(/^0+/,"")),[_.sign+t0,X0]}return d(e)},fullConversion:function(e){for(var l=!1,d=0,N=1,_=1,G=0,t0=0,q0=e,X0=1e-16;!l;){t0++,t0>1e4&&(l=!0);var i=Math.floor(q0),u=d+i*_,O=N+i*G,I=q0-i;I<X0&&(l=!0),q0=1/I,d=_,N=G,_=u,G=O,(Math.abs(u/O-e)<X0||t0>30)&&(l=!0)}return[u,O]}},N1={parser:function(){var e=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],l=new V1;for(var d in l)e.indexOf(d)===-1&&delete l[d];l.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(_){return _}}),l.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(_){return _}});var N=l.getBrackets();return N["{"].maps_to=void 0,l}(),space:"~",dot:" \\cdot ",latex:function(e,l){if(e.clone&&(e=e.clone()),e instanceof Z.classes.Collection&&(e=e.elements),$(e)){for(var d=[],N=0;N<e.length;N++){var _=e[N];a0(_)||(_=Z.parse(_)),d.push(this.latex(_,l))}return this.brackets(d.join(", "),"square")}else if(H0(e)){for(var G=`\\begin{pmatrix}
`,N=0;N<e.elements.length;N++){for(var t0=[],q0=e.elements[N],X0=0;X0<q0.length;X0++)t0.push(this.latex(q0[X0],l));G+=t0.join(" & "),N<e.elements.length-1&&(G+=`\\\\
`)}return G+="\\end{pmatrix}",G}else if(i0(e)){for(var G="\\left[",N=0;N<e.elements.length;N++)G+=this.latex(e.elements[N],l)+" "+(N!==e.elements.length-1?",\\,":"");return G+="\\right]",G}else if(u1(e)){for(var G="\\{",N=0;N<e.elements.length;N++)G+=this.latex(e.elements[N],l)+" "+(N!==e.elements.length-1?",\\,":"");return G+="\\}",G}e=e.clone();var i=l==="decimal"||l==="decimals",u=e.power,O=F0(u),I=e.multiplier.lessThan(0);if(e.group===c1&&i)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs();var z;if(i){var p0=String(e.multiplier.toDecimal());z=[p0,""]}else z=[e.multiplier.num,e.multiplier.den];var L0=this.value(e,O,l,I),e1;O&&u.negate(),i?(e1=a0(u)?N1.latex(u,l):String(u.toDecimal()),String(e1)==="1"&&(e1="")):a0(u)?e1=this.latex(u,l):e1=this.formatFrac(u,!0);var $0=["",""],V0=O?1:0;$0[V0]=e1;var M1=(I?"-":"")+this.set(z,L0,$0,e.group===l0);return M1.replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(e,l,d,N){var _=e.group,G=e.previousGroup,t0=["",""],q0=l?1:0;if(e.isInfinity)t0[q0]="\\infty";else if(_===T0||_===c1||G===T0||G===c1||G===j){var X0=this.formatSubscripts(e.value);X0.replace&&(X0=X0.replace(/(.+)_$/,"$1\\_"));var i=String(X0).split("_"),u=this.greek[i[0]];u&&(i[0]=u,X0=i.join("_"));var e=this.symbols[i[0]];e&&(i[0]=e,X0=i.join("_")),t0[q0]=X0}else if(_===K0||G===K0){for(var O,I=[],z=e.fname,p0=0;p0<e.args.length;p0++){var L0=e.args[p0],e1;typeof L0=="string"?e1=L0:e1=this.latex(L0,d),I.push(e1)}if(z===h1)t0[q0]="\\sqrt"+this.braces(I.join(","));else if(z===z0)t0[q0]=this.brackets(I.join(","),"abs");else if(z===f1)t0[q0]=this.brackets(I.join(","),"parens");else if(z==="limit")t0[q0]=" \\lim\\limits_{"+I[1]+" \\to "+I[2]+"} "+I[0];else if(z==="integrate")t0[q0]="\\int"+this.braces(I[0])+this.braces("d"+I[1]);else if(z==="defint")t0[q0]="\\int\\limits_"+this.braces(I[1])+"^"+this.braces(I[2])+" "+I[0]+" d"+I[3];else if(z===d0||z===g){var L0=e.args[0];L0.power.equals(1)&&(L0.isComposite()||L0.isCombination())&&(I[0]=this.brackets(I[0])),t0[q0]=I[0]+(z===d0?"!":"!!")}else if(z==="floor")t0[q0]="\\left \\lfloor"+this.braces(I[0])+"\\right \\rfloor";else if(z==="ceil")t0[q0]="\\left \\lceil"+this.braces(I[0])+"\\right \\rceil";else if(z===W.LOG&&I.length>1)t0[q0]="\\mathrm"+this.braces(W.LOG)+"_"+this.braces(I[1])+this.brackets(I[0]);else if(z===W.LOG10)t0[q0]="\\mathrm"+this.braces(W.LOG)+"_"+this.braces(10)+this.brackets(I[0]);else if(z==="sum"){var $0=I[0],V0=I[1],M1=I[2],W0=I[3];t0[q0]="\\sum\\limits_{"+this.braces(V0)+"="+this.braces(M1)+"}^"+this.braces(W0)+" "+this.braces($0)}else if(z==="product"){var $0=I[0],V0=I[1],M1=I[2],W0=I[3];t0[q0]="\\prod\\limits_{"+this.braces(V0)+"="+this.braces(M1)+"}^"+this.braces(W0)+" "+this.braces($0)}else if(z==="nthroot")t0[q0]="\\sqrt["+I[1]+"]"+this.braces(I[0]);else if(z==="mod")t0[q0]=I[0]+" \\bmod "+I[1];else if(z==="realpart")t0[q0]="\\operatorname{Re}"+this.brackets(I[0]);else if(z==="imagpart")t0[q0]="\\operatorname{Im}"+this.brackets(I[0]);else{var O=z!==""?"\\mathrm"+this.braces(z.replace(/_/g,"\\_")):"";e.isConversion?t0[q0]=O+this.brackets(I.join(""),"parens"):t0[q0]=O+this.brackets(I.join(","),"parens")}}else if(e.isComposite()){for(var T1=e.collectSymbols().sort(_===Q0||G===Q0?function(Y1,B1){return B1.group-Y1.group}:function(Y1,B1){var K1=a0(Y1.power)?-1:Y1.power,m2=a0(B1.power)?-1:B1.power;return m2-K1}),w1=[],a1=T1.length,p0=0;p0<a1;p0++)w1.push(N1.latex(T1[p0],d));var X0=w1.join("+");t0[q0]=!(e.isLinear()&&e.multiplier.equals(1))||N?this.brackets(X0,"parens"):X0}else if(_===l0||G===o1||G===l0){_===l0&&e.distributeExponent();var $1=[],J1=[],H1=[],D1=[],W1=0,t2=0,Z1=function(s1,Y1,B1){if(B1>1&&Y1.length>0)for(var K1=Y1.length,m2=0;m2<K1;m2++){var M2=Y1[m2],w2=s1[M2];/^\\left\(.+\\right\)\^\{.+\}$/g.test(w2)||/^\\left\(.+\\right\)$/g.test(w2)||(s1[M2]=N1.brackets(w2,"parens"))}return s1};e.each(function(s1){var Y1=F0(s1.power),B1;Y1?(B1=N1.latex(s1.invert(),d),t2++,s1.isComposite()&&(e.multiplier.den!=1&&Math.abs(s1.power)==1&&(B1=N1.brackets(B1,"parens")),H1.push($1.length)),$1.push(B1)):(B1=N1.latex(s1,d),W1++,s1.isComposite()&&(e.multiplier.num!=1&&Math.abs(s1.power)==1&&(B1=N1.brackets(B1,"parens")),D1.push(J1.length)),J1.push(B1))}),Z1(J1,D1,W1),t0[0]=J1.join(this.dot),Z1($1,H1,t2),t0[1]=$1.join(this.dot)}return t0},set:function(e,l,d,N){var _=function(z){return/^\\left\(.+\\right\)$/.test(z)};if(d&&(d=this.formatP(d)),N){var G=d[0];d[0]=""}l=this.merge(l,d);var t0=e[0],q0=e[1],X0=l[0],i=l[1];X0&&Number(t0)===1&&(t0=""),Number(q0)===1&&(q0="");var u=this.join(t0,X0,_(X0)?"":this.dot),O=this.join(q0,i,_(i)?"":this.dot);if(u&&O){var I=this.frac(u,O);return N&&G&&(I=this.brackets(I)+G),I}else return u},merge:function(e,l){for(var d=[],N=0;N<2;N++)d[N]=e[N]+l[N];return d},join:function(e,l,d){return!e&&!l?"":e&&!l?e:l&&!e?l:e+d+l},formatSubscripts:function(e){for(var l=e.toString().split("_"),d="";l.length>1;)l.length>0&&(d="_"+this.braces(l.pop()+d));return l[0]+d},formatP:function(e){for(var l=0;l<2;l++){var d=e[l];d&&(e[l]="^"+this.braces(d))}return e},formatFrac:function(e,l){var d=e.num.toString(),N=e.den.toString();return l&&d==="1"&&N==="1"?"":N==="1"?d:this.frac(d,N)},frac:function(e,l){return"\\frac"+this.braces(e)+this.braces(l)},braces:function(e){return"{"+e+"}"},brackets:function(e,l){l=l||"parens";var d={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]},N=d[l];return"\\left"+N[0]+e+"\\right"+N[1]},filterTokens:function(e){var l=[];$(e)&&(l.type=e.type);for(var d=["\\","left","right","big","Big","large","Large"],N=0,_=e.length;N<_;N++){var G=e[N],t0=e[N+1];G.value==="\\"&&t0.value==="\\"?l.push(G):$(G)?l.push(N1.filterTokens(G)):d.indexOf(G.value)===-1&&l.push(G)}return l},parse:function(e){var l,d,N="",_=this.filterTokens(e),G={cdot:"",times:"",infty:"Infinity"},t0=function(T1){return _[typeof T1>"u"?++l:l+=T1]},q0=function(){return N1.parse(t0())},X0=function(T1){return T1 in G?G[T1]:T1==="*"&&_[l+1].value==="&"?(t0(2),","):T1==="&"?(t0(),","):T1==="\\"?"],[":T1};for(l=0,d=_.length;l<d;l++){var i=_[l];if(i.value==="frac"){var u=q0(),O=q0();N+=u+"/"+O}else if(i.value in N1.symbols)if(i.value===h1&&_[l+1].type==="vector"&&_[l+2].type==="Set"){var I=q0(),z=q0();N+=z+"^"+c0("1/"+I)}else N+=i.value+q0();else if(i.value==="int"){var p0=q0();l++;var L0=t0().value;L0=X0(L0.substring(1,L0.length)),N+="integrate"+c0(p0+","+L0)}else if(i.value==="int_"){var d=q0();l++;var e1=t0().value;if(e1===void 0){l--;var e1=q0()}var p0=q0(),L0=t0().value;if(L0===",")var L0=t0().value;if(L0==="differentialD"){l++;var L0=t0().value}if(L0==="mathrm"){l++;var L0=t0().value}N+="defint"+c0(p0+","+d+","+e1+","+L0)}else if(i.value&&i.value.startsWith("int_")){var d=i.value.replace("int_","");console.log("uppernow"),l++;var e1=t0().value;if(e1===void 0){l--;var e1=q0()}var p0=q0(),L0=t0().value;if(L0===",")var L0=t0().value;if(L0==="differentialD"){l++;var L0=t0().value}if(L0==="mathrm"){l++;var L0=t0().value}N+="defint"+c0(p0+","+d+","+e1+","+L0)}else if(i.value==="mathrm"){var p0=_[++l][0].value;N+=p0+q0()}else if(i.value==="sum_"||i.value==="prod_"){var $0=i.value==="sum_"?"sum":"product",V0=t0();l++;var M1=q0(),p0=q0();N+=$0+c0([p0,X0(V0[0]),X0(V0[2]),X0(M1)].join(","))}else if(i.value==="lim_"){var V0=t0();N+="limit"+c0([q0(),X0(V0[0]),X0(V0[2])].join(","))}else if(i.value==="begin"){var V0=t0();if(Array.isArray(V0)){var W0=V0[0].value;W0==="matrix"&&(N+="matrix([")}}else if(i.value==="end"){var V0=t0();if(Array.isArray(V0)){var W0=V0[0].value;W0==="matrix"&&(N+="])")}}else Array.isArray(i)?N+=X0(N1.parse(i)):N+=X0(i.value.toString())}return c0(N)}};function y1(e){i0(e)?this.elements=e.items.slice(0):$(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}y1.arrayPrefill=function(e,l){var d=[];l=l||0;for(var N=0;N<e;N++)d[N]=l;return d},y1.fromArray=function(e){var l=new y1;return l.elements=e,l},y1.fromSet=function(e){return y1.fromArray(e.elements)},y1.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,l){a0(l)||(l=new P(l)),this.elements[e]=l},dimensions:function(){return this.elements.length},modulus:function(){return F1("SAFE",function(){return Z.pow(this.dot(this.clone()),new P(.5))},void 0,this)},eql:function(e){var l=this.elements.length,d=e.elements||e;if(l!==d.length)return!1;do if(Math.abs(Z.subtract(this.elements[l-1],d[l-1]).valueOf())>PRECISION)return!1;while(--l);return!0},clone:function(){for(var e=new y1,l=this.elements.length,d=0;d<l;d++)e.elements.push(this.elements[d].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(e){var l=[];return this.each(function(d,N){l.push(e(d,N))}),new y1(l)},each:function(e){var l=this.elements.length,d=l,N;do N=d-l,e(this.elements[N],N+1);while(--l)},toUnitVector:function(){return F1("SAFE",function(){var e=this.modulus();return e.valueOf()===0?this.clone():this.map(function(l){return Z.divide(l,e)})},void 0,this)},angleFrom:function(e){return F1("SAFE",function(){var l=e.elements||e,d=this.elements.length;if(d!==l.length)return null;var N=new P(0),_=new P(0),G=new P(0);this.each(function(i,u){N=Z.add(N,Z.multiply(i,l[u-1])),_=Z.add(_,Z.multiply(i,i)),G=Z.add(G,Z.multiply(l[u-1],l[u-1]))}),_=Z.pow(_,new P(.5)),G=Z.pow(G,new P(.5));var t0=Z.multiply(_,G);if(t0.valueOf()===0)return null;var q0=Z.divide(N,t0),X0=q0.valueOf();return X0<-1&&(q0=-1),X0>1&&(q0=1),new P(Math.acos(q0))},void 0,this)},isParallelTo:function(e){var l=this.angleFrom(e).valueOf();return l===null?null:l<=PRECISION},isAntiparallelTo:function(e){var l=this.angleFrom(e).valueOf();return l===null?null:Math.abs(l-Math.PI)<=PRECISION},isPerpendicularTo:function(e){var l=this.dot(e);return l===null?null:Math.abs(l)<=PRECISION},add:function(e){return F1("SAFE",function(){var l=e.elements||e;return this.elements.length!==l.length?null:this.map(function(d,N){return Z.add(d,l[N-1])})},void 0,this)},subtract:function(e){return F1("SAFE",function(){var l=e.elements||e;return this.elements.length!==l.length?null:this.map(function(d,N){return Z.subtract(d,l[N-1])})},void 0,this)},multiply:function(e){return this.map(function(l){return l.clone()*e.clone()})},x:function(e){return this.multiply(e)},dot:function(e){return F1("SAFE",function(){var l=e.elements||e,d=new P(0),N=this.elements.length;if(N!==l.length)return null;do d=Z.add(d,Z.multiply(this.elements[N-1],l[N-1]));while(--N);return d},void 0,this)},cross:function(e){var l=e.elements||e;if(this.elements.length!==3||l.length!==3)return null;var d=this.elements;return F1("SAFE",function(){return new y1([Z.subtract(Z.multiply(d[1],l[2]),Z.multiply(d[2],l[1])),Z.subtract(Z.multiply(d[2],l[0]),Z.multiply(d[0],l[2])),Z.subtract(Z.multiply(d[0],l[1]),Z.multiply(d[1],l[0]))])},void 0,this)},max:function(){var e=0,l=this.elements.length,d=l,N;do N=d-l,Math.abs(this.elements[N].valueOf())>Math.abs(e.valueOf())&&(e=this.elements[N]);while(--l);return e},magnitude:function(){var e=new P(0);return this.each(function(l){e=Z.add(e,Z.pow(l,new P(2)))}),Z.sqrt(e)},indexOf:function(e){var l=null,d=this.elements.length,N=d,_;do _=N-d,l===null&&this.elements[_].valueOf()===e.valueOf()&&(l=_+1);while(--d);return l},text:function(e){return U0(this)},toString:function(){return this.text()},latex:function(e){for(var l=[],d=0;d<this.elements.length;d++)l.push(N1.latex.call(N1,this.elements[d],e));return"["+l.join(", ")+"]"}};function L1(){var e=arguments,l=e.length,d,N=[];if(H0(e))for(d=0;d<l;d++)N.push(e[d].slice(0));else{var _,G,t0;for(d=0;d<l;d++)_=e[d],i0(_)&&(_=_.elements),$(_)||(_=[_]),t0=_.length,G&&G!==t0&&C("Unable to create Matrix. Row dimensions do not match!"),N.push(_),G=t0}this.elements=N}L1.identity=function(e){for(var l=new L1,d=0;d<e;d++){l.elements.push([]);for(var N=0;N<e;N++)l.set(d,N,d===N?new P(1):new P(0))}return l},L1.fromArray=function(e){function l(d){return L1.apply(this,d)}return l.prototype=L1.prototype,new l(e)},L1.zeroMatrix=function(e,l){for(var d=new L1,N=0;N<e;N++)d.elements.push(y1.arrayPrefill(l,new P(0)));return d},L1.prototype={custom:!0,get:function(e,l){if(this.elements[e])return this.elements[e][l]},map:function(e,l){var d=new L1;return this.each(function(N,_,G){d.set(_,G,e.call(d,N),l)}),d},set:function(e,l,d,N){this.elements[e]||(this.elements[e]=[]),this.elements[e][l]=N||a0(d)?d:new P(d)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var l=this.rows(),d=[];if(e>this.cols()||!e)return d;for(var N=0;N<l;N++)d.push(this.elements[N][e-1]);return d},eachElement:function(e){var l=this.rows(),d=this.cols(),N,_;for(N=0;N<l;N++)for(_=0;_<d;_++)e.call(this,this.elements[N][_],N,_)},determinant:function(){if(!this.isSquare())return null;var e=this.toRightTriangular(),l=e.elements[0][0],d=e.elements.length-1,N=d,_;do _=N-d+1,l=Z.multiply(l,e.elements[_][_]);while(--d);return l},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&this.determinant()===0},augment:function(e){var l=this.rows(),d=e.rows();l!==d&&C("Cannot augment matrix. Rows don't match.");for(var N=0;N<l;N++)this.elements[N]=this.elements[N].concat(e.elements[N]);return this},clone:function(){for(var e=this.rows(),l=this.cols(),d=new L1,N=0;N<e;N++){d.elements[N]=[];for(var _=0;_<l;_++){var G=this.elements[N][_];d.elements[N][_]=a0(G)?G.clone():G}}return d},invert:function(){return this.isSquare()||C("Matrix is not square!"),F1("SAFE",function(){var e=this.elements.length,l=e,d,N,_=L1.identity(e),G=this.augment(_).toRightTriangular(),t0,q0=G.elements[0].length,X0,i,u,O=[],I;do{d=e-1,i=[],t0=q0,O[d]=[],u=G.elements[d][d];do X0=q0-t0,I=Z.divide(G.elements[d][X0],u.clone()),i.push(I),X0>=l&&O[d].push(I);while(--t0);for(G.elements[d]=i,N=0;N<d;N++){i=[],t0=q0;do X0=q0-t0,i.push(Z.subtract(G.elements[N][X0].clone(),Z.multiply(G.elements[d][X0].clone(),G.elements[N][d].clone())));while(--t0);G.elements[N]=i}}while(--e);return L1.fromArray(O)},void 0,this)},toRightTriangular:function(){return F1("SAFE",function(){var e=this.clone(),l,d,N,_=this.elements.length,G=_,t0,q0,X0=this.elements[0].length,i;do{if(t0=G-_,d=e.elements[t0][t0],d.valueOf()===0){for(var u=t0+1;u<G;u++)if(N=e.elements[u][t0],N&&N.valueOf()!==0){l=[],q0=X0;do i=X0-q0,l.push(Z.add(e.elements[t0][i].clone(),e.elements[u][i].clone()));while(--q0);e.elements[t0]=l;break}}var d=e.elements[t0][t0];if(d.valueOf()!==0)for(u=t0+1;u<G;u++){var O=Z.divide(e.elements[u][t0].clone(),e.elements[t0][t0].clone());l=[],q0=X0;do i=X0-q0,l.push(i<=t0?new P(0):Z.subtract(e.elements[u][i].clone(),Z.multiply(e.elements[t0][i].clone(),O.clone())));while(--q0);e.elements[u]=l}}while(--_);return e},void 0,this)},transpose:function(){var e=this.elements.length,l=this.elements[0].length,d=new L1,N=l,_,G,t0;do{_=l-N,d.elements[_]=[],G=e;do t0=e-G,d.elements[_][t0]=this.elements[t0][_].clone();while(--G)}while(--N);return d},canMultiplyFromLeft:function(e){var l=H0(e)?e.elements.length:e.length;return this.elements[0].length===l},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(e){return F1("SAFE",function(){var l=e.elements||e;if(!this.canMultiplyFromLeft(l)){if(this.sameSize(e)){for(var d=new L1,N=this.rows(),q0=0;q0<N;q0++){var _=Z.multiply(new y1(this.elements[q0]),new y1(e.elements[q0]));d.elements[q0]=_.elements}return d}return null}var G=this.elements.length,t0=G,q0,X0,i=l[0].length,u,O=this.elements[0].length,I=[],z,p0,L0;do{q0=t0-G,I[q0]=[],X0=i;do{u=i-X0,z=new P(0),p0=O;do L0=O-p0,z=Z.add(z,Z.multiply(this.elements[q0][L0],l[L0][u]));while(--p0);I[q0][u]=z}while(--X0)}while(--G);return L1.fromArray(I)},void 0,this)},add:function(e,l){var d=new L1;return this.sameSize(e)&&this.eachElement(function(N,_,G){var t0=Z.add(N.clone(),e.elements[_][G].clone());l&&(t0=l.call(d,t0,N,e.elements[_][G])),d.set(_,G,t0)}),d},subtract:function(e,l){var d=new L1;return this.sameSize(e)&&this.eachElement(function(N,_,G){var t0=Z.subtract(N.clone(),e.elements[_][G].clone());l&&(t0=l.call(d,t0,N,e.elements[_][G])),d.set(_,G,t0)}),d},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(this.rows()===1||this.cols()===1){var e=new y1;return e.elements=this.elements,e}return this},toString:function(e,l){for(var d=this.rows(),N=[],_=0;_<d;_++)N.push("["+this.elements[_].map(function(G){var t0=l?G.multiplier.toDecimal():G.toString();return G!==void 0?t0:""}).join(",")+"]");return"matrix"+c0(N.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(e){var l=this.cols(),d=this.elements;return P1("\\begin{vmatrix}{0}\\end{vmatrix}",function(){var N=[];for(var _ in d){for(var G=[],t0=0;t0<l;t0++)G.push(N1.latex.call(N1,d[_][t0],e));N.push(G.join(" & "))}return N.join(" \\cr ")})}},L1.prototype.each=L1.prototype.eachElement;function O1(e){if(this.elements=[],i0(e)||(e=y1.fromArray(arguments)),e)for(var l=e.elements,d=0,N=l.length;d<N;d++)this.add(l[d])}O1.fromArray=function(e){function l(d){return O1.apply(this,d)}return l.prototype=O1.prototype,new l(e)},O1.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var l=0;l<this.elements.length;l++){var d=this.elements[l];if(e.equals(d))return!0}return!1},each:function(e){for(var l=this.elements,d=new O1,N=0,_=l.length;N<_;N++){var G=l[N];e.call(this,G,d,N)}return d},clone:function(){var e=new O1;return this.each(function(l){e.add(l.clone())}),e},union:function(e){var l=this.clone();return e.each(function(d){l.add(d)}),l},difference:function(e){var l=this.clone();return e.each(function(d){l.remove(d)}),l},remove:function(e){for(var l=0,d=this.elements.length;l<d;l++){var N=this.elements[l];if(N.equals(e))return q2(this.elements,l),!0}return!1},intersection:function(e){var l=new O1,d=this;return e.each(function(N){d.contains(N)&&l.add(N)}),l},intersects:function(e){return this.intersection(e).elements.length>0},is_subset:function(e){for(var l=e.elements,d=0,N=l.length;d<N;d++)if(!this.contains(l[d]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var g2={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":E0.gamma},gamma_incomplete:{"Math2.factorial":E0.factorial},Li:{"Math2.Ei":E0.Ei,"Math2.bigLog":E0.bigLog,Frac:x0},Ci:{"Math2.factorial":E0.factorial},Ei:{"Math2.factorial":E0.factorial},Si:{"Math2.factorial":E0.factorial},Shi:{"Math2.factorial":E0.factorial},Chi:{isInt:o0,nround:U1,"Math2.num_integrate":E0.num_integrate},factor:{"Math2.ifactor":E0.ifactor,Symbol:P},num_integrate:{"Math2.simpson":E0.simpson,nround:U1},fib:{even:j1}},reformat:{diff:function(e,l){var d=e.args[1].toString(),N="var f = "+g2.build(e.args[0].toString(),[d])+";";return l[1]+="var diff = "+E0.diff.toString()+";",l[1]+=N,["diff(f)("+d+")",l]}},getProperName:function(e){var l={continued_fraction:"continuedFraction"};return l[e]||e},compileDependencies:function(e,l){var d=g2.dependencies[e],N=l&&l[1]?l[1]:"",_=l&&l[0]?l[0]:{};for(var G in d)if(typeof d[G]!="object"){var t0=G.split(".");N+="var "+(t0.length>1?t0[1]:t0[0])+"="+d[G]+";",_[G]=t0.pop()}return[_,N]},getArgsDeps:function(e,l){for(var d=e.args,N=0;N<d.length;N++)e.args[N].each(function(_){_.group===K0&&(l=g2.compileDependencies(_.fname,l))});return l},build:function(e,l){e=F1("PARSE2NUMBER",function(){return Z.parse(e)},!0);var d=C0(e),N=[],_=[],G=function(u,O){u.fname===""&&(u=P.unwrapPARENS(u)),O=O||[];var I=[],z=u.group,p0="",L0=function(T1){var w1=T1===l0?"*":"+",a1=[];for(var $1 in u.symbols){var J1=u.symbols[$1],H1=G(J1,O)[0];J1.isComposite()&&(H1=c0(H1)),a1.push(H1)}var D1=a1.join(w1);return D1=D1&&!u.multiplier.equals(1)?c0(D1):D1,D1},e1=function(T1){var w1;return T1 in Math?w1="Math."+T1:(T1=g2.getProperName(T1),N.indexOf(T1)===-1&&(O.push("var "+T1+" = "+E0[T1].toString()+"; "),N.push(T1)),w1=T1),w1=w1+c0(u.args.map(function(a1){return G(a1,O)[0]}).join(",")),w1};z===j?I.push(u.multiplier.toDecimal()):u.multiplier.equals(-1)?p0="-":u.multiplier.equals(1)||I.push(u.multiplier.toDecimal());var $0;if(z===T0||z===c1)$0=u.value;else if(z===K0)if(_=g2.compileDependencies(u.fname,_),_=g2.getArgsDeps(u,_),g2.reformat[u.fname]){var V0=g2.reformat[u.fname](u,_);_=V0[1],$0=V0[0]}else $0=e1(u.fname);else if(z===o1){var M1=u.previousGroup;M1===j||M1===T0?$0=u.value:M1===K0?($0=e1(u.fname),_=g2.compileDependencies(u.fname,_),_=g2.getArgsDeps(u,_)):$0=L0(u.previousGroup)}else $0=L0(u.group);if(u.group!==j&&!u.power.equals(1)){var W0=G(Z.parse(u.power));O.push(W0[1]),$0="Math.pow"+c0($0+","+W0[0])}return $0&&I.push(p0+$0),[I.join("*"),O.join("").replace(/\n+\s+/g," ")]};l&&(d=l);var t0=G(e);for(var q0 in _[0]){var X0=_[0][q0];t0[1]=t0[1].replace(q0,X0),_[1]=_[1].replace(q0,X0)}var i=new Function(d,(_[1]||"")+t0[1]+" return "+t0[0]+";");return i}};(function(){L2(Z.CONSTANTS),L2(Z.functions),Z.initConstants(),Z.error||(Z.error=C),W.LOG_FNS={log:Z.functions.log,log10:Z.functions.log10}})();var S2={allSame:S0,allNumeric:s0,arguments2Array:r2,arrayAddSlices:I0,arrayClone:P0,arrayMax:b0,arrayMin:O0,arrayEqual:M0,arrayUnique:p2,arrayGetVariables:A2,arraySum:m1,block:F1,build:g2.build,clearU:Q1,comboSort:j0,compare:v0,convertToVector:v2,customError:V,customType:Z0,decompose_fn:v1,each:e2,evaluate:n2,even:j1,evenFraction:o2,fillHoles:e0,firstObject:f0,format:P1,generatePrimes:g1,getCoeffs:B2,getU:i2,importFunctions:_1,inBrackets:c0,isArray:$,isExpression:Y,isFraction:n0,isInt:o0,isMatrix:H0,isNegative:F0,isNumericSymbol:x,isPrime:C1,isReserved:K,isSymbol:a0,isVariableSymbol:q,isVector:i0,keys:H,knownVariable:I1,nroots:d1,remove:q2,reserveNames:L2,range:T,round:U1,sameSign:i1,scientificToDecimal:g0,separate:B0,stringReplace:l1,text:U0,validateName:y0,variables:C0,warn:h0},s2={groups:m0,Symbol:P,Expression:t1,Frac:x0,Vector:y1,Matrix:L1,Parser:V1,Scientific:S1,Fraction:X1,Math2:E0,LaTeX:N1,Utils:S2,PARSER:Z,PARENTHESIS:f1,Settings:W,err:C,bigInt:R0,bigDec:E1,exceptions:Y0},G1=function(e,l,d,N){var _=!1,G=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(e);if(G)return a.setFunction(G[1],G[2].split(","),G[3]);e instanceof t1&&(e=e.toString()),$(d)||(d=typeof d>"u"?[]:[d]),d.forEach(function(q0){if(q0==="numer"){_=!0;return}var X0=Z.functions[d];X0&&X0[1]===1&&(e=`${q0}(${e})`)});var t0=F1("PARSE2NUMBER",function(){return Z.parse(e,l)},_||W.PARSE2NUMBER);return N?b[N-1]=t0:b.push(t0),new t1(t0)};return G1.rpn=function(e){return Z.tokenize(Z.toRPN(e))},G1.convertToLaTeX=function(e,l){return Z.toTeX(e,l)},G1.convertFromLaTeX=function(e){var l=N1.parse(Z.tokenize(e));return new t1(Z.parse(l))},G1.version=function(e){if(e)try{return s2[e].version}catch{return"No module named "+e+" found!"}return p1},G1.getWarnings=function(){return S},G1.setConstant=function(e,l){if(y0(e),!K(e))if(l==="delete"||l==="")delete Z.CONSTANTS[e];else{if(isNaN(l))throw new D("Constant must be a number!");Z.CONSTANTS[e]=l}return this},G1.getConstant=function(e){return String(Z.constant[e])},G1.setFunction=u0,G1.getCore=function(){return s2},G1.getExpression=G1.getEquation=t1.getExpression,G1.reserved=function(e){return e?w:w.join(", ")},G1.clear=function(e,l){if(e==="all")b=[];else if(e==="last")b.pop();else if(e==="first")b.shift();else{var d=e?e-1:b.length;l===!0?b[d]=void 0:q2(b,d)}return this},G1.flush=function(){return this.clear("all"),this},G1.expressions=function(e,l,d){for(var N=e?{}:[],_=0;_<b.length;_++){var G=l?N1.latex(b[_],d):U0(b[_],d);e?N[_+1]=G:N.push(G)}return N},G1.register=function(e){var l=this.getCore();if($(e))for(var d=0;d<e.length;d++)e&&this.register(e[d]);else if(e&&W.exclude.indexOf(e.name)===-1){if(e.dependencies){for(var d=0;d<e.dependencies.length;d++)if(!l[e.dependencies[d]])throw new Error(P1("{0} requires {1} to be loaded!",e.name,e.dependencies[d]))}var N=e.parent,_=e.build.call(l);if(N){l[N]||(l[e.parent]={});var G=N==="nerdamer"?this:l[N];G[e.name]=_}e.visible&&(Z.functions[e.name]=[_,e.numargs])}},G1.validateName=y0,G1.validVarName=function(e){try{return y0(e),w.indexOf(e)===-1}catch{return!1}},G1.supported=function(){return H(Z.functions)},G1.numEquations=G1.numExpressions=function(){return b.length},G1.setVar=function(e,l){return y0(e),e in Z.CONSTANTS&&C("Cannot set value for constant "+e),l==="delete"||l===""?delete A[e]:A[e]=a0(l)?l:Z.parse(l),this},G1.getVar=function(e){return A[e]},G1.clearVars=function(){return A={},this},G1.load=function(e){return e.call(this),this},G1.getVars=function(e,l){e=e||"text";var d={};if(e==="object")d=A;else for(var N in A)e==="latex"?d[N]=A[N].latex(l):e==="text"&&(d[N]=A[N].text(l));return d},G1.set=function(e,l){if(typeof e=="object")for(var d in e)G1.set(d,e[d]);var N=["SAFE"];N.indexOf(e)!==-1&&C("Cannot modify setting: "+e),e==="PRECISION"?(E1.set({precision:l}),W.PRECISION=l,l>21&&this.set("USE_BIG",!0)):e==="USE_LN"&&l===!0?(W.LOG="LN",W.LOG10="log",Z.functions.log=W.LOG_FNS.log10,Z.functions.log[0]=function(_){return _.isConstant()?new P(Math.log10(_)):Z.symfunction(W.LOG10,[_])},Z.functions.LN=W.LOG_FNS.log,delete Z.functions.log10):W[e]=l},G1.get=function(e){return W[e]},G1.updateAPI=function(e){var l=function(N){return function(){for(var _=[].slice.call(arguments),G=0;G<_.length;G++)_[G]=Z.parse(_[G]);return new t1(F1("PARSE2NUMBER",function(){return Z.callfunction(N,_)}))}};for(var d in Z.functions)(!(d in G1)||e)&&(G1[d]=l(d))},G1.replaceFunction=function(e,l,d){var N=Z.functions[e],_=typeof d>"u"?N[1]:d;Z.functions[e]=[l.call(void 0,N[0],s2),_]},G1.setOperator=function(e,l){Z.setOperator(e,l)},G1.getOperator=function(e){return Z.getOperator(e)},G1.aliasOperator=function(e,l){Z.aliasOperator(e,l)},G1.tree=function(e){return Z.tree(Z.toRPN(Z.tokenize(e)))},G1.htmlTree=function(e,l){var d=this.tree(e);return`<div class="tree">
    <ul>
        <li>
`+d.toHTML(3,l)+`
        </li>
    </ul>
</div>`},G1.addPeeker=function(e,l){Z.peekers[e]&&Z.peekers[e].push(l)},G1.removePeeker=function(e,l){q2(Z.peekers[e],l)},G1.parse=function(e){return String(e).split(";").map(function(l){return Z.parse(l)})},G1.updateAPI(),G1}({bigInt:function(){var r0=function(p1){var Z=1e7,R0=7,E1=9007199254740992,m0=T0(E1),G0=Math.log(E1);function N0(T,H){return typeof T>"u"?N0[0]:typeof H<"u"?+H==10?i1(T):$(T,H):i1(T)}function W(T,H){this.value=T,this.sign=H,this.isSmall=!1}W.prototype=Object.create(N0.prototype);function j(T){this.value=T,this.sign=T<0,this.isSmall=!0}j.prototype=Object.create(N0.prototype);function c1(T){return-E1<T&&T<E1}function T0(T){return T<1e7?[T]:T<1e14?[T%1e7,Math.floor(T/1e7)]:[T%1e7,Math.floor(T/1e7)%1e7,Math.floor(T/1e14)]}function o1(T){K0(T);var H=T.length;if(H<4&&g0(T,m0)<0)switch(H){case 0:return 0;case 1:return T[0];case 2:return T[0]+T[1]*Z;default:return T[0]+(T[1]+T[2]*Z)*Z}return T}function K0(T){for(var H=T.length;T[--H]===0;);T.length=H+1}function k0(T){for(var H=new Array(T),f0=-1;++f0<T;)H[f0]=0;return H}function l0(T){return T>0?Math.floor(T):Math.ceil(T)}function Q0(T,H){var f0=T.length,v0=H.length,u0=new Array(f0),b0=0,O0=Z,M0,P0;for(P0=0;P0<v0;P0++)M0=T[P0]+H[P0]+b0,b0=M0>=O0?1:0,u0[P0]=M0-b0*O0;for(;P0<f0;)M0=T[P0]+b0,b0=M0===O0?1:0,u0[P0++]=M0-b0*O0;return b0>0&&u0.push(b0),u0}function A1(T,H){return T.length>=H.length?Q0(T,H):Q0(H,T)}function f1(T,H){var f0=T.length,v0=new Array(f0),u0=Z,b0,O0;for(O0=0;O0<f0;O0++)b0=T[O0]-u0+H,H=Math.floor(b0/u0),v0[O0]=b0-H*u0,H+=1;for(;H>0;)v0[O0++]=H%u0,H=Math.floor(H/u0);return v0}W.prototype.add=function(T){var H=i1(T);if(this.sign!==H.sign)return this.subtract(H.negate());var f0=this.value,v0=H.value;return H.isSmall?new W(f1(f0,Math.abs(v0)),this.sign):new W(A1(f0,v0),this.sign)},W.prototype.plus=W.prototype.add,j.prototype.add=function(T){var H=i1(T),f0=this.value;if(f0<0!==H.sign)return this.subtract(H.negate());var v0=H.value;if(H.isSmall){if(c1(f0+v0))return new j(f0+v0);v0=T0(Math.abs(v0))}return new W(f1(v0,Math.abs(f0)),f0<0)},j.prototype.plus=j.prototype.add;function h1(T,H){var f0=T.length,v0=H.length,u0=new Array(f0),b0=0,O0=Z,M0,P0;for(M0=0;M0<v0;M0++)P0=T[M0]-b0-H[M0],P0<0?(P0+=O0,b0=1):b0=0,u0[M0]=P0;for(M0=v0;M0<f0;M0++){if(P0=T[M0]-b0,P0<0)P0+=O0;else{u0[M0++]=P0;break}u0[M0]=P0}for(;M0<f0;M0++)u0[M0]=T[M0];return K0(u0),u0}function z0(T,H,f0){var v0;return g0(T,H)>=0?v0=h1(T,H):(v0=h1(H,T),f0=!f0),v0=o1(v0),typeof v0=="number"?(f0&&(v0=-v0),new j(v0)):new W(v0,f0)}function d0(T,H,f0){var v0=T.length,u0=new Array(v0),b0=-H,O0=Z,M0,P0;for(M0=0;M0<v0;M0++)P0=T[M0]+b0,b0=Math.floor(P0/O0),P0%=O0,u0[M0]=P0<0?P0+O0:P0;return u0=o1(u0),typeof u0=="number"?(f0&&(u0=-u0),new j(u0)):new W(u0,f0)}W.prototype.subtract=function(T){var H=i1(T);if(this.sign!==H.sign)return this.add(H.negate());var f0=this.value,v0=H.value;return H.isSmall?d0(f0,Math.abs(v0),this.sign):z0(f0,v0,this.sign)},W.prototype.minus=W.prototype.subtract,j.prototype.subtract=function(T){var H=i1(T),f0=this.value;if(f0<0!==H.sign)return this.add(H.negate());var v0=H.value;return H.isSmall?new j(f0-v0):d0(v0,Math.abs(f0),f0>=0)},j.prototype.minus=j.prototype.subtract,W.prototype.negate=function(){return new W(this.value,!this.sign)},j.prototype.negate=function(){var T=this.sign,H=new j(-this.value);return H.sign=!T,H},W.prototype.abs=function(){return new W(this.value,!1)},j.prototype.abs=function(){return new j(Math.abs(this.value))};function g(T,H){var f0=T.length,v0=H.length,u0=f0+v0,b0=k0(u0),O0=Z,M0,P0,I0,d1,j0;for(I0=0;I0<f0;++I0){d1=T[I0];for(var v1=0;v1<v0;++v1)j0=H[v1],M0=d1*j0+b0[I0+v1],P0=Math.floor(M0/O0),b0[I0+v1]=M0-P0*O0,b0[I0+v1+1]+=P0}return K0(b0),b0}function b(T,H){var f0=T.length,v0=new Array(f0),u0=Z,b0=0,O0,M0;for(M0=0;M0<f0;M0++)O0=T[M0]*H+b0,b0=Math.floor(O0/u0),v0[M0]=O0-b0*u0;for(;b0>0;)v0[M0++]=b0%u0,b0=Math.floor(b0/u0);return v0}function A(T,H){for(var f0=[];H-- >0;)f0.push(0);return f0.concat(T)}function w(T,H){var f0=Math.max(T.length,H.length);if(f0<=30)return g(T,H);f0=Math.ceil(f0/2);var v0=T.slice(f0),u0=T.slice(0,f0),b0=H.slice(f0),O0=H.slice(0,f0),M0=w(u0,O0),P0=w(v0,b0),I0=w(A1(u0,v0),A1(O0,b0)),d1=A1(A1(M0,A(h1(h1(I0,M0),P0),f0)),A(P0,2*f0));return K0(d1),d1}function S(T,H){return-.012*T-.012*H+15e-6*T*H>0}W.prototype.multiply=function(T){var H=i1(T),f0=this.value,v0=H.value,u0=this.sign!==H.sign,b0;if(H.isSmall){if(v0===0)return N0[0];if(v0===1)return this;if(v0===-1)return this.negate();if(b0=Math.abs(v0),b0<Z)return new W(b(f0,b0),u0);v0=T0(b0)}return S(f0.length,v0.length)?new W(w(f0,v0),u0):new W(g(f0,v0),u0)},W.prototype.times=W.prototype.multiply;function C(T,H,f0){return T<Z?new W(b(H,T),f0):new W(g(H,T0(T)),f0)}j.prototype._multiplyBySmall=function(T){return c1(T.value*this.value)?new j(T.value*this.value):C(Math.abs(T.value),T0(Math.abs(this.value)),this.sign!==T.sign)},W.prototype._multiplyBySmall=function(T){return T.value===0?N0[0]:T.value===1?this:T.value===-1?this.negate():C(Math.abs(T.value),this.value,this.sign!==T.sign)},j.prototype.multiply=function(T){return i1(T)._multiplyBySmall(this)},j.prototype.times=j.prototype.multiply;function V(T){var H=T.length,f0=k0(H+H),v0=Z,u0,b0,O0,M0,P0;for(O0=0;O0<H;O0++){M0=T[O0],b0=0-M0*M0;for(var I0=O0;I0<H;I0++)P0=T[I0],u0=2*(M0*P0)+f0[O0+I0]+b0,b0=Math.floor(u0/v0),f0[O0+I0]=u0-b0*v0;f0[O0+H]=b0}return K0(f0),f0}W.prototype.square=function(){return new W(V(this.value),!1)},j.prototype.square=function(){var T=this.value*this.value;return c1(T)?new j(T):new W(V(T0(Math.abs(this.value))),!1)};function K(T,H){var f0=T.length,v0=H.length,u0=Z,b0=k0(H.length),O0=H[v0-1],M0=Math.ceil(u0/(2*O0)),P0=b(T,M0),I0=b(H,M0),d1,j0,v1,U1,i2,Q1,e2;for(P0.length<=f0&&P0.push(0),I0.push(0),O0=I0[v0-1],j0=f0-v0;j0>=0;j0--){for(d1=u0-1,P0[j0+v0]!==O0&&(d1=Math.floor((P0[j0+v0]*u0+P0[j0+v0-1])/O0)),v1=0,U1=0,Q1=I0.length,i2=0;i2<Q1;i2++)v1+=d1*I0[i2],e2=Math.floor(v1/u0),U1+=P0[j0+i2]-(v1-e2*u0),v1=e2,U1<0?(P0[j0+i2]=U1+u0,U1=-1):(P0[j0+i2]=U1,U1=0);for(;U1!==0;){for(d1-=1,v1=0,i2=0;i2<Q1;i2++)v1+=P0[j0+i2]-u0+I0[i2],v1<0?(P0[j0+i2]=v1+u0,v1=0):(P0[j0+i2]=v1,v1=1);U1+=v1}b0[j0]=d1}return P0=h0(P0,M0)[0],[o1(b0),o1(P0)]}function S0(T,H){for(var f0=T.length,v0=H.length,u0=[],b0=[],O0=Z,M0,P0,I0,d1,j0;f0;){if(b0.unshift(T[--f0]),K0(b0),g0(b0,H)<0){u0.push(0);continue}P0=b0.length,I0=b0[P0-1]*O0+b0[P0-2],d1=H[v0-1]*O0+H[v0-2],P0>v0&&(I0=(I0+1)*O0),M0=Math.ceil(I0/d1);do{if(j0=b(H,M0),g0(j0,b0)<=0)break;M0--}while(M0);u0.push(M0),b0=h1(b0,j0)}return u0.reverse(),[o1(u0),o1(b0)]}function h0(T,H){var f0=T.length,v0=k0(f0),u0=Z,b0,O0,M0,P0;for(M0=0,b0=f0-1;b0>=0;--b0)P0=M0*u0+T[b0],O0=l0(P0/H),M0=P0-O0*H,v0[b0]=O0|0;return[v0,M0|0]}function y0(T,H){var f0,v0=i1(H),u0=T.value,b0=v0.value,O0;if(b0===0)throw new Error("Cannot divide by zero");if(T.isSmall)return v0.isSmall?[new j(l0(u0/b0)),new j(u0%b0)]:[N0[0],T];if(v0.isSmall){if(b0===1)return[T,N0[0]];if(b0==-1)return[T.negate(),N0[0]];var M0=Math.abs(b0);if(M0<Z){f0=h0(u0,M0),O0=o1(f0[0]);var P0=f0[1];return T.sign&&(P0=-P0),typeof O0=="number"?(T.sign!==v0.sign&&(O0=-O0),[new j(O0),new j(P0)]):[new W(O0,T.sign!==v0.sign),new j(P0)]}b0=T0(M0)}var I0=g0(u0,b0);if(I0===-1)return[N0[0],T];if(I0===0)return[N0[T.sign===v0.sign?1:-1],N0[0]];u0.length+b0.length<=200?f0=K(u0,b0):f0=S0(u0,b0),O0=f0[0];var d1=T.sign!==v0.sign,j0=f0[1],v1=T.sign;return typeof O0=="number"?(d1&&(O0=-O0),O0=new j(O0)):O0=new W(O0,d1),typeof j0=="number"?(v1&&(j0=-j0),j0=new j(j0)):j0=new W(j0,v1),[O0,j0]}W.prototype.divmod=function(T){var H=y0(this,T);return{quotient:H[0],remainder:H[1]}},j.prototype.divmod=W.prototype.divmod,W.prototype.divide=function(T){return y0(this,T)[0]},j.prototype.over=j.prototype.divide=W.prototype.over=W.prototype.divide,W.prototype.mod=function(T){return y0(this,T)[1]},j.prototype.remainder=j.prototype.mod=W.prototype.remainder=W.prototype.mod,W.prototype.pow=function(T){var H=i1(T),f0=this.value,v0=H.value,u0,b0,O0;if(v0===0)return N0[1];if(f0===0)return N0[0];if(f0===1)return N0[1];if(f0===-1)return H.isEven()?N0[1]:N0[-1];if(H.sign)return N0[0];if(!H.isSmall)throw new Error("The exponent "+H.toString()+" is too large.");if(this.isSmall&&c1(u0=Math.pow(f0,v0)))return new j(l0(u0));for(b0=this,O0=N0[1];v0&!0&&(O0=O0.times(b0),--v0),v0!==0;)v0/=2,b0=b0.square();return O0},j.prototype.pow=W.prototype.pow,W.prototype.modPow=function(T,H){if(T=i1(T),H=i1(H),H.isZero())throw new Error("Cannot take modPow with modulus 0");for(var f0=N0[1],v0=this.mod(H);T.isPositive();){if(v0.isZero())return N0[0];T.isOdd()&&(f0=f0.multiply(v0).mod(H)),T=T.divide(2),v0=v0.square().mod(H)}return f0},j.prototype.modPow=W.prototype.modPow;function g0(T,H){if(T.length!==H.length)return T.length>H.length?1:-1;for(var f0=T.length-1;f0>=0;f0--)if(T[f0]!==H[f0])return T[f0]>H[f0]?1:-1;return 0}W.prototype.compareAbs=function(T){var H=i1(T),f0=this.value,v0=H.value;return H.isSmall?1:g0(f0,v0)},j.prototype.compareAbs=function(T){var H=i1(T),f0=Math.abs(this.value),v0=H.value;return H.isSmall?(v0=Math.abs(v0),f0===v0?0:f0>v0?1:-1):-1},W.prototype.compare=function(T){if(T===1/0)return-1;if(T===-1/0)return 1;var H=i1(T),f0=this.value,v0=H.value;return this.sign!==H.sign?H.sign?1:-1:H.isSmall?this.sign?-1:1:g0(f0,v0)*(this.sign?-1:1)},W.prototype.compareTo=W.prototype.compare,j.prototype.compare=function(T){if(T===1/0)return-1;if(T===-1/0)return 1;var H=i1(T),f0=this.value,v0=H.value;return H.isSmall?f0==v0?0:f0>v0?1:-1:f0<0!==H.sign?f0<0?-1:1:f0<0?1:-1},j.prototype.compareTo=j.prototype.compare,W.prototype.equals=function(T){return this.compare(T)===0},j.prototype.eq=j.prototype.equals=W.prototype.eq=W.prototype.equals,W.prototype.notEquals=function(T){return this.compare(T)!==0},j.prototype.neq=j.prototype.notEquals=W.prototype.neq=W.prototype.notEquals,W.prototype.greater=function(T){return this.compare(T)>0},j.prototype.gt=j.prototype.greater=W.prototype.gt=W.prototype.greater,W.prototype.lesser=function(T){return this.compare(T)<0},j.prototype.lt=j.prototype.lesser=W.prototype.lt=W.prototype.lesser,W.prototype.greaterOrEquals=function(T){return this.compare(T)>=0},j.prototype.geq=j.prototype.greaterOrEquals=W.prototype.geq=W.prototype.greaterOrEquals,W.prototype.lesserOrEquals=function(T){return this.compare(T)<=0},j.prototype.leq=j.prototype.lesserOrEquals=W.prototype.leq=W.prototype.lesserOrEquals,W.prototype.isEven=function(){return(this.value[0]&1)===0},j.prototype.isEven=function(){return(this.value&1)===0},W.prototype.isOdd=function(){return(this.value[0]&1)===1},j.prototype.isOdd=function(){return(this.value&1)===1},W.prototype.isPositive=function(){return!this.sign},j.prototype.isPositive=function(){return this.value>0},W.prototype.isNegative=function(){return this.sign},j.prototype.isNegative=function(){return this.value<0},W.prototype.isUnit=function(){return!1},j.prototype.isUnit=function(){return Math.abs(this.value)===1},W.prototype.isZero=function(){return!1},j.prototype.isZero=function(){return this.value===0},W.prototype.isDivisibleBy=function(T){var H=i1(T),f0=H.value;return f0===0?!1:f0===1?!0:f0===2?this.isEven():this.mod(H).equals(N0[0])},j.prototype.isDivisibleBy=W.prototype.isDivisibleBy;function C1(T){var H=T.abs();if(H.isUnit())return!1;if(H.equals(2)||H.equals(3)||H.equals(5))return!0;if(H.isEven()||H.isDivisibleBy(3)||H.isDivisibleBy(5))return!1;if(H.lesser(49))return!0}function I1(T,H){for(var f0=T.prev(),v0=f0,u0=0,b0,O0,M0;v0.isEven();)v0=v0.divide(2),u0++;t:for(O0=0;O0<H.length;O0++)if(!T.lesser(H[O0])&&(M0=r0(H[O0]).modPow(v0,T),!(M0.equals(N0[1])||M0.equals(f0)))){for(b0=u0-1;b0!=0;b0--){if(M0=M0.square().mod(T),M0.isUnit())return!1;if(M0.equals(f0))continue t}return!1}return!0}W.prototype.isPrime=function(T){var H=C1(this);if(H!==p1)return H;var f0=this.abs(),v0=f0.bitLength();if(v0<=64)return I1(f0,[2,325,9375,28178,450775,9780504,1795265022]);for(var u0=Math.log(2)*v0,b0=Math.ceil(T===!0?2*Math.pow(u0,2):u0),O0=[],M0=0;M0<b0;M0++)O0.push(r0(M0+2));return I1(f0,O0)},j.prototype.isPrime=W.prototype.isPrime,W.prototype.isProbablePrime=function(T){var H=C1(this);if(H!==p1)return H;for(var f0=this.abs(),v0=T===p1?5:T,u0=[],b0=0;b0<v0;b0++)u0.push(r0.randBetween(2,f0.minus(2)));return I1(f0,u0)},j.prototype.isProbablePrime=W.prototype.isProbablePrime,W.prototype.modInv=function(T){for(var H=r0.zero,f0=r0.one,v0=i1(T),u0=this.abs(),b0,O0,M0;!u0.equals(r0.zero);)b0=v0.divide(u0),O0=H,M0=v0,H=f0,v0=u0,f0=O0.subtract(b0.multiply(f0)),u0=M0.subtract(b0.multiply(u0));if(!v0.equals(1))throw new Error(this.toString()+" and "+T.toString()+" are not co-prime");return H.compare(0)===-1&&(H=H.add(T)),this.isNegative()?H.negate():H},j.prototype.modInv=W.prototype.modInv,W.prototype.next=function(){var T=this.value;return this.sign?d0(T,1,this.sign):new W(f1(T,1),this.sign)},j.prototype.next=function(){var T=this.value;return T+1<E1?new j(T+1):new W(m0,!1)},W.prototype.prev=function(){var T=this.value;return this.sign?new W(f1(T,1),!0):d0(T,1,this.sign)},j.prototype.prev=function(){var T=this.value;return T-1>-E1?new j(T-1):new W(m0,!0)};for(var x1=[1];2*x1[x1.length-1]<=Z;)x1.push(2*x1[x1.length-1]);var s0=x1.length,n0=x1[s0-1];function a0(T){return(typeof T=="number"||typeof T=="string")&&+Math.abs(T)<=Z||T instanceof W&&T.value.length<=1}W.prototype.shiftLeft=function(T){if(!a0(T))throw new Error(String(T)+" is too large for shifting.");if(T=+T,T<0)return this.shiftRight(-T);var H=this;if(H.isZero())return H;for(;T>=s0;)H=H.multiply(n0),T-=s0-1;return H.multiply(x1[T])},j.prototype.shiftLeft=W.prototype.shiftLeft,W.prototype.shiftRight=function(T){var H;if(!a0(T))throw new Error(String(T)+" is too large for shifting.");if(T=+T,T<0)return this.shiftLeft(-T);for(var f0=this;T>=s0;){if(f0.isZero()||f0.isNegative()&&f0.isUnit())return f0;H=y0(f0,n0),f0=H[1].isNegative()?H[0].prev():H[0],T-=s0-1}return H=y0(f0,x1[T]),H[1].isNegative()?H[0].prev():H[0]},j.prototype.shiftRight=W.prototype.shiftRight;function Y(T,H,f0){H=i1(H);for(var v0=T.isNegative(),u0=H.isNegative(),b0=v0?T.not():T,O0=u0?H.not():H,M0=0,P0=0,I0=null,d1=null,j0=[];!b0.isZero()||!O0.isZero();)I0=y0(b0,n0),M0=I0[1].toJSNumber(),v0&&(M0=n0-1-M0),d1=y0(O0,n0),P0=d1[1].toJSNumber(),u0&&(P0=n0-1-P0),b0=I0[0],O0=d1[0],j0.push(f0(M0,P0));for(var v1=f0(v0?1:0,u0?1:0)!==0?r0(-1):r0(0),U1=j0.length-1;U1>=0;U1-=1)v1=v1.multiply(n0).add(r0(j0[U1]));return v1}W.prototype.not=function(){return this.negate().prev()},j.prototype.not=W.prototype.not,W.prototype.and=function(T){return Y(this,T,function(H,f0){return H&f0})},j.prototype.and=W.prototype.and,W.prototype.or=function(T){return Y(this,T,function(H,f0){return H|f0})},j.prototype.or=W.prototype.or,W.prototype.xor=function(T){return Y(this,T,function(H,f0){return H^f0})},j.prototype.xor=W.prototype.xor;var C0=1<<30,m1=(Z&-Z)*(Z&-Z)|C0;function B0(T){var H=T.value,f0=typeof H=="number"?H|C0:H[0]+H[1]*Z|m1;return f0&-f0}function e0(T,H){if(H.compareTo(T)<=0){var f0=e0(T,H.square(H)),v0=f0.p,u0=f0.e,b0=v0.multiply(H);return b0.compareTo(T)<=0?{p:b0,e:u0*2+1}:{p:v0,e:u0*2}}return{p:r0(1),e:0}}W.prototype.bitLength=function(){var T=this;return T.compareTo(r0(0))<0&&(T=T.negate().subtract(r0(1))),T.compareTo(r0(0))===0?r0(0):r0(e0(T,r0(2)).e).add(r0(1))},j.prototype.bitLength=W.prototype.bitLength;function i0(T,H){return T=i1(T),H=i1(H),T.greater(H)?T:H}function H0(T,H){return T=i1(T),H=i1(H),T.lesser(H)?T:H}function u1(T,H){if(T=i1(T).abs(),H=i1(H).abs(),T.equals(H))return T;if(T.isZero())return H;if(H.isZero())return T;for(var f0=N0[1],v0,u0;T.isEven()&&H.isEven();)v0=Math.min(B0(T),B0(H)),T=T.divide(v0),H=H.divide(v0),f0=f0.multiply(v0);for(;T.isEven();)T=T.divide(B0(T));do{for(;H.isEven();)H=H.divide(B0(H));T.greater(H)&&(u0=H,H=T,T=u0),H=H.subtract(T)}while(!H.isZero());return f0.isUnit()?T:T.multiply(f0)}function x(T,H){return T=i1(T).abs(),H=i1(H).abs(),T.divide(u1(T,H)).multiply(H)}function q(T,H){T=i1(T),H=i1(H);var f0=H0(T,H),v0=i0(T,H),u0=v0.subtract(f0).add(1);if(u0.isSmall)return f0.add(Math.floor(Math.random()*u0));for(var b0=u0.value.length-1,O0=[],M0=!0,P0=b0;P0>=0;P0--){var I0=M0?u0.value[P0]:Z,d1=l0(Math.random()*I0);O0.unshift(d1),d1<I0&&(M0=!1)}return O0=o1(O0),f0.add(typeof O0=="number"?new j(O0):new W(O0,!1))}var $=function(T,H){for(var f0=T.length,v0,u0=Math.abs(H),v0=0;v0<f0;v0++){var b0=T[v0].toLowerCase();if(b0!=="-"&&/[a-z0-9]/.test(b0)){if(/[0-9]/.test(b0)&&+b0>=u0){if(b0==="1"&&u0===1)continue;throw new Error(b0+" is not a valid digit in base "+H+".")}else if(b0.charCodeAt(0)-87>=u0)throw new Error(b0+" is not a valid digit in base "+H+".")}}if(2<=H&&H<=36&&f0<=G0/Math.log(H)){var O0=parseInt(T,H);if(isNaN(O0))throw new Error(b0+" is not a valid digit in base "+H+".");return new j(parseInt(T,H))}H=i1(H);var M0=[],P0=T[0]==="-";for(v0=P0?1:0;v0<T.length;v0++){var b0=T[v0].toLowerCase(),I0=b0.charCodeAt(0);if(48<=I0&&I0<=57)M0.push(i1(b0));else if(97<=I0&&I0<=122)M0.push(i1(b0.charCodeAt(0)-87));else if(b0==="<"){var d1=v0;do v0++;while(T[v0]!==">");M0.push(i1(T.slice(d1+1,v0)))}else throw new Error(b0+" is not a valid character")}return o0(M0,H,P0)};function o0(T,H,f0){var v0=N0[0],u0=N0[1],b0;for(b0=T.length-1;b0>=0;b0--)v0=v0.add(T[b0].times(u0)),u0=u0.times(H);return f0?v0.negate():v0}function F0(T){return T<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(T):"<"+T+">"}function D0(T,H){if(H=r0(H),H.isZero()){if(T.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(H.equals(-1)){if(T.isZero())return{value:[0],isNegative:!1};if(T.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-T)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var f0=Array.apply(null,Array(+T-1)).map(Array.prototype.valueOf,[0,1]);return f0.unshift([1]),{value:[].concat.apply([],f0),isNegative:!1}}var v0=!1;if(T.isNegative()&&H.isPositive()&&(v0=!0,T=T.abs()),H.equals(1))return T.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+T)).map(Number.prototype.valueOf,1),isNegative:v0};for(var u0=[],b0=T,O0;b0.isNegative()||b0.compareAbs(H)>=0;){O0=b0.divmod(H),b0=O0.quotient;var M0=O0.remainder;M0.isNegative()&&(M0=H.minus(M0).abs(),b0=b0.next()),u0.push(M0.toJSNumber())}return u0.push(b0.toJSNumber()),{value:u0.reverse(),isNegative:v0}}function c0(T,H){var f0=D0(T,H);return(f0.isNegative?"-":"")+f0.value.map(F0).join("")}W.prototype.toArray=function(T){return D0(this,T)},j.prototype.toArray=function(T){return D0(this,T)},W.prototype.toString=function(T){if(T===p1&&(T=10),T!==10)return c0(this,T);for(var H=this.value,f0=H.length,v0=String(H[--f0]),u0="0000000",b0;--f0>=0;)b0=String(H[f0]),v0+=u0.slice(b0.length)+b0;var O0=this.sign?"-":"";return O0+v0},j.prototype.toString=function(T){return T===p1&&(T=10),T!=10?c0(this,T):String(this.value)},W.prototype.toJSON=j.prototype.toJSON=function(){return this.toString()},W.prototype.valueOf=function(){return parseInt(this.toString(),10)},W.prototype.toJSNumber=W.prototype.valueOf,j.prototype.valueOf=function(){return this.value},j.prototype.toJSNumber=j.prototype.valueOf;function l1(T){if(c1(+T)){var H=+T;if(H===l0(H))return new j(H);throw new Error("Invalid integer: "+T)}var f0=T[0]==="-";f0&&(T=T.slice(1));var v0=T.split(/e/i);if(v0.length>2)throw new Error("Invalid integer: "+v0.join("e"));if(v0.length===2){var u0=v0[1];if(u0[0]==="+"&&(u0=u0.slice(1)),u0=+u0,u0!==l0(u0)||!c1(u0))throw new Error("Invalid integer: "+u0+" is not a valid exponent.");var b0=v0[0],O0=b0.indexOf(".");if(O0>=0&&(u0-=b0.length-O0-1,b0=b0.slice(0,O0)+b0.slice(O0+1)),u0<0)throw new Error("Cannot include negative exponent part for integers");b0+=new Array(u0+1).join("0"),T=b0}var M0=/^([0-9][0-9]*)$/.test(T);if(!M0)throw new Error("Invalid integer: "+T);for(var P0=[],I0=T.length,d1=R0,j0=I0-d1;I0>0;)P0.push(+T.slice(j0,I0)),j0-=d1,j0<0&&(j0=0),I0-=d1;return K0(P0),new W(P0,f0)}function Z0(T){if(c1(T)){if(T!==l0(T))throw new Error(T+" is not an integer.");return new j(T)}return l1(T.toString())}function i1(T){return typeof T=="number"?Z0(T):typeof T=="string"?l1(T):T}for(var P1=0;P1<1e3;P1++)N0[P1]=new j(P1),P1>0&&(N0[-P1]=new j(-P1));return N0.one=N0[1],N0.zero=N0[0],N0.minusOne=N0[-1],N0.max=i0,N0.min=H0,N0.gcd=u1,N0.lcm=x,N0.isInstance=function(T){return T instanceof W||T instanceof j},N0.randBetween=q,N0.fromArray=function(T,H,f0){return o0(T.map(i1),i1(H||10),f0)},N0}();return B.hasOwnProperty("exports")&&(B.exports=r0),r0}(),bigDec:function(r0){var p1,Z,R0,E1,m0=9e15,G0=1e9,N0="0123456789abcdef",W="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",j="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",c1={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-m0,maxE:m0,crypto:!1},T0=!0,o1="[DecimalError] ",K0=o1+"Invalid argument: ",k0=o1+"Precision limit exceeded",l0=o1+"crypto unavailable",Q0=Math.floor,A1=Math.pow,f1=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,h1=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,z0=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,d0=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,g=1e7,b=7,A=W.length-1,w=j.length-1,S={name:"[object Decimal]"};function C(r){var v,p,f,E=r.length-1,m="",M=r[0];if(E>0){for(m+=M,v=1;v<E;v++)f=r[v]+"",(p=b-f.length)&&(m+=n0(p)),m+=f;M=r[v],(p=b-(f=M+"").length)&&(m+=n0(p))}else if(M===0)return"0";for(;M%10==0;)M/=10;return m+M}function V(r,v,p){if(r!==~~r||r<v||r>p)throw Error(K0+r)}function K(r,v,p,f){var E,m,M,R;for(m=r[0];m>=10;m/=10)--v;return--v<0?(v+=b,E=0):(E=Math.ceil((v+1)/b),v%=b),m=A1(10,b-v),R=r[E]%m|0,f==null?v<3?(v==0?R=R/100|0:v==1&&(R=R/10|0),M=p<4&&R==99999||p>3&&R==49999||R==5e4||R==0):M=(p<4&&R+1==m||p>3&&R+1==m/2)&&(r[E+1]/m/100|0)==A1(10,v-2)-1||(R==m/2||R==0)&&(r[E+1]/m/100|0)==0:v<4?(v==0?R=R/1e3|0:v==1?R=R/100|0:v==2&&(R=R/10|0),M=(f||p<4)&&R==9999||!f&&p>3&&R==4999):M=((f||p<4)&&R+1==m||!f&&p>3&&R+1==m/2)&&(r[E+1]/m/1e3|0)==A1(10,v-3)-1,M}function S0(r,v,p){for(var f,E,m=[0],M=0,R=r.length;M<R;){for(E=m.length;E--;)m[E]*=v;for(m[0]+=N0.indexOf(r.charAt(M++)),f=0;f<m.length;f++)m[f]>p-1&&(m[f+1]===void 0&&(m[f+1]=0),m[f+1]+=m[f]/p|0,m[f]%=p)}return m.reverse()}S.absoluteValue=S.abs=function(){var r=new this.constructor(this);return r.s<0&&(r.s=1),y0(r)},S.ceil=function(){return y0(new this.constructor(this),this.e+1,2)},S.comparedTo=S.cmp=function(r){var v,p,f,E,m=this,M=m.d,R=(r=new m.constructor(r)).d,D=m.s,U=r.s;if(!M||!R)return D&&U?D!==U?D:M===R?0:!M^D<0?1:-1:NaN;if(!M[0]||!R[0])return M[0]?D:R[0]?-U:0;if(D!==U)return D;if(m.e!==r.e)return m.e>r.e^D<0?1:-1;for(v=0,p=(f=M.length)<(E=R.length)?f:E;v<p;++v)if(M[v]!==R[v])return M[v]>R[v]^D<0?1:-1;return f===E?0:f>E^D<0?1:-1},S.cosine=S.cos=function(){var r,v,p=this,f=p.constructor;return p.d?p.d[0]?(r=f.precision,v=f.rounding,f.precision=r+Math.max(p.e,p.sd())+b,f.rounding=1,p=function(E,m){var M,R,D=m.d.length;D<32?(M=Math.ceil(D/3),R=(1/x(4,M)).toString()):(M=16,R="2.3283064365386962890625e-10"),E.precision+=M,m=u1(E,1,m.times(R),new E(1));for(var U=M;U--;){var F=m.times(m);m=F.times(F).minus(F).times(8).plus(1)}return E.precision-=M,m}(f,q(f,p)),f.precision=r,f.rounding=v,y0(E1==2||E1==3?p.neg():p,r,v,!0)):new f(1):new f(NaN)},S.cubeRoot=S.cbrt=function(){var r,v,p,f,E,m,M,R,D,U,F=this,t=F.constructor;if(!F.isFinite()||F.isZero())return new t(F);for(T0=!1,(m=F.s*A1(F.s*F,.3333333333333333))&&Math.abs(m)!=1/0?f=new t(m.toString()):(p=C(F.d),(m=((r=F.e)-p.length+1)%3)&&(p+=m==1||m==-2?"0":"00"),m=A1(p,.3333333333333333),r=Q0((r+1)/3)-(r%3==(r<0?-1:2)),(f=new t(p=m==1/0?"5e"+r:(p=m.toExponential()).slice(0,p.indexOf("e")+1)+r)).s=F.s),M=(r=t.precision)+3;;)if(U=(D=(R=f).times(R).times(R)).plus(F),f=h0(U.plus(F).times(R),U.plus(D),M+2,1),C(R.d).slice(0,M)===(p=C(f.d)).slice(0,M)){if((p=p.slice(M-3,M+1))!="9999"&&(E||p!="4999")){+p&&(+p.slice(1)||p.charAt(0)!="5")||(y0(f,r+1,1),v=!f.times(f).times(f).eq(F));break}if(!E&&(y0(R,r+1,0),R.times(R).times(R).eq(F))){f=R;break}M+=4,E=1}return T0=!0,y0(f,r,t.rounding,v)},S.decimalPlaces=S.dp=function(){var r,v=this.d,p=NaN;if(v){if(p=((r=v.length-1)-Q0(this.e/b))*b,r=v[r])for(;r%10==0;r/=10)p--;p<0&&(p=0)}return p},S.dividedBy=S.div=function(r){return h0(this,new this.constructor(r))},S.dividedToIntegerBy=S.divToInt=function(r){var v=this.constructor;return y0(h0(this,new v(r),0,1,1),v.precision,v.rounding)},S.equals=S.eq=function(r){return this.cmp(r)===0},S.floor=function(){return y0(new this.constructor(this),this.e+1,3)},S.greaterThan=S.gt=function(r){return this.cmp(r)>0},S.greaterThanOrEqualTo=S.gte=function(r){var v=this.cmp(r);return v==1||v===0},S.hyperbolicCosine=S.cosh=function(){var r,v,p,f,E,m=this,M=m.constructor,R=new M(1);if(!m.isFinite())return new M(m.s?1/0:NaN);if(m.isZero())return R;p=M.precision,f=M.rounding,M.precision=p+Math.max(m.e,m.sd())+4,M.rounding=1,(E=m.d.length)<32?v=(1/x(4,r=Math.ceil(E/3))).toString():(r=16,v="2.3283064365386962890625e-10"),m=u1(M,1,m.times(v),new M(1),!0);for(var D,U=r,F=new M(8);U--;)D=m.times(m),m=R.minus(D.times(F.minus(D.times(F))));return y0(m,M.precision=p,M.rounding=f,!0)},S.hyperbolicSine=S.sinh=function(){var r,v,p,f,E=this,m=E.constructor;if(!E.isFinite()||E.isZero())return new m(E);if(v=m.precision,p=m.rounding,m.precision=v+Math.max(E.e,E.sd())+4,m.rounding=1,(f=E.d.length)<3)E=u1(m,2,E,E,!0);else{r=(r=1.4*Math.sqrt(f))>16?16:0|r,E=u1(m,2,E=E.times(1/x(5,r)),E,!0);for(var M,R=new m(5),D=new m(16),U=new m(20);r--;)M=E.times(E),E=E.times(R.plus(M.times(D.times(M).plus(U))))}return m.precision=v,m.rounding=p,y0(E,v,p,!0)},S.hyperbolicTangent=S.tanh=function(){var r,v,p=this,f=p.constructor;return p.isFinite()?p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+7,f.rounding=1,h0(p.sinh(),p.cosh(),f.precision=r,f.rounding=v)):new f(p.s)},S.inverseCosine=S.acos=function(){var r,v=this,p=v.constructor,f=v.abs().cmp(1),E=p.precision,m=p.rounding;return f!==-1?f===0?v.isNeg()?x1(p,E,m):new p(0):new p(NaN):v.isZero()?x1(p,E+4,m).times(.5):(p.precision=E+6,p.rounding=1,v=v.asin(),r=x1(p,E+4,m).times(.5),p.precision=E,p.rounding=m,r.minus(v))},S.inverseHyperbolicCosine=S.acosh=function(){var r,v,p=this,f=p.constructor;return p.lte(1)?new f(p.eq(1)?0:NaN):p.isFinite()?(r=f.precision,v=f.rounding,f.precision=r+Math.max(Math.abs(p.e),p.sd())+4,f.rounding=1,T0=!1,p=p.times(p).minus(1).sqrt().plus(p),T0=!0,f.precision=r,f.rounding=v,p.ln()):new f(p)},S.inverseHyperbolicSine=S.asinh=function(){var r,v,p=this,f=p.constructor;return!p.isFinite()||p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+2*Math.max(Math.abs(p.e),p.sd())+6,f.rounding=1,T0=!1,p=p.times(p).plus(1).sqrt().plus(p),T0=!0,f.precision=r,f.rounding=v,p.ln())},S.inverseHyperbolicTangent=S.atanh=function(){var r,v,p,f,E=this,m=E.constructor;return E.isFinite()?E.e>=0?new m(E.abs().eq(1)?E.s/0:E.isZero()?E:NaN):(r=m.precision,v=m.rounding,f=E.sd(),Math.max(f,r)<2*-E.e-1?y0(new m(E),r,v,!0):(m.precision=p=f-E.e,E=h0(E.plus(1),new m(1).minus(E),p+r,1),m.precision=r+4,m.rounding=1,E=E.ln(),m.precision=r,m.rounding=v,E.times(.5))):new m(NaN)},S.inverseSine=S.asin=function(){var r,v,p,f,E=this,m=E.constructor;return E.isZero()?new m(E):(v=E.abs().cmp(1),p=m.precision,f=m.rounding,v!==-1?v===0?((r=x1(m,p+4,f).times(.5)).s=E.s,r):new m(NaN):(m.precision=p+6,m.rounding=1,E=E.div(new m(1).minus(E.times(E)).sqrt().plus(1)).atan(),m.precision=p,m.rounding=f,E.times(2)))},S.inverseTangent=S.atan=function(){var r,v,p,f,E,m,M,R,D,U=this,F=U.constructor,t=F.precision,s=F.rounding;if(U.isFinite()){if(U.isZero())return new F(U);if(U.abs().eq(1)&&t+4<=w)return(M=x1(F,t+4,s).times(.25)).s=U.s,M}else{if(!U.s)return new F(NaN);if(t+4<=w)return(M=x1(F,t+4,s).times(.5)).s=U.s,M}for(F.precision=R=t+10,F.rounding=1,r=p=Math.min(28,R/b+2|0);r;--r)U=U.div(U.times(U).plus(1).sqrt().plus(1));for(T0=!1,v=Math.ceil(R/b),f=1,D=U.times(U),M=new F(U),E=U;r!==-1;)if(E=E.times(D),m=M.minus(E.div(f+=2)),E=E.times(D),(M=m.plus(E.div(f+=2))).d[v]!==void 0)for(r=v;M.d[r]===m.d[r]&&r--;);return p&&(M=M.times(2<<p-1)),T0=!0,y0(M,F.precision=t,F.rounding=s,!0)},S.isFinite=function(){return!!this.d},S.isInteger=S.isInt=function(){return!!this.d&&Q0(this.e/b)>this.d.length-2},S.isNaN=function(){return!this.s},S.isNegative=S.isNeg=function(){return this.s<0},S.isPositive=S.isPos=function(){return this.s>0},S.isZero=function(){return!!this.d&&this.d[0]===0},S.lessThan=S.lt=function(r){return this.cmp(r)<0},S.lessThanOrEqualTo=S.lte=function(r){return this.cmp(r)<1},S.logarithm=S.log=function(r){var v,p,f,E,m,M,R,D,U=this.constructor,F=U.precision,t=U.rounding;if(r==null)r=new U(10),v=!0;else{if(p=(r=new U(r)).d,r.s<0||!p||!p[0]||r.eq(1))return new U(NaN);v=r.eq(10)}if(p=this.d,this.s<0||!p||!p[0]||this.eq(1))return new U(p&&!p[0]?-1/0:this.s!=1?NaN:p?0:1/0);if(v)if(p.length>1)m=!0;else{for(E=p[0];E%10==0;)E/=10;m=E!==1}if(T0=!1,M=B0(this,R=F+5),f=v?I1(U,R+10):B0(r,R),K((D=h0(M,f,R,1)).d,E=F,t))do if(M=B0(this,R+=10),f=v?I1(U,R+10):B0(r,R),D=h0(M,f,R,1),!m){+C(D.d).slice(E+1,E+15)+1==1e14&&(D=y0(D,F+1,0));break}while(K(D.d,E+=10,t));return T0=!0,y0(D,F,t)},S.minus=S.sub=function(r){var v,p,f,E,m,M,R,D,U,F,t,s,h=this,y=h.constructor;if(r=new y(r),!h.d||!r.d)return h.s&&r.s?h.d?r.s=-r.s:r=new y(r.d||h.s!==r.s?h:NaN):r=new y(NaN),r;if(h.s!=r.s)return r.s=-r.s,h.plus(r);if(U=h.d,s=r.d,R=y.precision,D=y.rounding,!U[0]||!s[0]){if(s[0])r.s=-r.s;else{if(!U[0])return new y(D===3?-0:0);r=new y(h)}return T0?y0(r,R,D):r}if(p=Q0(r.e/b),F=Q0(h.e/b),U=U.slice(),m=F-p){for((t=m<0)?(v=U,m=-m,M=s.length):(v=s,p=F,M=U.length),m>(f=Math.max(Math.ceil(R/b),M)+2)&&(m=f,v.length=1),v.reverse(),f=m;f--;)v.push(0);v.reverse()}else{for((t=(f=U.length)<(M=s.length))&&(M=f),f=0;f<M;f++)if(U[f]!=s[f]){t=U[f]<s[f];break}m=0}for(t&&(v=U,U=s,s=v,r.s=-r.s),M=U.length,f=s.length-M;f>0;--f)U[M++]=0;for(f=s.length;f>m;){if(U[--f]<s[f]){for(E=f;E&&U[--E]===0;)U[E]=g-1;--U[E],U[f]+=g}U[f]-=s[f]}for(;U[--M]===0;)U.pop();for(;U[0]===0;U.shift())--p;return U[0]?(r.d=U,r.e=C1(U,p),T0?y0(r,R,D):r):new y(D===3?-0:0)},S.modulo=S.mod=function(r){var v,p=this,f=p.constructor;return r=new f(r),!p.d||!r.s||r.d&&!r.d[0]?new f(NaN):!r.d||p.d&&!p.d[0]?y0(new f(p),f.precision,f.rounding):(T0=!1,f.modulo==9?(v=h0(p,r.abs(),0,3,1)).s*=r.s:v=h0(p,r,0,f.modulo,1),v=v.times(r),T0=!0,p.minus(v))},S.naturalExponential=S.exp=function(){return m1(this)},S.naturalLogarithm=S.ln=function(){return B0(this)},S.negated=S.neg=function(){var r=new this.constructor(this);return r.s=-r.s,y0(r)},S.plus=S.add=function(r){var v,p,f,E,m,M,R,D,U,F,t=this,s=t.constructor;if(r=new s(r),!t.d||!r.d)return t.s&&r.s?t.d||(r=new s(r.d||t.s===r.s?t:NaN)):r=new s(NaN),r;if(t.s!=r.s)return r.s=-r.s,t.minus(r);if(U=t.d,F=r.d,R=s.precision,D=s.rounding,!U[0]||!F[0])return F[0]||(r=new s(t)),T0?y0(r,R,D):r;if(m=Q0(t.e/b),f=Q0(r.e/b),U=U.slice(),E=m-f){for(E<0?(p=U,E=-E,M=F.length):(p=F,f=m,M=U.length),E>(M=(m=Math.ceil(R/b))>M?m+1:M+1)&&(E=M,p.length=1),p.reverse();E--;)p.push(0);p.reverse()}for((M=U.length)-(E=F.length)<0&&(E=M,p=F,F=U,U=p),v=0;E;)v=(U[--E]=U[E]+F[E]+v)/g|0,U[E]%=g;for(v&&(U.unshift(v),++f),M=U.length;U[--M]==0;)U.pop();return r.d=U,r.e=C1(U,f),T0?y0(r,R,D):r},S.precision=S.sd=function(r){var v,p=this;if(r!==void 0&&r!==!!r&&r!==1&&r!==0)throw Error(K0+r);return p.d?(v=s0(p.d),r&&p.e+1>v&&(v=p.e+1)):v=NaN,v},S.round=function(){var r=this,v=r.constructor;return y0(new v(r),r.e+1,v.rounding)},S.sine=S.sin=function(){var r,v,p=this,f=p.constructor;return p.isFinite()?p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+Math.max(p.e,p.sd())+b,f.rounding=1,p=function(E,m){var M,R=m.d.length;if(R<3)return u1(E,2,m,m);M=(M=1.4*Math.sqrt(R))>16?16:0|M,m=m.times(1/x(5,M)),m=u1(E,2,m,m);for(var D,U=new E(5),F=new E(16),t=new E(20);M--;)D=m.times(m),m=m.times(U.plus(D.times(F.times(D).minus(t))));return m}(f,q(f,p)),f.precision=r,f.rounding=v,y0(E1>2?p.neg():p,r,v,!0)):new f(NaN)},S.squareRoot=S.sqrt=function(){var r,v,p,f,E,m,M=this,R=M.d,D=M.e,U=M.s,F=M.constructor;if(U!==1||!R||!R[0])return new F(!U||U<0&&(!R||R[0])?NaN:R?M:1/0);for(T0=!1,(U=Math.sqrt(+M))==0||U==1/0?(((v=C(R)).length+D)%2==0&&(v+="0"),U=Math.sqrt(v),D=Q0((D+1)/2)-(D<0||D%2),f=new F(v=U==1/0?"5e"+D:(v=U.toExponential()).slice(0,v.indexOf("e")+1)+D)):f=new F(U.toString()),p=(D=F.precision)+3;;)if(f=(m=f).plus(h0(M,m,p+2,1)).times(.5),C(m.d).slice(0,p)===(v=C(f.d)).slice(0,p)){if((v=v.slice(p-3,p+1))!="9999"&&(E||v!="4999")){+v&&(+v.slice(1)||v.charAt(0)!="5")||(y0(f,D+1,1),r=!f.times(f).eq(M));break}if(!E&&(y0(m,D+1,0),m.times(m).eq(M))){f=m;break}p+=4,E=1}return T0=!0,y0(f,D,F.rounding,r)},S.tangent=S.tan=function(){var r,v,p=this,f=p.constructor;return p.isFinite()?p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+10,f.rounding=1,(p=p.sin()).s=1,p=h0(p,new f(1).minus(p.times(p)).sqrt(),r+10,0),f.precision=r,f.rounding=v,y0(E1==2||E1==4?p.neg():p,r,v,!0)):new f(NaN)},S.times=S.mul=function(r){var v,p,f,E,m,M,R,D,U,F=this,t=F.constructor,s=F.d,h=(r=new t(r)).d;if(r.s*=F.s,!(s&&s[0]&&h&&h[0]))return new t(!r.s||s&&!s[0]&&!h||h&&!h[0]&&!s?NaN:s&&h?0*r.s:r.s/0);for(p=Q0(F.e/b)+Q0(r.e/b),(D=s.length)<(U=h.length)&&(m=s,s=h,h=m,M=D,D=U,U=M),m=[],f=M=D+U;f--;)m.push(0);for(f=U;--f>=0;){for(v=0,E=D+f;E>f;)R=m[E]+h[f]*s[E-f-1]+v,m[E--]=R%g|0,v=R/g|0;m[E]=(m[E]+v)%g|0}for(;!m[--M];)m.pop();return v?++p:m.shift(),r.d=m,r.e=C1(m,p),T0?y0(r,t.precision,t.rounding):r},S.toBinary=function(r,v){return $(this,2,r,v)},S.toDecimalPlaces=S.toDP=function(r,v){var p=this,f=p.constructor;return p=new f(p),r===void 0?p:(V(r,0,G0),v===void 0?v=f.rounding:V(v,0,8),y0(p,r+p.e+1,v))},S.toExponential=function(r,v){var p,f=this,E=f.constructor;return r===void 0?p=g0(f,!0):(V(r,0,G0),v===void 0?v=E.rounding:V(v,0,8),p=g0(f=y0(new E(f),r+1,v),!0,r+1)),f.isNeg()&&!f.isZero()?"-"+p:p},S.toFixed=function(r,v){var p,f,E=this,m=E.constructor;return r===void 0?p=g0(E):(V(r,0,G0),v===void 0?v=m.rounding:V(v,0,8),p=g0(f=y0(new m(E),r+E.e+1,v),!1,r+f.e+1)),E.isNeg()&&!E.isZero()?"-"+p:p},S.toFraction=function(r){var v,p,f,E,m,M,R,D,U,F,t,s,h=this,y=h.d,L=h.constructor;if(!y)return new L(h);if(U=p=new L(1),f=D=new L(0),M=(m=(v=new L(f)).e=s0(y)-h.e-1)%b,v.d[0]=A1(10,M<0?b+M:M),r==null)r=m>0?v:U;else{if(!(R=new L(r)).isInt()||R.lt(U))throw Error(K0+R);r=R.gt(v)?m>0?v:U:R}for(T0=!1,R=new L(C(y)),F=L.precision,L.precision=m=y.length*b*2;t=h0(R,v,0,1,1),(E=p.plus(t.times(f))).cmp(r)!=1;)p=f,f=E,E=U,U=D.plus(t.times(E)),D=E,E=v,v=R.minus(t.times(E)),R=E;return E=h0(r.minus(p),f,0,1,1),D=D.plus(E.times(U)),p=p.plus(E.times(f)),D.s=U.s=h.s,s=h0(U,f,m,1).minus(h).abs().cmp(h0(D,p,m,1).minus(h).abs())<1?[U,f]:[D,p],L.precision=F,T0=!0,s},S.toHexadecimal=S.toHex=function(r,v){return $(this,16,r,v)},S.toNearest=function(r,v){var p=this,f=p.constructor;if(p=new f(p),r==null){if(!p.d)return p;r=new f(1),v=f.rounding}else{if(r=new f(r),v===void 0?v=f.rounding:V(v,0,8),!p.d)return r.s?p:r;if(!r.d)return r.s&&(r.s=p.s),r}return r.d[0]?(T0=!1,p=h0(p,r,0,v,1).times(r),T0=!0,y0(p)):(r.s=p.s,p=r),p},S.toNumber=function(){return+this},S.toOctal=function(r,v){return $(this,8,r,v)},S.toPower=S.pow=function(r){var v,p,f,E,m,M,R=this,D=R.constructor,U=+(r=new D(r));if(!(R.d&&r.d&&R.d[0]&&r.d[0]))return new D(A1(+R,U));if((R=new D(R)).eq(1))return R;if(f=D.precision,m=D.rounding,r.eq(1))return y0(R,f,m);if((v=Q0(r.e/b))>=r.d.length-1&&(p=U<0?-U:U)<=9007199254740991)return E=a0(D,R,p,f),r.s<0?new D(1).div(E):y0(E,f,m);if((M=R.s)<0){if(v<r.d.length-1)return new D(NaN);if(!(1&r.d[v])&&(M=1),R.e==0&&R.d[0]==1&&R.d.length==1)return R.s=M,R}return(v=(p=A1(+R,U))!=0&&isFinite(p)?new D(p+"").e:Q0(U*(Math.log("0."+C(R.d))/Math.LN10+R.e+1)))>D.maxE+1||v<D.minE-1?new D(v>0?M/0:0):(T0=!1,D.rounding=R.s=1,p=Math.min(12,(v+"").length),(E=m1(r.times(B0(R,f+p)),f)).d&&K((E=y0(E,f+5,1)).d,f,m)&&(v=f+10,+C((E=y0(m1(r.times(B0(R,v+p)),v),v+5,1)).d).slice(f+1,f+15)+1==1e14&&(E=y0(E,f+1,0))),E.s=M,T0=!0,D.rounding=m,y0(E,f,m))},S.toPrecision=function(r,v){var p,f=this,E=f.constructor;return r===void 0?p=g0(f,f.e<=E.toExpNeg||f.e>=E.toExpPos):(V(r,1,G0),v===void 0?v=E.rounding:V(v,0,8),p=g0(f=y0(new E(f),r,v),r<=f.e||f.e<=E.toExpNeg,r)),f.isNeg()&&!f.isZero()?"-"+p:p},S.toSignificantDigits=S.toSD=function(r,v){var p=this.constructor;return r===void 0?(r=p.precision,v=p.rounding):(V(r,1,G0),v===void 0?v=p.rounding:V(v,0,8)),y0(new p(this),r,v)},S.toString=function(){var r=this,v=r.constructor,p=g0(r,r.e<=v.toExpNeg||r.e>=v.toExpPos);return r.isNeg()&&!r.isZero()?"-"+p:p},S.truncated=S.trunc=function(){return y0(new this.constructor(this),this.e+1,1)},S.valueOf=S.toJSON=function(){var r=this,v=r.constructor,p=g0(r,r.e<=v.toExpNeg||r.e>=v.toExpPos);return r.isNeg()?"-"+p:p};var h0=function(){function r(f,E,m){var M,R=0,D=f.length;for(f=f.slice();D--;)M=f[D]*E+R,f[D]=M%m|0,R=M/m|0;return R&&f.unshift(R),f}function v(f,E,m,M){var R,D;if(m!=M)D=m>M?1:-1;else for(R=D=0;R<m;R++)if(f[R]!=E[R]){D=f[R]>E[R]?1:-1;break}return D}function p(f,E,m,M){for(var R=0;m--;)f[m]-=R,R=f[m]<E[m]?1:0,f[m]=R*M+f[m]-E[m];for(;!f[0]&&f.length>1;)f.shift()}return function(f,E,m,M,R,D){var U,F,t,s,h,y,L,X,A0,Q,Y0,E0,U0,R1,t1,S1,x0,P,V1,X1,N1=f.constructor,y1=f.s==E.s?1:-1,L1=f.d,O1=E.d;if(!(L1&&L1[0]&&O1&&O1[0]))return new N1(f.s&&E.s&&(L1?!O1||L1[0]!=O1[0]:O1)?L1&&L1[0]==0||!O1?0*y1:y1/0:NaN);for(D?(h=1,F=f.e-E.e):(D=g,h=b,F=Q0(f.e/h)-Q0(E.e/h)),V1=O1.length,x0=L1.length,Q=(A0=new N1(y1)).d=[],t=0;O1[t]==(L1[t]||0);t++);if(O1[t]>(L1[t]||0)&&F--,m==null?(R1=m=N1.precision,M=N1.rounding):R1=R?m+(f.e-E.e)+1:m,R1<0)Q.push(1),y=!0;else{if(R1=R1/h+2|0,t=0,V1==1){for(s=0,O1=O1[0],R1++;(t<x0||s)&&R1--;t++)t1=s*D+(L1[t]||0),Q[t]=t1/O1|0,s=t1%O1|0;y=s||t<x0}else{for((s=D/(O1[0]+1)|0)>1&&(O1=r(O1,s,D),L1=r(L1,s,D),V1=O1.length,x0=L1.length),S1=V1,E0=(Y0=L1.slice(0,V1)).length;E0<V1;)Y0[E0++]=0;(X1=O1.slice()).unshift(0),P=O1[0],O1[1]>=D/2&&++P;do s=0,(U=v(O1,Y0,V1,E0))<0?(U0=Y0[0],V1!=E0&&(U0=U0*D+(Y0[1]||0)),(s=U0/P|0)>1?(s>=D&&(s=D-1),(U=v(L=r(O1,s,D),Y0,X=L.length,E0=Y0.length))==1&&(s--,p(L,V1<X?X1:O1,X,D))):(s==0&&(U=s=1),L=O1.slice()),(X=L.length)<E0&&L.unshift(0),p(Y0,L,E0,D),U==-1&&(U=v(O1,Y0,V1,E0=Y0.length))<1&&(s++,p(Y0,V1<E0?X1:O1,E0,D)),E0=Y0.length):U===0&&(s++,Y0=[0]),Q[t++]=s,U&&Y0[0]?Y0[E0++]=L1[S1]||0:(Y0=[L1[S1]],E0=1);while((S1++<x0||Y0[0]!==void 0)&&R1--);y=Y0[0]!==void 0}Q[0]||Q.shift()}if(h==1)A0.e=F,Z=y;else{for(t=1,s=Q[0];s>=10;s/=10)t++;A0.e=t+F*h-1,y0(A0,R?m+A0.e+1:m,M,y)}return A0}}();function y0(r,v,p,f){var E,m,M,R,D,U,F,t,s,h=r.constructor;t:if(v!=null){if(!(t=r.d))return r;for(E=1,R=t[0];R>=10;R/=10)E++;if((m=v-E)<0)m+=b,M=v,D=(F=t[s=0])/A1(10,E-M-1)%10|0;else if((s=Math.ceil((m+1)/b))>=(R=t.length)){if(!f)break t;for(;R++<=s;)t.push(0);F=D=0,E=1,M=(m%=b)-b+1}else{for(F=R=t[s],E=1;R>=10;R/=10)E++;D=(M=(m%=b)-b+E)<0?0:F/A1(10,E-M-1)%10|0}if(f=f||v<0||t[s+1]!==void 0||(M<0?F:F%A1(10,E-M-1)),U=p<4?(D||f)&&(p==0||p==(r.s<0?3:2)):D>5||D==5&&(p==4||f||p==6&&(m>0?M>0?F/A1(10,E-M):0:t[s-1])%10&1||p==(r.s<0?8:7)),v<1||!t[0])return t.length=0,U?(v-=r.e+1,t[0]=A1(10,(b-v%b)%b),r.e=-v||0):t[0]=r.e=0,r;if(m==0?(t.length=s,R=1,s--):(t.length=s+1,R=A1(10,b-m),t[s]=M>0?(F/A1(10,E-M)%A1(10,M)|0)*R:0),U)for(;;){if(s==0){for(m=1,M=t[0];M>=10;M/=10)m++;for(M=t[0]+=R,R=1;M>=10;M/=10)R++;m!=R&&(r.e++,t[0]==g&&(t[0]=1));break}if(t[s]+=R,t[s]!=g)break;t[s--]=0,R=1}for(m=t.length;t[--m]===0;)t.pop()}return T0&&(r.e>h.maxE?(r.d=null,r.e=NaN):r.e<h.minE&&(r.e=0,r.d=[0])),r}function g0(r,v,p){if(!r.isFinite())return e0(r);var f,E=r.e,m=C(r.d),M=m.length;return v?(p&&(f=p-M)>0?m=m.charAt(0)+"."+m.slice(1)+n0(f):M>1&&(m=m.charAt(0)+"."+m.slice(1)),m=m+(r.e<0?"e":"e+")+r.e):E<0?(m="0."+n0(-E-1)+m,p&&(f=p-M)>0&&(m+=n0(f))):E>=M?(m+=n0(E+1-M),p&&(f=p-E-1)>0&&(m=m+"."+n0(f))):((f=E+1)<M&&(m=m.slice(0,f)+"."+m.slice(f)),p&&(f=p-M)>0&&(E+1===M&&(m+="."),m+=n0(f))),m}function C1(r,v){var p=r[0];for(v*=b;p>=10;p/=10)v++;return v}function I1(r,v,p){if(v>A)throw T0=!0,p&&(r.precision=p),Error(k0);return y0(new r(W),v,1,!0)}function x1(r,v,p){if(v>w)throw Error(k0);return y0(new r(j),v,p,!0)}function s0(r){var v=r.length-1,p=v*b+1;if(v=r[v]){for(;v%10==0;v/=10)p--;for(v=r[0];v>=10;v/=10)p++}return p}function n0(r){for(var v="";r--;)v+="0";return v}function a0(r,v,p,f){var E,m=new r(1),M=Math.ceil(f/b+4);for(T0=!1;;){if(p%2&&o0((m=m.times(v)).d,M)&&(E=!0),(p=Q0(p/2))===0){p=m.d.length-1,E&&m.d[p]===0&&++m.d[p];break}o0((v=v.times(v)).d,M)}return T0=!0,m}function Y(r){return 1&r.d[r.d.length-1]}function C0(r,v,p){for(var f,E=new r(v[0]),m=0;++m<v.length;){if(!(f=new r(v[m])).s){E=f;break}E[p](f)&&(E=f)}return E}function m1(r,v){var p,f,E,m,M,R,D,U=0,F=0,t=0,s=r.constructor,h=s.rounding,y=s.precision;if(!r.d||!r.d[0]||r.e>17)return new s(r.d?r.d[0]?r.s<0?0:1/0:1:r.s?r.s<0?0:r:NaN);for(v==null?(T0=!1,D=y):D=v,R=new s(.03125);r.e>-2;)r=r.times(R),t+=5;for(D+=f=Math.log(A1(2,t))/Math.LN10*2+5|0,p=m=M=new s(1),s.precision=D;;){if(m=y0(m.times(r),D,1),p=p.times(++F),C((R=M.plus(h0(m,p,D,1))).d).slice(0,D)===C(M.d).slice(0,D)){for(E=t;E--;)M=y0(M.times(M),D,1);if(v!=null)return s.precision=y,M;if(!(U<3&&K(M.d,D-f,h,U)))return y0(M,s.precision=y,h,T0=!0);s.precision=D+=10,p=m=R=new s(1),F=0,U++}M=R}}function B0(r,v){var p,f,E,m,M,R,D,U,F,t,s,h=1,y=r,L=y.d,X=y.constructor,A0=X.rounding,Q=X.precision;if(y.s<0||!L||!L[0]||!y.e&&L[0]==1&&L.length==1)return new X(L&&!L[0]?-1/0:y.s!=1?NaN:L?0:y);if(v==null?(T0=!1,F=Q):F=v,X.precision=F+=10,f=(p=C(L)).charAt(0),!(Math.abs(m=y.e)<15e14))return U=I1(X,F+2,Q).times(m+""),y=B0(new X(f+"."+p.slice(1)),F-10).plus(U),X.precision=Q,v==null?y0(y,Q,A0,T0=!0):y;for(;f<7&&f!=1||f==1&&p.charAt(1)>3;)f=(p=C((y=y.times(r)).d)).charAt(0),h++;for(m=y.e,f>1?(y=new X("0."+p),m++):y=new X(f+"."+p.slice(1)),t=y,D=M=y=h0(y.minus(1),y.plus(1),F,1),s=y0(y.times(y),F,1),E=3;;){if(M=y0(M.times(s),F,1),C((U=D.plus(h0(M,new X(E),F,1))).d).slice(0,F)===C(D.d).slice(0,F)){if(D=D.times(2),m!==0&&(D=D.plus(I1(X,F+2,Q).times(m+""))),D=h0(D,new X(h),F,1),v!=null)return X.precision=Q,D;if(!K(D.d,F-10,A0,R))return y0(D,X.precision=Q,A0,T0=!0);X.precision=F+=10,U=M=y=h0(t.minus(1),t.plus(1),F,1),s=y0(y.times(y),F,1),E=R=1}D=U,E+=2}}function e0(r){return String(r.s*r.s/0)}function i0(r,v){var p,f,E;for((p=v.indexOf("."))>-1&&(v=v.replace(".","")),(f=v.search(/e/i))>0?(p<0&&(p=f),p+=+v.slice(f+1),v=v.substring(0,f)):p<0&&(p=v.length),f=0;v.charCodeAt(f)===48;f++);for(E=v.length;v.charCodeAt(E-1)===48;--E);if(v=v.slice(f,E)){if(E-=f,r.e=p=p-f-1,r.d=[],f=(p+1)%b,p<0&&(f+=b),f<E){for(f&&r.d.push(+v.slice(0,f)),E-=b;f<E;)r.d.push(+v.slice(f,f+=b));v=v.slice(f),f=b-v.length}else f-=E;for(;f--;)v+="0";r.d.push(+v),T0&&(r.e>r.constructor.maxE?(r.d=null,r.e=NaN):r.e<r.constructor.minE&&(r.e=0,r.d=[0]))}else r.e=0,r.d=[0];return r}function H0(r,v){var p,f,E,m,M,R,D,U,F;if(v==="Infinity"||v==="NaN")return+v||(r.s=NaN),r.e=NaN,r.d=null,r;if(h1.test(v))p=16,v=v.toLowerCase();else if(f1.test(v))p=2;else{if(!z0.test(v))throw Error(K0+v);p=8}for((m=v.search(/p/i))>0?(D=+v.slice(m+1),v=v.substring(2,m)):v=v.slice(2),M=(m=v.indexOf("."))>=0,f=r.constructor,M&&(m=(R=(v=v.replace(".","")).length)-m,E=a0(f,new f(p),m,2*m)),m=F=(U=S0(v,p,g)).length-1;U[m]===0;--m)U.pop();return m<0?new f(0*r.s):(r.e=C1(U,F),r.d=U,T0=!1,M&&(r=h0(r,E,4*R)),D&&(r=r.times(Math.abs(D)<54?A1(2,D):p1.pow(2,D))),T0=!0,r)}function u1(r,v,p,f,E){var m,M,R,D,U=r.precision,F=Math.ceil(U/b);for(T0=!1,D=p.times(p),R=new r(f);;){if(M=h0(R.times(D),new r(v++*v++),U,1),R=E?f.plus(M):f.minus(M),f=h0(M.times(D),new r(v++*v++),U,1),(M=R.plus(f)).d[F]!==void 0){for(m=F;M.d[m]===R.d[m]&&m--;);if(m==-1)break}m=R,R=f,f=M,M=m}return T0=!0,M.d.length=F+1,M}function x(r,v){for(var p=r;--v;)p*=r;return p}function q(r,v){var p,f=v.s<0,E=x1(r,r.precision,1),m=E.times(.5);if((v=v.abs()).lte(m))return E1=f?4:1,v;if((p=v.divToInt(E)).isZero())E1=f?3:2;else{if((v=v.minus(p.times(E))).lte(m))return E1=Y(p)?f?2:3:f?4:1,v;E1=Y(p)?f?1:4:f?3:2}return v.minus(E).abs()}function $(r,v,p,f){var E,m,M,R,D,U,F,t,s,h=r.constructor,y=p!==void 0;if(y?(V(p,1,G0),f===void 0?f=h.rounding:V(f,0,8)):(p=h.precision,f=h.rounding),r.isFinite()){for(y?(E=2,v==16?p=4*p-3:v==8&&(p=3*p-2)):E=v,(M=(F=g0(r)).indexOf("."))>=0&&(F=F.replace(".",""),(s=new h(1)).e=F.length-M,s.d=S0(g0(s),10,E),s.e=s.d.length),m=D=(t=S0(F,10,E)).length;t[--D]==0;)t.pop();if(t[0]){if(M<0?m--:((r=new h(r)).d=t,r.e=m,t=(r=h0(r,s,p,f,0,E)).d,m=r.e,U=Z),M=t[p],R=E/2,U=U||t[p+1]!==void 0,U=f<4?(M!==void 0||U)&&(f===0||f===(r.s<0?3:2)):M>R||M===R&&(f===4||U||f===6&&1&t[p-1]||f===(r.s<0?8:7)),t.length=p,U)for(;++t[--p]>E-1;)t[p]=0,p||(++m,t.unshift(1));for(D=t.length;!t[D-1];--D);for(M=0,F="";M<D;M++)F+=N0.charAt(t[M]);if(y){if(D>1)if(v==16||v==8){for(M=v==16?4:3,--D;D%M;D++)F+="0";for(D=(t=S0(F,E,v)).length;!t[D-1];--D);for(M=1,F="1.";M<D;M++)F+=N0.charAt(t[M])}else F=F.charAt(0)+"."+F.slice(1);F=F+(m<0?"p":"p+")+m}else if(m<0){for(;++m;)F="0"+F;F="0."+F}else if(++m>D)for(m-=D;m--;)F+="0";else m<D&&(F=F.slice(0,m)+"."+F.slice(m))}else F=y?"0p+0":"0";F=(v==16?"0x":v==2?"0b":v==8?"0o":"")+F}else F=e0(r);return r.s<0?"-"+F:F}function o0(r,v){if(r.length>v)return r.length=v,!0}function F0(r){return new this(r).abs()}function D0(r){return new this(r).acos()}function c0(r){return new this(r).acosh()}function l1(r,v){return new this(r).plus(v)}function Z0(r){return new this(r).asin()}function i1(r){return new this(r).asinh()}function P1(r){return new this(r).atan()}function T(r){return new this(r).atanh()}function H(r,v){r=new this(r),v=new this(v);var p,f=this.precision,E=this.rounding,m=f+4;return r.s&&v.s?r.d||v.d?!v.d||r.isZero()?(p=v.s<0?x1(this,f,E):new this(0)).s=r.s:!r.d||v.isZero()?(p=x1(this,m,1).times(.5)).s=r.s:v.s<0?(this.precision=m,this.rounding=1,p=this.atan(h0(r,v,m,1)),v=x1(this,m,1),this.precision=f,this.rounding=E,p=r.s<0?p.minus(v):p.plus(v)):p=this.atan(h0(r,v,m,1)):(p=x1(this,m,1).times(v.s>0?.25:.75)).s=r.s:p=new this(NaN),p}function f0(r){return new this(r).cbrt()}function v0(r){return y0(r=new this(r),r.e+1,2)}function u0(r){if(!r||typeof r!="object")throw Error(o1+"Object expected");var v,p,f,E=r.defaults===!0,m=["precision",1,G0,"rounding",0,8,"toExpNeg",-m0,0,"toExpPos",0,m0,"maxE",0,m0,"minE",-m0,0,"modulo",0,9];for(v=0;v<m.length;v+=3)if(p=m[v],E&&(this[p]=c1[p]),(f=r[p])!==void 0){if(!(Q0(f)===f&&f>=m[v+1]&&f<=m[v+2]))throw Error(K0+p+": "+f);this[p]=f}if(p="crypto",E&&(this[p]=c1[p]),(f=r[p])!==void 0){if(f!==!0&&f!==!1&&f!==0&&f!==1)throw Error(K0+p+": "+f);if(f){if(typeof crypto>"u"||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(l0);this[p]=!0}else this[p]=!1}return this}function b0(r){return new this(r).cos()}function O0(r){return new this(r).cosh()}function M0(r,v){return new this(r).div(v)}function P0(r){return new this(r).exp()}function I0(r){return y0(r=new this(r),r.e+1,3)}function d1(){var r,v,p=new this(0);for(T0=!1,r=0;r<arguments.length;)if((v=new this(arguments[r++])).d)p.d&&(p=p.plus(v.times(v)));else{if(v.s)return T0=!0,new this(1/0);p=v}return T0=!0,p.sqrt()}function j0(r){return r instanceof p1||r&&r.name==="[object Decimal]"||!1}function v1(r){return new this(r).ln()}function U1(r,v){return new this(r).log(v)}function i2(r){return new this(r).log(2)}function Q1(r){return new this(r).log(10)}function e2(){return C0(this,arguments,"lt")}function j1(){return C0(this,arguments,"gt")}function o2(r,v){return new this(r).mod(v)}function p2(r,v){return new this(r).mul(v)}function A2(r,v){return new this(r).pow(v)}function c2(r){var v,p,f,E,m=0,M=new this(1),R=[];if(r===void 0?r=this.precision:V(r,1,G0),f=Math.ceil(r/b),this.crypto)if(crypto.getRandomValues)for(v=crypto.getRandomValues(new Uint32Array(f));m<f;)(E=v[m])>=429e7?v[m]=crypto.getRandomValues(new Uint32Array(1))[0]:R[m++]=E%1e7;else{if(!crypto.randomBytes)throw Error(l0);for(v=crypto.randomBytes(f*=4);m<f;)(E=v[m]+(v[m+1]<<8)+(v[m+2]<<16)+((127&v[m+3])<<24))>=214e7?crypto.randomBytes(4).copy(v,m):(R.push(E%1e7),m+=4);m=f/4}else for(;m<f;)R[m++]=1e7*Math.random()|0;for(f=R[--m],r%=b,f&&r&&(E=A1(10,b-r),R[m]=(f/E|0)*E);R[m]===0;m--)R.pop();if(m<0)p=0,R=[0];else{for(p=-1;R[0]===0;p-=b)R.shift();for(f=1,E=R[0];E>=10;E/=10)f++;f<b&&(p-=b-f)}return M.e=p,M.d=R,M}function L2(r){return y0(r=new this(r),r.e+1,this.rounding)}function q2(r){return(r=new this(r)).d?r.d[0]?r.s:0*r.s:r.s||NaN}function F1(r){return new this(r).sin()}function _1(r){return new this(r).sinh()}function r2(r){return new this(r).sqrt()}function B2(r,v){return new this(r).sub(v)}function n2(r){return new this(r).tan()}function v2(r){return new this(r).tanh()}function g1(r){return y0(r=new this(r),r.e+1,1)}return(p1=function r(v){var p,f,E;function m(M){var R,D,U,F=this;if(!(F instanceof m))return new m(M);if(F.constructor=m,M instanceof m)return F.s=M.s,void(T0?!M.d||M.e>m.maxE?(F.e=NaN,F.d=null):M.e<m.minE?(F.e=0,F.d=[0]):(F.e=M.e,F.d=M.d.slice()):(F.e=M.e,F.d=M.d?M.d.slice():M.d));if((U=typeof M)=="number"){if(M===0)return F.s=1/M<0?-1:1,F.e=0,void(F.d=[0]);if(M<0?(M=-M,F.s=-1):F.s=1,M===~~M&&M<1e7){for(R=0,D=M;D>=10;D/=10)R++;return void(T0?R>m.maxE?(F.e=NaN,F.d=null):R<m.minE?(F.e=0,F.d=[0]):(F.e=R,F.d=[M]):(F.e=R,F.d=[M]))}return 0*M!=0?(M||(F.s=NaN),F.e=NaN,void(F.d=null)):i0(F,M.toString())}if(U!=="string")throw Error(K0+M);return(D=M.charCodeAt(0))===45?(M=M.slice(1),F.s=-1):(D===43&&(M=M.slice(1)),F.s=1),d0.test(M)?i0(F,M):H0(F,M)}if(m.prototype=S,m.ROUND_UP=0,m.ROUND_DOWN=1,m.ROUND_CEIL=2,m.ROUND_FLOOR=3,m.ROUND_HALF_UP=4,m.ROUND_HALF_DOWN=5,m.ROUND_HALF_EVEN=6,m.ROUND_HALF_CEIL=7,m.ROUND_HALF_FLOOR=8,m.EUCLID=9,m.config=m.set=u0,m.clone=r,m.isDecimal=j0,m.abs=F0,m.acos=D0,m.acosh=c0,m.add=l1,m.asin=Z0,m.asinh=i1,m.atan=P1,m.atanh=T,m.atan2=H,m.cbrt=f0,m.ceil=v0,m.cos=b0,m.cosh=O0,m.div=M0,m.exp=P0,m.floor=I0,m.hypot=d1,m.ln=v1,m.log=U1,m.log10=Q1,m.log2=i2,m.max=e2,m.min=j1,m.mod=o2,m.mul=p2,m.pow=A2,m.random=c2,m.round=L2,m.sign=q2,m.sin=F1,m.sinh=_1,m.sqrt=r2,m.sub=B2,m.tan=n2,m.tanh=v2,m.trunc=g1,v===void 0&&(v={}),v&&v.defaults!==!0)for(E=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],p=0;p<E.length;)v.hasOwnProperty(f=E[p++])||(v[f]=this[f]);return m.config(v),m}(c1)).default=p1.Decimal=p1,W=new p1(W),j=new p1(j),B.exports?(typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"&&(S[Symbol.for("nodejs.util.inspect.custom")]=S.toString,S[Symbol.toStringTag]="Decimal"),B.exports=p1):(r0||(r0=typeof self<"u"&&self&&self.self==self?self:window),R0=r0.Decimal,p1.noConflict=function(){return r0.Decimal=R0,p1},r0.Decimal=p1),p1}(N6)});B.exports=a})(U3);var A6=U3.exports;const M3=b6(A6);var _2=function(F1){var a=new v,r0=F1.bigInt,p1=F1.bigDec;p1.set({precision:250});var Z={},R0=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],E1={},m0={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:"i",FUNCTION_MODULES:[Math],ALLOW_CHARS:["π"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:"^",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\+\-\/\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\+\-\/\*]*)/gi,ALIASES:{π:"pi","∞":"Infinity"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:"vector",PARENTHESIS:"parens",SQRT:"sqrt",ABS:"abs",FACTORIAL:"factorial",DOUBLEFACTORIAL:"dfactorial",LONG_PI:"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196",LONG_E:"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901",PI:Math.PI,E:Math.E,LOG:"log",LOG10:"log10",LOG10_LATEX:"log_{10}",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};(function(){m0.CACHE.roots={};for(var t=2;t<=40;t++)for(var s=2;s<=40;s++){var h=r0(t).pow(s);m0.CACHE.roots[h+"-"+s]=t}})();function G0(t){function s(h){this.name=t,this.message=h!==void 0?h:"",(h=new Error(this.message)).name=this.name,this.stack=h.stack}return s.prototype=Object.create(Error.prototype),s}function N0(t){return S0.indexOf(t)!==-1}function W(t){return t instanceof n2}function j(t){return(t=Y(t)?t.multiplier:t).lessThan(0)}function c1(t){return Math.min.apply(void 0,t)}function T0(t,s){if(u1(t))for(var h=t.length,y=0;y<h;y++)s.call(t,y);else for(var L in t)t.hasOwnProperty(L)&&s.call(t,L)}function o1(t){for(var s=t.length,h=[],y=0;y<s;y++){var L=t[y];h.indexOf(L)===-1&&h.push(L)}return h}function K0(t){for(var s=R0[R0.length-1]||2;s<t;s++)s0(s)&&R0.push(s)}var k0=Z.N=1,l0=Z.P=2,Q0=Z.S=3,A1=Z.EX=4,f1=Z.FN=5,h1=Z.PL=6,z0=Z.CB=7,d0=Z.CP=8,g=m0.CONST_HASH="#",b=m0.PARENTHESIS,A=m0.SQRT,w=m0.ABS,S=m0.FACTORIAL,C=m0.DOUBLEFACTORIAL,V=[],K={},S0=[],h0=[],y0=function(t,s){if(!m0.suppress_errors)throw new(s||Error)(t)},g0=function(t){for(var s=t[0],h=1,y=t.length;h<y;h++)if(!t[h].equals(s))return!1;return!0},C1=function(t){h0.push(t),m0.SHOW_WARNINGS&&console&&console.warn&&console.warn(t)},I1=function(t,s){if(s=s||"variable",m0.ALLOW_CHARS.indexOf(t)===-1&&!m0.VALIDATION_REGEX.test(t))throw new p2(t+" is not a valid "+s+" name")},x1=function(t){var s,h,y,L=Math.sign(t);return t=Math.abs(t),/\d+\.?\d*e[\+\-]*\d+/i.test(t)&&(y=(y=(h=String(t).toLowerCase().split("e")).pop())/(s=Math.abs(y)),h=h[0].split("."),t=y==-1?(s-=h[0].length)<0?h[0].slice(0,s)+"."+h[0].slice(s)+(h.length===2?h[1]:""):"0."+new Array(s+1).join("0")+h.join(""):((y=h[1])&&(s-=y.length),s<0?h[0]+y.slice(0,s)+"."+y.slice(s):h.join("")+new Array(s+1).join("0"))),L<0?"-"+t:t},s0=function(t){for(var s=Math.floor(Math.sqrt(t)),h=2;h<=s;h++)if(t%h==0)return!1;return!0},n0=function(t){return/^\d+\.?\d*$/.test(t)},a0=function(t){return Y(t)?a0(t.multiplier.toDecimal()):t%1!=0},Y=function(t){return t instanceof r},C0=function(t,s,h){if(h=h||{c:[],add:function(Q){this.c.indexOf(Q)===-1&&isNaN(Q)&&this.c.push(Q)}},Y(t)){var y=t.group,L=t.previousGroup;if(y===A1&&C0(t.power,s,h),y===d0||y===z0||L===d0||L===z0)for(var X in t.symbols)C0(t.symbols[X],s,h);else if(y===Q0||L===Q0)t.value!=="e"&&t.value!=="pi"&&t.value!==m0.IMAGINARY&&h.add(t.value);else if(y===h1||L===h1)C0(D0(t.symbols),s,h);else if(y===A1)isNaN(t.value)||h.add(t.value),C0(t.power,s,h);else if(y===f1&&!s)for(var A0=0;A0<t.args.length;A0++)C0(t.args[A0],s,h)}return h.c.sort()},m1=function(t,s){t=a.expand(t),s=s||{};function h(y,L){s[y]||(s[y]=new r(0)),s[y]=a.add(s[y],L.clone())}return t.each(function(y){if(y.isConstant("all"))h("constants",y);else if(y.group===Q0)h(y.value,y);else if(y.group!==f1||y.fname!==w&&y.fname!==""){if(y.group===A1||y.group===f1)throw new Error("Unable to separate. Term cannot be a function!");h(C0(y).join(" "),y)}else m1(y.args[0])}),s},B0=function(t){return t instanceof E},e0=function(t){return t instanceof m},i0=function(t){return t instanceof M},H0=function(t){return t.group===k0||t.group===l0},u1=function(t){return Array.isArray(t)},x=function(t){return/^[-+]?\d+e?\+?\d*$/gim.test(t.toString())},q=function(t){return t&&String(t)},$=function(t){return"("+t+")"},o0=function(){var t=[].slice.call(arguments);return t.shift().replace(/{(\d+)}/g,function(s,h){return h=t[h],typeof h=="function"?h():h})},F0=Object.keys,D0=function(t,s,h){for(var y in t)break;return s?y:h?{key:y,obj:t[y]}:t[y]},c0=function(t,s,h){return I1(t),N0(t)?null:(s=s||C0(a.parse(h)),a.functions[t]=[a.mapped_function,s.length,{name:t,params:s,body:h}],h)},l1=function(t,s,h){var y,L;return s=String(s),t.group===d0?(L=a.expand(t.clone()).stripVar(s),y=a.subtract(t.clone(),L.clone()),L=L):y=t.clone(),t=y.stripVar(s),s=a.divide(y.clone(),t.clone()),L=L||new r(0),h?{a:t,x:s,ax:y,b:L}:[t,s,y,L]},Z0=function(t,s){return x(t)?t>=Number.MAX_VALUE?t.toString():Number(t):(s=s===void 0?14:s,Math.round(t*Math.pow(10,s))/Math.pow(10,s))},i1=function(t){return t%2==0},P1=function(t){return 1/(t%1)%2==0},T=function(t,s){var h=typeof s;h=="function"&&h!="undefined"||(s=function(Y0,E0){return Y0===E0});for(var y=[];t.length;){var L=t[0];if(t.length===1){y.push(L);break}var X=[];y.push(L);for(var A0=1;A0<t.length;A0++){var Q=t[A0];s(L,Q)||X.push(Q)}t=X}return y},U=function(t){function s(h){S0.indexOf(h)===-1&&S0.push(h)}typeof t=="string"?s(t):T0(t,function(h){s(h)})},H=function(t,s){var h;return u1(t)?h=t.splice(s,1)[0]:(h=t[s],delete t[s]),h},f0=function(t,s,h,y){var L=m0[t];return m0[t]=h===void 0||!!h,y=s.call(y),m0[t]=L,y},v0=function(t){return[].slice.call(t)},u0=function(t,s){return f0("PARSE2NUMBER",function(){return a.parse(t,s)},!0)},b0=function(t){if(u1(t)){for(var s=new E([]),h=0;h<t.length;h++)s.elements.push(b0(t[h]));return s}return Y(t)?t:a.parse(t)},O0=function(t){for(var s=0;s<t.length;s++)if(t[s].group!==k0)return!1;return!0},M0=function(t){for(var s=0;s<t.length;s++)if(!t[s].isPi()&&!t[s].isE()&&!t[s].isConstant(!0))return!1;return!0},P0=function(t,s,h){(s.isComposite()&&!t.isComposite()||s.isLinear()&&!t.isLinear())&&([t,s]=[s,t]);var y=new r(0);return t.isLinear()?t.each(function(L){var X;s.isComposite()?s.isLinear()?s.each(function(A0){A0=a.multiply(a.parse(L),a.parse(A0)),A0=a.expand(a.parse(A0),h),y=a.add(y,A0)},!0):y=a.add(y,a.multiply(L,a.parse(s))):(X=a.multiply(a.parse(L),a.parse(s)),y=a.add(y,a.expand(X,h)))},!0):y=a.multiply(t,s),y},I0=G0("DivisionByZero"),d1=G0("ParseError"),j0=G0("UndefinedError"),v1=G0("OutOfFunctionDomainError"),U1=G0("MaximumIterationsReached"),i2=G0("NerdamerTypeError"),Q1=G0("ParityError"),e2=G0("OperatorError"),j1=G0("OutOfRangeError"),o2=G0("DimensionError"),p2=G0("InvalidVariableNameError"),A2=G0("ValueLimitExceededError"),c2=G0("NerdamerValueError"),L2=G0("SolveError"),F1=G0("InfiniteLoopError"),q2=G0("UnexpectedTokenError"),F1={DivisionByZero:I0,ParseError:d1,OutOfFunctionDomainError:v1,UndefinedError:j0,MaximumIterationsReached:U1,NerdamerTypeError:i2,ParityError:Q1,OperatorError:e2,OutOfRangeError:j1,DimensionError:o2,InvalidVariableNameError:p2,ValueLimitExceededError:A2,NerdamerValueError:c2,SolveError:L2,InfiniteLoopError:F1,UnexpectedTokenError:q2},_1={csc:function(t){return 1/Math.sin(t)},sec:function(t){return 1/Math.cos(t)},cot:function(t){return 1/Math.tan(t)},acsc:function(t){return Math.asin(1/t)},asec:function(t){return Math.acos(1/t)},acot:function(t){return Math.PI/2-Math.atan(t)},erf:function(t){var s=1/(1+.5*Math.abs(t)),s=1-s*Math.exp(-t*t-1.26551223+s*(1.00002368+s*(.37409196+s*(.09678418+s*(s*(.27886807+s*(s*(1.48851587+s*(.17087277*s-.82215223))-1.13520398))-.18628806)))));return 0<=t?s:-s},diff:function(t){return function(s){return(t(s+.001)-t(s-.001))/.002}},median:function(...t){t.sort(function(h,y){return h-y});var s=Math.floor(t.length/2);return t.length%2?t[s]:(t[s-1]+t[s])/2},fromContinued:function(t){for(var s=t.fractions.slice(),h=1/s.pop(),y=0,L=s.length;y<L;y++)h=1/(s.pop()+h);return t.sign*(t.whole+h)},continuedFraction:function(t,s){s=s||20;for(var h=Math.sign(t),y=Math.abs(t),L=Math.floor(y),X=y-L,A0=0,Q=!1,Y0={whole:L,sign:h,fractions:[]};!Q&&X!==0;){var E0=1/X,U0=Math.floor(E0);if(1e7<U0&&_1.fromContinued(Y0)-t<=Number.EPSILON)break;Y0.fractions.push(U0),((X=E0-U0)<=1e-14||s-1<=A0)&&(Q=!0),A0++}return h=Y0.fractions.length-1,Y0.fractions[h]===1&&(Y0.fractions.pop(),Y0.fractions[--h]++),Y0},bigpow:function(t,s){t instanceof g1||(t=g1.create(t)),s instanceof g1||(s=g1.create(s));var h,y=new g1(0);return s.isInteger()?(y.num=t.num.pow(s.toString()),y.den=t.den.pow(s.toString())):(h=g1.create(Math.pow(t.num,s.num)),t=g1.create(Math.pow(t.den,s.num)),y.num=_1.nthroot(h,s.den.toString()),y.den=_1.nthroot(t,s.den)),y},gamma:function(t){var s=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(t<.5)return Math.PI/(Math.sin(Math.PI*t)*_1.gamma(1-t));--t;for(var h=s[0],y=1;y<9;y++)h+=s[y]/(t+y);var L=t+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(L,t+.5)*Math.exp(-L)*h},bigfactorial:function(t){for(var s=new r0(1),h=2;h<=t;h++)s=s.times(h);return new g1(s)},bigLog:function(t){var s=["-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375","0","24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375","369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000","24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375","399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625","1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777","5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000","76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875","3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375","22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375","14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808","1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625","139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375","1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875","9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000","9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771","5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875","246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375","133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875","705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383","101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625","10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000","1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875","525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375","9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601","407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000","2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625","186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625","664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875","2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032","124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875","827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625","17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375","137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000","746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431","64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375","2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125","74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125","35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131","102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625","10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000","248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375","7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375","3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117","218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000","5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375","15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375","5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625","4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744","38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125","573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875","23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375","58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000","728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093","86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625","2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125","139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125","16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853","34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625","345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000","1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625","274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125","7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889","5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000","2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875","521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625","66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375","335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608","20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625","2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625","31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875","432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000","1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071","5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875","451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625","1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125","3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819","155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375","46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000","3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375","1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625","84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627","802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000","25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875","732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875","22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375","21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688","76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625","40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625","200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375","488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000","8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239","58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625","2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625","27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875","2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797","6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875","82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000","584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625","4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625","3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333","1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000","328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875","2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125","636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125","266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776","3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125","499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375","8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375","51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000","2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687","937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125","5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875","58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625","2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647","150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875","162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000","27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625","1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875","8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037","84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000","1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625","4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625","362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125","8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384","1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125","88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625","752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875","15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000","17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357","39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875","18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625","46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875","23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397","538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875","24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000","166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125","142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625","380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577","79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000","26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625","71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375","342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125","190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288","15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125","36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375","1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625","7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000","15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581","2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125","441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875","91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875","167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473","22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125","1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000","25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875","616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125","979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419","1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000","614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125","106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375","1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625","983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464","30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625","33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875","9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375","396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000","1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357","559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375","365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875","59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125","13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147","1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625","281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000","228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125","2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375","1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733","1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000","158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375","12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375","578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375","8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984","12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625","683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375","1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625","546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000","2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253","6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625","13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625","1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"];if(s[t])return g1.quick.apply(null,s[t].split("/"));t=new g1(t);for(var Q=new g1(0),h=t.subtract(new g1(1)),y=t.add(new g1(1)),L=0;L<80;L++)var X=new g1(2*L+1),A0=_1.bigpow(h.divide(y),X),A0=X.clone().invert().multiply(A0),Q=Q.add(A0);return Q.multiply(new g1(2))},factorial:function(t){var s=t%1==0;if(s&&t<0)return NaN;if(!s)return _1.gamma(t+1);for(var h=1,y=2;y<=t;y++)h*=y;return h},dfactorial:function(t){if(x(t)){var s=t%2==0,h=s?t/2:(t+1)/2,y=new g1(1);if(s)for(var L=1;L<=h;L++)y=y.multiply(new g1(2).multiply(new g1(L)));else for(L=1;L<=h;L++)y=y.multiply(new g1(2).multiply(new g1(L)).subtract(new g1(1)))}else y=Math.pow(2,(1+2*t-Math.cos(Math.PI*t))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*t)-1)/4)*_1.gamma(1+t/2);return y},GCD:function(){for(var t=o1([].slice.call(arguments).map(function(L){return Math.abs(L)})).sort(),s=Math.abs(t.shift()),h=t.length;0<h--;)for(var y=Math.abs(t.shift());;){if((s%=y)===0){s=y;break}if((y%=s)===0)break}return s},QGCD:function(){for(var t=[].slice.call(arguments),s=t[0],h=1;h<t.length;h++){var y=t[h],L=s.isNegative()&&y.isNegative()?-1:1,s=y.gcd(s);L<0&&s.negate()}return s},LCM:function(t,s){return t*s/_1.GCD(t,s)},pow:function(t,s){return t<0&&Math.abs(s)<1?1/s%2==0?NaN:-Math.pow(Math.abs(t),s):Math.pow(t,s)},factor:function(t){t=Number(t);var s=Math.sign(t);t=Math.abs(t);var h,y=_1.ifactor(t),L=new r;for(h in L.symbols={},L.group=z0,y){var X=new r(1);X.group=l0,X.value=h,X.power=new r(y[h]),L.symbols[h]=X}return L.updateHash(),t===1&&(L=new r(t)),s<0&&L.negate(),L},sfactor:function(t,s){s=s||{};var h=Math.floor(Math.sqrt(t));R0[R0.length-1]<h&&t<1e6&&K0(h);for(var y=R0.length,L=0;L<y;L++)for(var X=R0[L];t%X==0;)t/=X,s[X]=(s[X]||0)+1;return 1<t&&(s[t]=1),s},ifactor:function(t){var s=new r0(t);if((t=String(t))==="0")return{0:1};var h=(t=new r0(t)).sign?-1:1;t=t.abs();var y={};if(t.lt("65536"))y=_1.sfactor(t,y);else{var L=function(Y0){Y0.isPrime()?y[Y0]=(y[Y0]||0)+1:y=_1.sfactor(Y0,y)};try{for(var X=1e3,A0=0;!t.abs().equals(1);){if(t.isPrime()){L(t);break}var Q=function Y0(E0){for(var U0=new r0(E0),R1=2,t1=new r0(E0),S1=new r0(1);S1.equals(1);){for(var x0=0;x0<=R1&&S1.equals(1);x0++){if(A0++>X)throw new Error("stopping");t1=t1.pow(2).add(1).mod(t),S1=r0.gcd(t1.minus(U0).abs(),t)}R1*=2,U0=t1}return S1.equals(t)?Y0(E0+1):S1}(2);L(Q),t=t.divide(Q)}}catch{y={},L(s)}}return h==-1&&(h=c1(F0(y)),y["-"+h]=y[h],delete y[h]),y},boxfactor:function(t,s){s=s||200;for(var h,y,L=Math.floor(5/12*t),X=0,A0=!1;h=Math.floor(t/L),(y=t%L)!=0;){if(A0)return[t,1];L=Math.max(y,L-y),A0=s<++X}return[h,L,X]},fib:function(t){var s=Math.sign(t);t=Math.abs(t);for(var s=i1(t)?s:Math.abs(s),h=0,y=1,L=1,X=2;X<=t;X++)L=h+y,h=y,y=L;return L*s},mod:function(t,s){return t%s},integer_part:function(t){return Math.sign(t)*Math.floor(Math.abs(t))},simpson:function(t,s,h,y){function L(R1,t1,S1){var x0=R1(t1);return x0=isNaN(x0)?R1(S1===1?t1+1e-12:t1-1e-12):x0}y=y||1e-4;var X=Math.abs(Math.floor((h-s)/y));X%2!=0&&X++;for(var A0=(h-s)/X,Q=L(t,s,1),Y0=!1,E0=s+A0,U0=1;U0<X;U0++)Q+=(Y0?2:4)*L(t,E0,1),Y0=!Y0,E0+=A0;return(Q+L(t,E0,2))*(A0/3)},num_integrate:function(t,s,h,y,L){if(L<0)throw new Error("max depth cannot be negative");function X(Q,Y0,E0,V1,R1){var t1={maxDepthCount:0,nanEncountered:!1};V1===void 0&&(V1=1e-9),R1===void 0&&(R1=45);var S1=Q(Y0),x0=Q(.5*(Y0+E0)),P=Q(E0),V1=function X1(N1,y1,L1,O1,g2,S2,s2,G1,e,l,d){if(d.nanEncountered)return NaN;var N,_,G,t0=L1-y1,q0=N1(y1+.25*t0),X0=N1(L1-.25*t0);if(isNaN(q0))d.nanEncountered=!0;else if(isNaN(X0))d.nanEncountered=!0;else if(s2=((_=(G=t0*(O1+4*q0+g2)/12)+(N=t0*(g2+4*X0+S2)/12))-s2)/15,!(d.maxDepthCount>1e3*e))return e<l?(d.maxDepthCount++,_+s2):Math.abs(s2)<G1?_+s2:(G=X1(N1,y1,t0=y1+.5*t0,O1,q0,g2,G,.5*G1,e,l+1,d),isNaN(G)?(d.nanEncountered=!0,NaN):(l=X1(N1,t0,L1,g2,X0,S2,N,.5*G1,e,l+1,d),isNaN(l)?(d.nanEncountered=!0,NaN):G+l))}(Q,Y0,E0,S1,x0,P,(S1+4*x0+P)*(E0-Y0)/6,V1,R1,1,t1);if(0<t1.maxDepthCount&&C1("integrate-adaptive-simpson: Warning: maximum recursion depth ("+R1+") reached "+t1.maxDepthCount+" times"),t1.nanEncountered)throw new Error("Function does not converge over interval!");return V1}var A0;try{A0=X(t,s,h,y,L)}catch{return _1.simpson(t,s,h)}return Z0(A0,12)},Ci:function(t){for(var s=0,h=1;h<20;h++){var y=2*h;s+=Math.pow(-1,h)*Math.pow(t,y)/(y*_1.factorial(y))}return Math.log(t)+.5772156649015329+s},Si:function(t){for(var s=0,h=0;h<20;h++){var y=2*h;s+=Math.pow(-1,h)*Math.pow(t,1+y)/((1+y)*_1.factorial(1+y))}return s},Ei:function(t){if(Number(t)===0)return-1/0;for(var s=0,h=1;h<30;h++)s+=Math.pow(t,h)/(h*_1.factorial(h));return .5772156649015329+Math.abs(Math.log(t))+s},Shi:function(t){for(var s,h,y=0,L=0;L<30;L++)h=1+(s=2*L),y+=Math.pow(t,h)/(h*h*_1.factorial(s));return y},Chi:function(t){var s=function(h){return(Math.cosh(h)-1)/h};return Math.log(t)+.5772156649015329+_1.num_integrate(s,.002,t,.001)},Li:function(t){return _1.Ei(_1.bigLog(t))},gamma_incomplete:function(t,s){for(var h=t-1,y=0,s=s||0,L=0;L<h;L++)y+=Math.pow(s,L)/_1.factorial(L);return _1.factorial(h)*Math.exp(-s)*y},step:function(t){return 0<t?1:t<0?0:.5},rect:function(t){return(t=Math.abs(t))===.5?t:.5<t?0:1},sinc:function(t){return t.equals(0)?1:Math.sin(t)/t},tri:function(t){return 1<=(t=Math.abs(t))?0:1-t},nthroot:function(t,s){if(t instanceof g1||(t=new g1(t.toString())),(s=s instanceof g1?s:new g1(s.toString())).equals(1))return t;var h=t.divide(new g1(2)),y=new g1(1e-15),L=s.clone().invert(),X=s.subtract(new g1(1));do{var A0=_1.bigpow(h,X),Q=L.multiply(t.divide(A0).subtract(h)).toDecimal(25),A0=g1.create(Q);if(Y0)break;var h=h.add(A0),Q=A0.toDecimal(),Y0=!!E0&&E0===Q,E0=Q}while(A0.abs().gte(y));return h},sqrt:function(t){var s,h,y;t instanceof g1||(t=new g1(t));var L=0,X=!1,A0=new g1(1e-20),Q=t.divide(new g1(2));do if(1e3<L)throw new Error("Unable to calculate square root for "+t);while(Q=Q.add(t.divide(Q)).divide(new g1(2)),Q=new g1(Q.decimal(30)),s=t.subtract(Q.multiply(Q)),y=!!h&&h.equals(s),(s.clone().abs().lessThan(A0)||y)&&(X=!0),h=s,L++,!X);return Q}};function r2(t,s,h,y){var L=s==="hash",X=void 0,A0=L?void 0:s,Q=A0==="decimal"||A0==="decimals";function Y0(O1){switch(s){case"decimals":case"decimal":return X=X||function(i){return!1},O1.valueOf();case"recurring":X=X||function(i){return i.indexOf("'")!==-1};var X0=O1.toString();if((q0=/^-?\d+(?:\/\d+)?$/.exec(X0)).length===0)return X0;var G=q0[0].split("/"),g2=!1,S2=Number(G[0]);S2<0&&(S2=-S2,g2=!0);var s2=(s2=Number(G[1]))||1,G1=10*(S2-(t0=Math.floor(S2/s2))*s2);for(t0=t0.toString()+".";G1&&G1<s2;)G1*=10,t0+="0";for(var e="",l=[],d=0;;){if(l[G1]!==void 0)return(g2?"-":"")+(t0+e.slice(0,l[G1])+"'"+e.slice(l[G1])+"'").replace("'0'","").replace(/\.$/,"");var N=Math.floor(G1/s2),_=G1-N*s2;l[G1]=d,e+=N.toString(),d+=1,G1=10*_}case"mixed":if(X=X||function(i){return i.indexOf("/")!==-1},X0=O1.toString(),(q0=/^-?\d+(?:\/\d+)?$/.exec(X0)).length===0)return X0;var G=q0[0].split("/"),X0=new r0(G[0]),q0=new r0(G[1]);q0.equals(0)&&(q0=new r0(1));var X0=X0.divmod(q0),t0=X0.quotient,q0=X0.remainder,X0=G[0][0]==="-"||t0.equals(0)||q0.equals(0)?"":"+";return(t0.equals(0)?"":t0.toString())+X0+(q0.equals(0)?"":q0.toString()+"/"+G[1]);case"scientific":return X=X||function(i){return!1},new v2(O1.valueOf()).toString(m0.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return X=X||function(i){return i.indexOf("/")!==-1},O1.toString()}}if(Q&&y===void 0&&(y=m0.DEFAULT_DECP),Y(t)){var E0,U0,R1="",t1="",S1="",x0=t.group||h,P=t.value;switch(L||((E0=Y0(t.multiplier))=="-1"&&String(t.multiplier)==="-1"&&(S1="-",E0="1"),E0!="1"&&(R1=E0),(U0=t.power?Y0(t.power):"")!="1"&&(t1=Y(U0)?r2(U0,A0):U0)),x0){case k0:var R1="",X1=y&&Q?t.multiplier.toDecimal(y):Y0(t.multiplier),P=String(t.multiplier)=="-1"?"1":X1,t1="";break;case h1:P=t.collectSymbols().map(function(s2){return s2=r2(s2,A0,h,y),s2=s2=="0"?"":s2}).sort().join("+").replace(/\+\-/g,"-");break;case d0:P=t.collectSymbols().map(function(s2){return s2=r2(s2,A0,h,y),s2=s2=="0"?"":s2}).sort().join("+").replace(/\+\-/g,"-");break;case z0:P=t.collectSymbols(function(s2){var G1=s2.group;return(G1===h1||G1===d0)&&s2.power.equals(1)&&s2.multiplier.equals(1)?$(r2(s2,A0)):r2(s2,A0)}).join("*");break;case A1:var V1=t.previousGroup,X1=t.power.group;V1===h1&&(P=t.collectSymbols(r2,A0).join("+").replace("+-","-")),V1===k0||V1===Q0||V1===f1||L||(P=$(P)),X1!==d0&&X1!==z0&&X1!==h1&&t.power.multiplier.toString()=="1"||!t1||(t1=$(t1))}x0===f1&&(P=t.fname+$(t.args.map(function(O1){return r2(O1,A0)}).join(","))),x0===f1&&t.fname in E1&&(E0=r2(t.args[0]),U0=r2(t.args[1]),t.args[0].isComposite()&&(E0=$(E0)),t.args[1].isComposite()&&(U0=$(U0)),P=E0+E1[t.fname]+U0),t1&&x0!==A1&&X(t1)&&(t1=$(t1)),((x0===d0||x0===h1)&&(R1&&R1!="1"||S1==="-")||(x0===z0||x0===d0||x0===h1)&&t1&&t1!="1"||!L&&x0===l0&&P==-1||t.fname===b)&&(P=$(P));var N1=S1+(R1=y&&(s==="decimal"||s==="decimals"&&R1)?Z0(R1,y):R1);if(R1&&X(R1)&&(N1=$(N1)),R1&&(N1+="*"),t1=t1<0?$(t1):t1){if(P==="e"&&m0.E_TO_EXP)return N1+"exp"+$(t1);t1=m0.POWER_OPERATOR+t1}return x0=N1+(P=x0===A1&&P.charAt(0)==="-"?$(P):P),(x0=t.parens?$(x0):x0)+t1}if(B0(t)){for(var y1=t.elements.length,N1=[],L1=0;L1<y1;L1++)N1.push(t.elements[L1].text(s));return"["+N1.join(",")+"]"}try{return t.toString()}catch{return""}}function B2(t){if(s0(t))return[t];for(var s=t,h=1,y=[];h<s;){var L=t/h,X=Math.floor(L);if(L-X<=2220446049250313e-31&&1<h){if(s0(h)&&(R0.indexOf(h)===-1&&R0.push(h),y.push(h)),s0(X)){y.push(X);break}s=X}h++}return y.sort(function(A0,Q){return A0-Q})}function n2(t){this.symbol=t}function v2(t){return this instanceof v2?((t=String(t===void 0?0:t)).startsWith("-")?(this.sign=-1,t=t.substr(1,t.length)):this.sign=1,v2.isScientific(t)?this.fromScientific(t):this.convert(t),this):new v2(t)}function g1(t){if(t instanceof g1)return t;if(t===void 0)return this;try{if(x(t))try{this.num=r0(t),this.den=r0(1)}catch{return g1.simple(t)}else{var s=t instanceof p1?p.quickConversion(t):p.convert(t);this.num=new r0(s[0]),this.den=new r0(s[1])}}catch{return g1.simple(t)}}function r(t){var s=t==="Infinity";return this instanceof r?(t instanceof p1&&(t=t.toString()),/^(\-?\+?\d+)\.?\d*e?\-?\+?\d*/i.test(t)||t instanceof p1?(this.group=k0,this.value=g,this.multiplier=new g1(t)):(this.group=Q0,I1(t),this.value=t,this.multiplier=new g1(1),this.imaginary=t===m0.IMAGINARY,this.isInfinity=s),this.power=new g1(1),this):new r(t)}function v(){var t=this,s={},h={names:[],actions:[]};function y(i,u){this.start=i,this.end=u}function L(){this.elements=[]}function X(i,u,O){if(this.type=u,this.value=i,O!==void 0&&(this.column=O+1),u===X.OPERATOR){var I,z=E0[i];for(I in z)this[I]=z[I]}else u===X.FUNCTION&&(this.precedence=X.MAX_PRECEDENCE,this.leftAssoc=!1)}y.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},y.prototype.text=function(){return r2(this.start)+":"+r2(this.end)},L.prototype.append=function(i){this.elements.push(i)},L.prototype.getItems=function(){return this.elements},L.prototype.toString=function(){return t.pretty_print(this.elements)},L.create=function(i){var u=new L;return i&&u.append(i),u},X.prototype.toString=function(){return this.value},X.prototype.toString=function(){return this.is_prefix?"`"+this.value:this.value},X.OPERATOR="OPERATOR",X.VARIABLE_OR_LITERAL="VARIABLE_OR_LITERAL",X.FUNCTION="FUNCTION",X.UNIT="UNIT",X.KEYWORD="KEYWORD",X.MAX_PRECEDENCE=999,this.classes={Collection:L,Slice:y,Token:X};var A0={prec:void 0,cos:function(i,I){var O=t.parse(Math.cos(i)*Math.cosh(I)),I=t.parse(Math.sin(i)*Math.sinh(I));return t.subtract(O,t.multiply(I,r.imaginary()))},sin:function(i,I){var O=t.parse(Math.sin(i)*Math.cosh(I)),I=t.parse(Math.cos(i)*Math.sinh(I));return t.subtract(O,t.multiply(I,r.imaginary()))},tan:function(i,I){var O=t.parse(Math.sin(2*i)/(Math.cos(2*i)+Math.cosh(2*I))),I=t.parse(Math.sinh(2*I)/(Math.cos(2*i)+Math.cosh(2*I)));return t.add(O,t.multiply(I,r.imaginary()))},sec:function(i,u){return u=this.removeDen(this.cos(i,u)),t.subtract(u[0],t.multiply(u[1],r.imaginary()))},csc:function(i,u){return u=this.removeDen(this.sin(i,u)),t.add(u[0],t.multiply(u[1],r.imaginary()))},cot:function(i,u){return u=this.removeDen(this.tan(i,u)),t.subtract(u[0],t.multiply(u[1],r.imaginary()))},acos:function(O,I){var O=this.fromArray([O,I]),I=t.pow(O.clone(),new r(2)),I=t.expand(I),I=t.multiply(y1(t.subtract(new r(1),I)),r.imaginary()),I=d(t.expand(t.add(O.clone(),I)));return t.expand(t.multiply(r.imaginary().negate(),I))},asin:function(i,u){return t.subtract(t.parse("pi/2"),this.acos(i,u))},atan:function(O,I){if(O.equals(0)&&(I.equals(1)||I.equals(-1)))return t.parse(`${r.infinity()}*${m0.IMAGINARY}*${I}`);var O=A0.fromArray([O,I]),I=t.expand(t.multiply(r.imaginary(),O.clone())),O=d(t.expand(t.subtract(new r(1),I.clone()))),I=d(t.expand(t.add(new r(1),I.clone())));return t.expand(t.multiply(t.divide(r.imaginary(),new r(2)),t.subtract(O,I)))},asec:function(i,u){return u=this.removeDen([i,u]),u[1].negate(),this.acos.apply(this,u)},acsc:function(i,u){return u=this.removeDen([i,u]),u[1].negate(),this.asin.apply(this,u)},acot:function(i,u){return u=this.removeDen([i,u]),u[1].negate(),this.atan.apply(this,u)},cosh:function(i,I){var O=t.parse(Math.cosh(i)*Math.cos(I)),I=t.parse(Math.sinh(i)*Math.sin(I));return t.add(O,t.multiply(I,r.imaginary()))},sinh:function(i,I){var O=t.parse(Math.sinh(i)*Math.cos(I)),I=t.parse(Math.cosh(i)*Math.sin(I));return t.add(O,t.multiply(I,r.imaginary()))},tanh:function(I,u){var O=t.parse(Math.sinh(2*I)/(Math.cos(2*u)+Math.cosh(2*I))),I=t.parse(Math.sin(2*u)/(Math.cos(2*u)+Math.cosh(2*I)));return t.subtract(O,t.multiply(I,r.imaginary()))},sech:function(i,u){return u=this.removeDen(this.cosh(i,u)),t.subtract(u[0],t.multiply(u[1],r.imaginary()))},csch:function(i,u){return u=this.removeDen(this.sinh(i,u)),t.subtract(u[0],t.multiply(u[1],r.imaginary()))},coth:function(i,u){return u=this.removeDen(this.tanh(i,u)),t.add(u[0],t.multiply(u[1],r.imaginary()))},acosh:function(I,z){var O=this.fromArray([I,z]),I=y1(t.add(O.clone(),new r(1))),z=y1(t.subtract(O.clone(),new r(1)));return t.expand(d(t.add(O,t.expand(t.multiply(I,z)))))},asinh:function(i,u){return i=this.fromArray([i,u]),u=y1(t.add(new r(1),t.expand(t.pow(i.clone(),new r(2))))),t.expand(d(t.add(i,u)))},atanh:function(I,O){var I=this.fromArray([I,O]),O=d(t.add(I.clone(),new r(1))),I=d(t.subtract(new r(1),I));return t.expand(t.divide(t.subtract(O,I),new r(2)))},asech:function(i,u){return u=this.removeDen([i,u]),u[1].negate(),this.acosh.apply(this,u)},acsch:function(i,u){return u=this.removeDen([i,u]),u[1].negate(),this.asinh.apply(this,u)},acoth:function(i,u){return u=this.removeDen([i,u]),u[1].negate(),this.atanh.apply(this,u)},sqrt:function(I){var O=I.realpart(),u=I.imagpart(),I=r.hyp(O,u),O=t.add(O.clone(),I),I=y1(t.multiply(new r(2),O.clone()));return t.add(t.divide(O.clone(),I.clone()),t.multiply(t.divide(u,I),r.imaginary()))},log:function(I,u){var O=d(r.hyp(I,u)),I=m0.USE_BIG?r(p1.atan2(u.multiplier.toDecimal(),I.multiplier.toDecimal())):Math.atan2(u,I),I=t.parse(I);return t.add(O,t.multiply(r.imaginary(),I))},erf(i,u){return t.symfunction("erf",[i])},removeDen:function(I){var u,O=u1(I)?(u=I[0],I[1]):(u=I.realpart(),I.imagpart()),I=Math.pow(u,2)+Math.pow(O,2);return[t.parse(u/I),t.parse(O/I)]},fromArray:function(i){return t.add(i[0],t.multiply(r.imaginary(),i[1]))},evaluate:function(i,u){var O,I,z=i.power.sign();return i.power=i.power.abs(),i.power.greaterThan(1)&&(i=t.expand(i)),I=z<0?(O=(I=this.removeDen(i))[0],I[1]):(O=i.realpart(),i.imagpart()),O.isConstant("all")&&I.isConstant("all")?this[u].call(this,O,I):t.symfunction(u,[i])}},Q=this.trig={cos:function(i){if(i.equals("pi")&&i.multiplier.den.equals(2))return new r(0);if(m0.PARSE2NUMBER){if(i.equals(new r(m0.PI/2)))return new r(0);if(i.isConstant())return m0.USE_BIG?new r(p1.cos(i.multiplier.toDecimal())):new r(Math.cos(i.valueOf()));if(i.isImaginary())return A0.evaluate(i,"cos")}if(i.equals(0))return new r(1);var u,O=!1,I=_(i.multiplier.toDecimal()),z=i.multiplier.abs();return i.multiplier=z,i.isPi()&&i.isLinear()&&(x(z)?u=new r(i1(z)?1:-1):(Number(z.num),(z=Number(z.den))===2?u=new r(0):z===3?(u=t.parse("1/2"),O=!0):z===4?(u=t.parse("1/sqrt(2)"),O=!0):z===6?(u=t.parse("sqrt(3)/2"),O=!0):u=t.symfunction("cos",[i]))),!O||I!==2&&I!==3||u.negate(),u=u||t.symfunction("cos",[i])},sin:function(i){if(m0.PARSE2NUMBER){if(i.isConstant())return i%Math.PI==0?new r(0):m0.USE_BIG?new r(p1.sin(i.multiplier.toDecimal())):new r(Math.sin(i.valueOf()));if(i.isImaginary())return A0.evaluate(i,"sin")}if(i.equals(0))return new r(0);var u,O=!1,I=_(i.multiplier.toDecimal()),z=i.multiplier.sign(),p0=i.multiplier.abs();return i.multiplier=p0,i.equals("pi")?u=new r(0):i.isPi()&&i.isLinear()&&(x(p0)?u=new r(0):(p0.num,(p0=p0.den)==2?(u=new r(1),O=!0):p0==3?(u=t.parse("sqrt(3)/2"),O=!0):p0==4?(u=t.parse("1/sqrt(2)"),O=!0):p0==6?(u=t.parse("1/2"),O=!0):u=t.multiply(new r(z),t.symfunction("sin",[i])))),u=u||t.multiply(new r(z),t.symfunction("sin",[i])),!O||I!==3&&I!==4||u.negate(),u},tan:function(i){if(m0.PARSE2NUMBER){if(i%Math.PI==0&&i.isLinear())return new r(0);if(i.isConstant())return m0.USE_BIG?new r(p1.tan(i.multiplier.toDecimal())):new r(Math.tan(i.valueOf()));if(i.isImaginary())return A0.evaluate(i,"tan")}var u,O=!1,I=_(i.multiplier.toDecimal()),z=i.multiplier;if(i.multiplier=z,i.isPi()&&i.isLinear())if(x(z))u=new r(0);else{if(z.num,z=z.den,z==2)throw new j0("tan is undefined for "+i.toString());z==3?(u=t.parse("sqrt(3)"),O=!0):z==4?(u=new r(1),O=!0):z==6?(u=t.parse("1/sqrt(3)"),O=!0):u=t.symfunction("tan",[i])}return u=u||t.symfunction("tan",[i]),!O||I!==2&&I!==4||u.negate(),u},sec:function(i){if(m0.PARSE2NUMBER)return i.isConstant()?m0.USE_BIG?new r(new p1(1).dividedBy(p1.cos(i.multiplier.toDecimal()))):new r(_1.sec(i.valueOf())):i.isImaginary()?A0.evaluate(i,"sec"):t.parse(o0("1/cos({0})",i));var u,O=!1,I=_(i.multiplier.toDecimal()),z=i.multiplier.abs();if(i.multiplier=z,i.isPi()&&i.isLinear())if(x(z))u=new r(i1(z)?1:-1);else{if(z.num,z=z.den,z==2)throw new j0("sec is undefined for "+i.toString());z==3?(u=new r(2),O=!0):z==4?(u=t.parse("sqrt(2)"),O=!0):z==6?(u=t.parse("2/sqrt(3)"),O=!0):u=t.symfunction("sec",[i])}return!O||I!==2&&I!==3||u.negate(),u=u||t.symfunction("sec",[i])},csc:function(i){if(m0.PARSE2NUMBER)return i.isConstant()?m0.USE_BIG?new r(new p1(1).dividedBy(p1.sin(i.multiplier.toDecimal()))):new r(_1.csc(i.valueOf())):i.isImaginary()?A0.evaluate(i,"csc"):t.parse(o0("1/sin({0})",i));var u,O=!1,I=_(i.multiplier.toDecimal()),z=i.multiplier.sign(),p0=i.multiplier.abs();if(i.multiplier=p0,i.isPi()&&i.isLinear()){if(x(p0))throw new j0("csc is undefined for "+i.toString());p0.num,p0=p0.den,p0==2?(u=new r(1),O=!0):p0==3?(u=t.parse("2/sqrt(3)"),O=!0):p0==4?(u=t.parse("sqrt(2)"),O=!0):p0==6?(u=new r(2),O=!0):u=t.multiply(new r(z),t.symfunction("csc",[i]))}return u=u||t.multiply(new r(z),t.symfunction("csc",[i])),!O||I!==3&&I!==4||u.negate(),u},cot:function(i){if(m0.PARSE2NUMBER)return i%(Math.PI/2)==0?new r(0):i.isConstant()?m0.USE_BIG?new r(new p1(1).dividedBy(p1.tan(i.multiplier.toDecimal()))):new r(_1.cot(i.valueOf())):i.isImaginary()?A0.evaluate(i,"cot"):t.parse(o0("1/tan({0})",i));var u,O=!1,I=_(i.multiplier.toDecimal()),z=i.multiplier;if(i.multiplier=z,i.isPi()&&i.isLinear()){if(x(z))throw new j0("cot is undefined for "+i.toString());z.num,z=z.den,z==2?u=new r(0):z==3?(u=t.parse("1/sqrt(3)"),O=!0):z==4?(u=new r(1),O=!0):z==6?(u=t.parse("sqrt(3)"),O=!0):u=t.symfunction("cot",[i])}return u=u||t.symfunction("cot",[i]),!O||I!==2&&I!==4||u.negate(),u},acos:function(i){if(m0.PARSE2NUMBER){if(i.isConstant()){if(i.gt(1)||i.lt(-1)){var u=i.toString();return t0(u0(`pi/2-asin(${u})`))}return m0.USE_BIG?new r(p1.acos(i.multiplier.toDecimal())):new r(Math.acos(i.valueOf()))}if(i.isImaginary())return A0.evaluate(i,"acos")}return t.symfunction("acos",arguments)},asin:function(i){if(m0.PARSE2NUMBER){if(i.isConstant()){if(i.gt(1)||i.lt(-1)){var u=m0.IMAGINARY,O=i.multiplier.toDecimal();return t0(u0(`${u}*log(sqrt(1-${O}^2)-${u}*${O})`))}return m0.USE_BIG?new r(p1.asin(i.multiplier.toDecimal())):new r(Math.asin(i.valueOf()))}if(i.isImaginary())return A0.evaluate(i,"asin")}return t.symfunction("asin",arguments)},atan:function(i){var u;if(i.equals(0))u=new r(0);else{if(m0.PARSE2NUMBER)return i.isConstant()?m0.USE_BIG?new r(p1.atan(i.multiplier.toDecimal())):new r(Math.atan(i.valueOf())):i.isImaginary()?A0.evaluate(i,"atan"):t.symfunction("atan",arguments);u=i.equals(-1)?t.parse("-pi/4"):t.symfunction("atan",arguments)}return u},asec:function(i){if(m0.PARSE2NUMBER){if(i.equals(0))throw new v1("Input is out of the domain of sec!");if(i.isConstant())return Q.acos(i.invert());if(i.isImaginary())return A0.evaluate(i,"asec")}return t.symfunction("asec",arguments)},acsc:function(i){if(m0.PARSE2NUMBER){if(i.isConstant())return Q.asin(i.invert());if(i.isImaginary())return A0.evaluate(i,"acsc")}return t.symfunction("acsc",arguments)},acot:function(i){if(m0.PARSE2NUMBER){if(i.isConstant())return new t.add(t.parse("pi/2"),Q.atan(i).negate());if(i.isImaginary())return A0.evaluate(i,"acot")}return t.symfunction("acot",arguments)},atan2:function(i,u){if(i.equals(0)&&u.equals(0))throw new j0("atan2 is undefined for 0, 0");return m0.PARSE2NUMBER&&i.isConstant()&&u.isConstant()?new r(Math.atan2(i,u)):t.symfunction("atan2",arguments)}},Y0=this.trigh={cosh:function(i){if(m0.PARSE2NUMBER){if(i.isConstant())return new r(Math.cosh(i.valueOf()));if(i.isImaginary())return A0.evaluate(i,"cosh")}return t.symfunction("cosh",arguments)},sinh:function(i){if(m0.PARSE2NUMBER){if(i.isConstant())return new r(Math.sinh(i.valueOf()));if(i.isImaginary())return A0.evaluate(i,"sinh")}return t.symfunction("sinh",arguments)},tanh:function(i){if(m0.PARSE2NUMBER){if(i.isConstant())return new r(Math.tanh(i.valueOf()));if(i.isImaginary())return A0.evaluate(i,"tanh")}return t.symfunction("tanh",arguments)},sech:function(i){return m0.PARSE2NUMBER?i.isConstant()?new r(Math.sech(i.valueOf())):i.isImaginary()?A0.evaluate(i,"sech"):t.parse(o0("1/cosh({0})",i)):t.symfunction("sech",arguments)},csch:function(i){return m0.PARSE2NUMBER?i.isConstant()?new r(Math.csch(i.valueOf())):i.isImaginary()?A0.evaluate(i,"csch"):t.parse(o0("1/sinh({0})",i)):t.symfunction("csch",arguments)},coth:function(i){return m0.PARSE2NUMBER?i.isConstant()?new r(Math.coth(i.valueOf())):i.isImaginary()?A0.evaluate(i,"coth"):t.parse(o0("1/tanh({0})",i)):t.symfunction("coth",arguments)},acosh:function(i){return i=m0.PARSE2NUMBER&&i.isImaginary()?A0.evaluate(i,"acosh"):m0.PARSE2NUMBER?u0(t.parse(o0(m0.LOG+"(({0})+sqrt(({0})^2-1))",i.toString()))):t.symfunction("acosh",arguments),i},asinh:function(i){return i=m0.PARSE2NUMBER&&i.isImaginary()?A0.evaluate(i,"asinh"):m0.PARSE2NUMBER?u0(t.parse(o0(m0.LOG+"(({0})+sqrt(({0})^2+1))",i.toString()))):t.symfunction("asinh",arguments),i},atanh:function(i){return i=m0.PARSE2NUMBER&&i.isImaginary()?A0.evaluate(i,"atanh"):m0.PARSE2NUMBER?u0(t.parse(o0("(1/2)*"+m0.LOG+"((1+({0}))/(1-({0})))",i.toString()))):t.symfunction("atanh",arguments),i},asech:function(i){return i=m0.PARSE2NUMBER&&i.isImaginary()?A0.evaluate(i,"asech"):m0.PARSE2NUMBER?u0(d(t.add(i.clone().invert(),y1(t.subtract(t.pow(i,new r(-2)),new r(1)))))):t.symfunction("asech",arguments),i},acsch:function(i){return i=m0.PARSE2NUMBER&&i.isImaginary()?A0.evaluate(i,"acsch"):m0.PARSE2NUMBER?u0(t.parse(o0(m0.LOG+"((1+sqrt(1+({0})^2))/({0}))",i.toString()))):t.symfunction("acsch",arguments),i},acoth:function(i){return i=m0.PARSE2NUMBER&&i.isImaginary()?A0.evaluate(i,"acoth"):m0.PARSE2NUMBER?i.equals(1)?r.infinity():u0(t.divide(d(t.divide(t.add(i.clone(),new r(1)),t.subtract(i.clone(),new r(1)))),new r(2))):t.symfunction("acoth",arguments),i}},E0={"\\":{precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(i){return i}},"!!":{precedence:7,operator:"!!",action:"dfactorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(i){return t.symfunction(m0.DOUBLEFACTORIAL,[i])}},"!":{precedence:7,operator:"!",action:"factorial",prefix:!1,postfix:!0,leftAssoc:!0,operation:V1},"^":{precedence:6,operator:"^",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"**":{precedence:6,operator:"**",action:"pow",prefix:!1,postfix:!1,leftAssoc:!0},"%":{precedence:4,operator:"%",action:"percent",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:"mod",overloadLeftAssoc:!1,operation:function(i){return t.divide(i,new r(100))}},"*":{precedence:4,operator:"*",action:"multiply",prefix:!1,postfix:!1,leftAssoc:!1},"/":{precedence:4,operator:"/",action:"divide",prefix:!1,postfix:!1,leftAssoc:!1},"+":{precedence:3,operator:"+",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(i){return i}},plus:{precedence:3,operator:"plus",action:"add",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(i){return i}},"-":{precedence:3,operator:"-",action:"subtract",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(i){return i.negate()}},"=":{precedence:2,operator:"=",action:"equals",prefix:!1,postfix:!1,leftAssoc:!1},"==":{precedence:1,operator:"==",action:"eq",prefix:!1,postfix:!1,leftAssoc:!1},"<":{precedence:1,operator:"<",action:"lt",prefix:!1,postfix:!1,leftAssoc:!1},"<=":{precedence:1,operator:"<=",action:"lte",prefix:!1,postfix:!1,leftAssoc:!1},">":{precedence:1,operator:">",action:"gt",prefix:!1,postfix:!1,leftAssoc:!1},"=>":{precedence:1,operator:"=>",action:"gte",prefix:!1,postfix:!1,leftAssoc:!1},",":{precedence:0,operator:",",action:"comma",prefix:!1,postfix:!1,leftAssoc:!1},":":{precedence:0,operator:",",action:"assign",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:"slice"},":=":{precedence:0,operator:",",action:"function_assign",prefix:!1,postfix:!1,leftAssoc:!0}},U0={"(":{type:"round",id:1,is_open:!0,is_close:!1},")":{type:"round",id:2,is_open:!1,is_close:!0},"[":{type:"square",id:3,is_open:!0,is_close:!1,maps_to:"vector"},"]":{type:"square",id:4,is_open:!1,is_close:!0},"{":{type:"curly",id:5,is_open:!0,is_close:!1,maps_to:"Set"},"}":{type:"curly",id:6,is_open:!1,is_close:!0}},R1=this.functions={cos:[Q.cos,1],sin:[Q.sin,1],tan:[Q.tan,1],sec:[Q.sec,1],csc:[Q.csc,1],cot:[Q.cot,1],acos:[Q.acos,1],asin:[Q.asin,1],atan:[Q.atan,1],arccos:[Q.acos,1],arcsin:[Q.asin,1],arctan:[Q.atan,1],asec:[Q.asec,1],acsc:[Q.acsc,1],acot:[Q.acot,1],atan2:[Q.atan2,2],acoth:[Y0.acoth,1],asech:[Y0.asech,1],acsch:[Y0.acsch,1],sinh:[Y0.sinh,1],cosh:[Y0.cosh,1],tanh:[Y0.tanh,1],asinh:[Y0.asinh,1],sech:[Y0.sech,1],csch:[Y0.csch,1],coth:[Y0.coth,1],acosh:[Y0.acosh,1],atanh:[Y0.atanh,1],log10:[,1],exp:[function(i){return i.fname===m0.LOG&&i.isLinear()?t.pow(i.args[0],r.create(i.multiplier)):t.parse(o0("e^({0})",i))},1],radians:[function(i){return t.parse(o0("({0})*pi/180",i))},1],degrees:[function(i){return t.parse(o0("({0})*180/pi",i))},1],min:[function(){var i=[].slice.call(arguments);return g0(i)?i[0]:O0(i)?new r(Math.min.apply(null,i)):m0.SYMBOLIC_MIN_MAX&&M0(i)?l("min",i):t.symfunction("min",i)},-1],max:[function(){var i=[].slice.call(arguments);return g0(i)?i[0]:O0(i)?new r(Math.max.apply(null,i)):m0.SYMBOLIC_MIN_MAX&&M0(i)?l("max",i):t.symfunction("max",i)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(i){return m0.PARSE2NUMBER?i.isConstant()?new r(_1.sinc(i)):t.parse(o0("sin({0})/({0})",i)):t.symfunction("sinc",[i])},1],tri:[,1],sign:[function(i){return i.isConstant(!0)?new r(Math.sign(u0(i))):t.symfunction("sign",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[V1,1],factorial:[V1,1],continued_fraction:[function(i,u){return i=u0(i),i.isConstant()?(i=_1.continuedFraction(i,u),u=E.fromArray(i.fractions.map(function(O){return new r(O)})),E.fromArray([new r(i.sign),new r(i.whole),u])):t.symfunction("continued_fraction",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[N,[1,2]],scientific:[function(i,u){return i.scientific=u||10,i},[1,2]],mod:[X1,2],pfactor:[g2,1],vector:[function(){return new E([].slice.call(arguments))},-1],matrix:[function(){return m.fromArray(arguments)},-1],Set:[function(){return M.fromArray(arguments)},-1],imatrix:[function(i){return m.identity(i)},-1],parens:[function(i){return m0.PARSE2NUMBER?i:t.symfunction("parens",[i])},-1],sqrt:[y1,1],cbrt:[L1,1],nthroot:[O1,2],log:[d,[1,2]],expand:[function(i,u){return t0(i,u=u||{expand_denominator:!0,expand_functions:!0})},1],abs:[P,1],invert:[function(i){if(e0(i))return i.invert();y0("invert expects a matrix")},1],determinant:[function(i){return e0(i)?i.determinant():i},1],size:[function(i){var u;return e0(i)?u=[new r(i.cols()),new r(i.rows())]:B0(i)||i0(i)?u=new r(i.elements.length):y0("size expects a matrix or a vector"),u},1],transpose:[function(i){if(e0(i))return i.transpose();y0("function transpose expects a matrix")},1],dot:[function(i,u){if(B0(i)&&B0(u))return i.dot(u);y0("function dot expects 2 vectors")},2],cross:[function(i,u){if(B0(i)&&B0(u))return i.cross(u);y0("function cross expects 2 vectors")},2],vecget:[function(i,u){return u.isConstant()&&x(u)?i.elements[u]:t.symfunction("vecget",arguments)},2],vecset:[function(i,u,O){return u.isConstant?(i.elements[u]=O,i):t.symfunction("vecset",arguments)},3],vectrim:[function(i,u){return u=u===void 0?1e-14:u,i=i.clone(),u=Number(u),i.elements.sort(function(O,I){return I.group-O.group}),i.elements=T(i.elements,function(O,I){return Number(t.subtract(u0(O),u0(I)).abs())<=u}),i},[1,2]],matget:[function(i,u,O){return u.isConstant()&&O.isConstant()?i.elements[u][O]:t.symfunction("matget",arguments)},3],matset:[function(i,u,O,I){return i.elements[u][O]=I,i},4],matgetrow:[function(i,u){return u.isConstant()?new m(i.elements[u]):t.symfunction("matgetrow",arguments)},2],matsetrow:[function(i,u,O){if(!u.isConstant())return t.symfunction("matsetrow",arguments);if(i.elements[u].length!==O.elements.length)throw new o2("Matrix row must match row dimensions!");return i=i.clone(),i.elements[u]=O.clone().elements,i},3],matgetcol:[function(i,u){if(!u.isConstant())return t.symfunction("matgetcol",arguments);u=Number(u);var O=m.fromArray([]);return i.each(function(I,z,p0){p0===u&&O.elements.push([I.clone()])}),O},2],matsetcol:[function(i,u,O){if(!u.isConstant())return t.symfunction("matsetcol",arguments);if(u=Number(u),i.rows()!==O.elements.length)throw new o2("Matrix columns must match number of columns!");return O.each(function(I,z){i.set(z-1,u,I.elements[0].clone())}),i},3],rationalize:[N1,1],IF:[function(i,u,O){return typeof i!="boolean"&&H0(i)&&(i=!!Number(i)),i?u:O},3],is_in:[function(i,u){if(e0(i)){for(var O=0,I=i.rows();O<I;O++)for(var z=0,p0=i.cols();z<p0;z++)if(i.elements[O][z].equals(u))return new r(1)}else if(i.elements){for(O=0,I=i.elements.length;O<I;O++)if(i.elements[O].equals(u))return new r(1)}return new r(0)},2],realpart:[S2,1],imagpart:[s2,1],conjugate:[G1,1],arg:[e,1],polarform:[function(i){var u;return u=r.toPolarFormArray(i),i=u[1],u=u[0],i=t.parse(o0("e^({0}*({1}))",m0.IMAGINARY,i)),t.multiply(u,i)},1],rectform:[function(i){var u,O,I,z,p0,L0=i.clone();try{return u=l1(i,"e",!0),O=t.divide(u.x.power,r.imaginary()),I=u0(Q.tan(O)),t.pow(u.a,new r(2)),z=I.getDenom(!0),p0=I.getNum(),r.hyp(p0,z).equals(u.a)?t.add(z,t.multiply(r.imaginary(),p0)):L0}catch{return L0}},1],sort:[function(i,u){u=u?u.toString():"asc";var O=function(I){return I.group===k0?I.multiplier:I.group===f1?I.fname===""?O(I.args[0]):I.fname:I.group===Q0?I.power:I.value};return new E((B0(i)?i.elements:i.collectSymbols()).sort(function(I,z){return I=O(I),z=O(z),u==="desc"?z-I:I-z}))},[1,2]],integer_part:[,1],union:[function(i,u){return i.union(u)},2],contains:[function(i,u){return i.contains(u)},2],intersection:[function(i,u){return i.intersection(u)},2],difference:[function(i,u){return i.difference(u)},2],intersects:[function(i,u){return new r(Number(i.intersects(u)))},2],is_subset:[function(i,u){return new r(Number(i.is_subset(u)))},2],print:[function(){v0(arguments).map(function(i){console.log(i.toString())})},-1]};this.error=y0,this.override=function(i,u){s[i]||(s[i]=[]),s[i].push(this[i]),this[i]=u},this.restore=function(i){this[i]&&(this[i]=s[i].pop())},this.extend=function(i,u,O){var I,z=this;typeof this[i]=="function"&&typeof u=="function"&&(I=this[i],this[i]=function(p0,L0){return Y(p0)&&Y(L0)&&!O?I.call(z,p0,L0):u.call(z,p0,L0,I)})},this.symfunction=function(i,u){var O=new r(i);return O.group=f1,typeof u=="object"&&(u=[].slice.call(u)),O.args=u,O.fname=i===b?"":i,O.updateHash(),O},this.callfunction=function(i,u,O){var I=R1[i];I||y0("Nerdamer currently does not support the function "+i);var z,p0=I[1]||O,L0=I[0];u instanceof Array||(u=u!==void 0?[u]:[]),p0!==-1&&(z=(e1=u1(p0))?p0[0]:p0,O=e1?p0[1]:p0,p0=i+" requires a {0} of {1} arguments. {2} provided!",(e1=u.length)<z&&y0(o0(p0,"minimum",z,e1)),O<e1&&y0(o0(p0,"maximum",O,e1)));var e1=O0(u);return L0?L0.apply(I[2],u):(L0=function($0){for(var V0=m0.FUNCTION_MODULES,M1=V0.length,W0=0;W0<M1;W0++){var T1=V0[W0];if($0 in T1)return T1[$0]}y0("The function "+$0+" is undefined!")}(i),m0.PARSE2NUMBER&&e1?G(L0.apply(L0,u)):t.symfunction(i,u))},this.operator_filter_regex=(Y0="^\\"+Object.keys(E0).filter(function(i){if(i.length===1)return i}).join("\\"),new RegExp("(["+Y0+"])\\s+(["+Y0+"])")),this.setOperator=function(i,u,O){var I=i.operator;if(E0[I]=i,u&&(this[i.action]=u),t[I]=i.operation,i.action||i.prefix||i.postif||(i.action=I),O==="over"||O==="under"){var z,p0=i.precedence;for(z in E0){var L0=E0[z];(O==="over"?L0.precedence>=p0:L0.precedence>p0)&&L0.precedence++}}},this.getOperator=function(i){return E0[i]},this.aliasOperator=function(i,u){var O,I={},z=E0[i];for(O in z)I[O]=z[O];I.operator=u,this.setOperator(I)},this.getOperators=function(){return E0},this.getBrackets=function(){return U0};function t1(i){this.type=i.type,this.value=i.value,this.left=i.left,this.right=i.right}this.initConstants=function(){this.CONSTANTS={E:new r(m0.E),PI:new r(m0.PI)}},this.pretty_print=function(i){if(Array.isArray(i)){var u=i.map(O=>t.pretty_print(O)).join(", ");return i.type==="vector"?"vector<"+u+">":"("+u+")"}return i.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(i){if(m0.callPeekers)for(var u=this.peekers[i],O=v0(arguments).slice(1).map(q),I=0;I<u.length;I++)u[I].apply(null,O)},this.tokenize=function(i){for(var u in i=(i=String(i)).trim().replace(/\s+/g," "),U0){var O=new RegExp(U0[u].is_close?"\\s+\\"+u:"\\"+u+"\\s+","g");i=i.replace(O,u)}for(var I=0,z=i.length,p0=0,L0=[],e1=[L0],$0=e1[0],V0=0,M1=[],W0=!1,T1=function(B1,K1){var m2=[];B1!==void 0&&(m2.type=B1),m2.column=K1,e1.push(m2),$0.push(m2),$0=m2,V0++},w1=function(){e1.pop(),$0=e1[--V0]},a1=function(B1,K1){(K1=K1===void 0?i.substring(p0,B1):K1)in t.units?$0.push(new X(K1,X.UNIT,p0)):K1!==""&&$0.push(new X(K1,X.VARIABLE_OR_LITERAL,p0))},$1=function(B1){$0.push(new X(B1,X.FUNCTION,p0))},J1=function(B1){p0=B1+1};I<z;I++){var H1=i.charAt(I);if(H1 in E0){a1(I);var D1=$0[0]&&n0($0[0]);W0&&p0<I&&H1!==","&&!(D1&&H1==="*")&&(W0=!1,w1()),J1(I+1);var W1=function(K1){for(var m2=(K1=K1!==void 0?K1:I)+1;i.charAt(m2++)in E0;);return i.substring(K1,m2-1)}(I),I=(p0=p0+W1.length-2)-1;$0.push.apply($0,function(K1){for(var m2=I-K1.length,M2=[],J2=K1.charAt(0),w2=1,N2=K1.length;w2<N2;w2++)var P2=K1.charAt(w2),$2=J2+P2,J2=$2 in E0?$2:(M2.push(new X(J2,X.OPERATOR,m2+w2)),P2);return M2.push(new X(J2,X.OPERATOR,m2+w2)),M2}(W1))}else if(H1 in U0){var t2,Z1=U0[H1];if(Z1.is_open)M1.push([Z1,p0]),(t2=i.substring(p0,I))in R1?$1(t2):t2!==""&&$0.push(new X(t2,X.VARIABLE_OR_LITERAL,p0)),T1(Z1.maps_to,I);else if(Z1.is_close){var s1=M1.pop();if(!s1)throw new Q1("Missing open bracket for bracket at: "+(I+1));if(s1[0].id!==Z1.id-1)throw new Q1("Parity error");a1(I),w1()}J1(I)}else H1===" "&&(s1=i.substring(p0,I),Z1=i.charAt(I+1),W0?(s1 in E0?$0.push(new X(s1,X.OPERATOR,I)):(a1(void 0,s1),w1(),((H1=Z1 in E0)&&E0[Z1].value==="-"||!H1)&&$0.push(new X("*",X.OPERATOR,I))),W0=!1):(t2=i.substring(p0,I))in R1?(W0=!0,$1(t2),T1()):t2 in E0?$0.push(new X(t2,X.OPERATOR,I)):(a1(void 0,t2),Z1=i.charAt(I+1),s1===""||Z1===""||s1 in E0||Z1 in E0||$0.push(new X("*",X.OPERATOR,I))),J1(I))}if(M1.length){var Y1=M1.pop();throw new Q1("Missing closed bracket for bracket at "+(Y1[1]+1))}return a1(I),L0},this.toRPN=function(i){for(var u=i.type,O=i.length,I=[],z=[],p0=[],L0=function($1,J1){for(;$1.length;)J1.push($1.pop())},e1=0;e1<O;e1++){var $0=i[e1];if($0.type!==X.OPERATOR)break;if(!$0.prefix)throw new e2("Not a prefix operator");$0.is_prefix=!0,z.push($0)}for(;e1<O;e1++){var V0=i[e1];if(V0.type===X.OPERATOR){var M1=V0;for(M1.overloaded&&(w1=i[e1+1])&&w1.type===X.VARIABLE_OR_LITERAL&&(M1.postfix=!1,M1.action=M1.overloadAction,M1.leftAssoc=M1.overloadLeftAssoc);z.length;){var W0=z[z.length-1];if(!(W0.precedence>M1.precedence||!M1.leftAssoc&&W0.precedence===M1.precedence))break;I.push(z.pop())}if((u==="vector"||u==="set")&&"vectorFn"in M1&&(M1.action=M1.vectorFn),M1.postfix){var T1=i[e1-1];if(!T1)throw new e2("Unexpected prefix operator '"+V0.value+"'! at "+V0.column);if(T1.type===X.OPERATOR&&!T1.postfix)throw new e2("Unexpected prefix operator '"+T1.value+"'! at "+T1.column)}else do{var w1,a1=!!(w1=i[e1+1])&&w1.type===X.OPERATOR;if(a1){if(!w1.prefix)throw new e2("A prefix operator was expected at "+w1.column);w1.is_prefix=!0,p0.push(w1),e1++}}while(a1);for((M1.is_prefix?p0:z).push(M1);p0.length&&(M1.leftAssoc||!M1.leftAssoc&&p0[p0.length-1].precedence>=M1.precedence);)z.push(p0.pop())}else V0.type===X.VARIABLE_OR_LITERAL?(I.length===0&&L0(p0,z),I.push(V0),(T1=z[z.length-1])&&T1.leftAssoc||L0(p0,I)):V0.type===X.FUNCTION?z.push(V0):V0.type===X.UNIT&&I.push(V0);Array.isArray(V0)&&(I.push(this.toRPN(V0)),V0.type&&I.push(new X(V0.type,X.FUNCTION,V0.column)))}return L0(z,I),L0(p0,I),I},this.parseRPN=function(i,u){try{for(var O in u=u||{})u[O]=t.parse(u[O],{});m0.PARSE2NUMBER&&("e"in u||(u.e=new r(m0.E)),"pi"in u||(u.pi=new r(m0.PI)));for(var I=[],z=0,p0=i.length;z<p0;z++){var L0=i[z];if(L0=Array.isArray(L0)?this.parseRPN(L0,u):L0)if(L0.type===X.OPERATOR)if(L0.is_prefix||L0.postfix)I.push(L0.operation(I.pop()));else{var e1=I.pop(),$0=I.pop();if($0===void 0)throw new e2(L0+" is not a valid postfix operator at "+L0.column);var V0=L0.action==="comma";$0 instanceof M&&!V0&&($0=E.fromSet($0)),e1 instanceof M&&!V0&&(e1=E.fromSet(e1)),this.callPeekers("pre_operator",$0,e1,L0);var M1=t[L0.action]($0,e1);this.callPeekers("post_operator",M1,$0,e1,L0),I.push(M1)}else if(L0.type===X.FUNCTION){var W0=I.pop(),T1=W0.parent;W0 instanceof L||(W0=L.create(W0));var w1=L0.value,a1=W0.getItems();this.callPeekers("pre_function",w1,a1);var $1=t.callfunction(w1,a1);this.callPeekers("post_function",$1,w1,a1);var J1=I[I.length-1],H1=i[z+1];if(!(H1&&H1.type===X.OPERATOR&&H1.value===",")&&$1 instanceof E&&J1&&J1.elements&&!(J1 instanceof L)){var D1=I.pop(),W1=$1.elements[0];if(W1.isConstant())if(W1 instanceof y)I.push(E.fromArray(D1.elements.slice(W1.start,W1.end)));else{var t2=Number(W1),Z1=D1.elements.length;if((t2=t2<0?Z1+t2:t2)<0||Z1<=t2)throw new j1("Index out of range "+(L0.column+1));var s1=D1.elements[t2];D1.getter=t2,s1.parent=D1,I.push(s1)}else D1.getter=W1,I.push(D1),I.push($1)}else T1&&($1.parent=T1),I.push($1)}else{var Y1,B1=L0.value;B1 in m0.ALIASES?L0=t.parse(m0.ALIASES[L0]):L0.type===X.VARIABLE_OR_LITERAL?L0=new r(B1):L0.type===X.UNIT&&((L0=new r(B1)).isUnit=!0),B1 in t.CONSTANTS?(Y1=L0,L0=new r(t.CONSTANTS[B1])):B1 in u&&B1!==u[B1].toString()?(Y1=L0,L0=u[B1].clone()):B1 in K&&(Y1=L0,L0=K[B1].clone()),Y1&&(L0.subbed=Y1),I.push(L0)}}var K1=I[0];if(["undefined","string","number"].indexOf(typeof K1)!==-1)throw new q2("Unexpected token!");return K1}catch(m2){throw[v1].forEach(function(M2){if(m2 instanceof M2)throw new M2(m2.message+": "+L0.column)}),new d1(m2.message+": "+L0.column)}},t1.prototype.toString=function(){var i=this.left?this.left.toString()+"---":"",u=this.right?"---"+this.right.toString():"";return i+"("+this.value+")"+u},t1.prototype.toHTML=function(i,u){i=i||0,u=u===void 0?4:u;function O(L0){return" ".repeat(u*L0)}var p0="",I=this.left?O(i+1)+`<li>
`+this.left.toHTML(i+2,u)+O(i+1)+`</li> 
`:"",z=this.right?O(i+1)+`<li>
`+this.right.toHTML(i+2,u)+O(i+1)+`</li>
`:"",p0=O(i)+'<div class="'+this.type.toLowerCase()+'"><span>'+this.value+"</span></div>"+O(i)+`
`;return(I||z)&&(p0+=O(i)+`<ul>
`+I+z+O(i)+`</ul>
`),p0+=""},this.tree=function(i){for(var u=[],O=0;O<i.length;O++){var I=i[O];if(Array.isArray(I))I=this.tree(I),u.push(I);else if(I.type===X.OPERATOR)I.is_prefix||I.postfix?(p0=I.is_prefix?"left":"right",z=u.pop(),(I=new t1(I))[p0]=z):((I=new t1(I)).right=u.pop(),I.left=u.pop()),u.push(I);else if(I.type===X.FUNCTION){I=new t1(I);var z,p0=u.pop();if(I.right=p0,I.value==="object"&&(z=u[u.length-1])){for(;z.right;)z=z.right;z.right=I;continue}u.push(I)}else u.push(new t1(I))}return u[0]},this.parse=function(i,u){return i=function(O){O=String(O);for(var I=0;I<h.actions.length;I++)O=h.actions[I].call(this,O);for(O=O.replace(/\s+/g," "),O=(O=/e/gi.test(O)?O.replace(/\-*\d+\.*\d*e\+?\-?\d+/gi,function(z){return x1(z)}):O).replace(m0.IMPLIED_MULTIPLICATION_REGEX,function(){var z=arguments[4],p0=arguments[1],L0=arguments[2],e1=arguments[3],$0="",V0="*";return p0+(V0=($0=z.charAt(e1).match(/[\+\-\/\*]/)?$0:z.charAt(e1-1)).match(/[a-z]/i)?"":V0)+L0}).replace(/([a-z0-9_]+)/gi,function(z,p0){return!(m0.USE_MULTICHARACTER_VARS!==!1||p0 in R1)&&isNaN(p0)?p0.split("").join("*"):p0}).replace(/\)\(/g,")*(")||"0";O!==(O=O.replace(/([a-z0-9_]+)(\()|(\))([a-z0-9]+)/gi,function(z,p0,L0,e1,$0){return e1=p0||e1,$0=L0||$0,e1 in R1?e1+$0:e1+"*"+$0})););return O}(i),u=u||{},i=this.tokenize(i),i=this.toRPN(i),this.parseRPN(i,u)},this.toObject=function(i){var u=function(O){for(var I=[],z=0,p0=O.length;z<p0;z++){var L0,e1=O[z],$0=e1.value;e1.type===X.VARIABLE_OR_LITERAL?I.push(new r($0)):e1.type===X.FUNCTION?(z++,(L0=t.symfunction($0,u(O[z]))).isConversion=!0,I.push(L0)):e1.type===X.OPERATOR?I.push($0):I.push(u(e1))}return I};return u(t.tokenize(i))};function S1(i){for(var u=0,O=[[]],I=0,z=i.length;I<z;I++)i[I]===","?O[++u]=[]:O[u].push(i[I]);return O}function x0(i){return i.replace(/^\\left\((.+)\\right\)$/g,function(u,O){return O||u})}function P(i){if(i.isInfinity)return r.infinity();if(i.multiplier.lessThan(0)&&i.multiplier.negate(),i.isImaginary()){var u=i.realpart(),O=i.imagpart();if(u.isConstant()&&O.isConstant())return y1(t.add(t.pow(u,new r(2)),t.pow(O,new r(2))))}else if(H0(i)||i1(i.power))return i;var I;return i.isComposite()&&(I=[],i.each(function(z){I.push(z.multiplier)}),_1.QGCD.apply(null,I).lessThan(0)&&(i.multiplier=i.multiplier.multiply(new g1(-1)),i.distributeMultiplier())),O=t.parse(i.multiplier),i.toUnitMultiplier(),t.multiply(O,t.symfunction(w,[i]))}function V1(i){if(B0(i)){var u=new E;return i.each(function(L0,e1){u.set(e1-1,V1(L0))}),u}if(e0(i)){var O=new m;return i.each(function(L0,e1,$0){O.set(e1,$0,V1(L0))}),O}if(m0.PARSE2NUMBER&&i.isConstant())return G(x(i)?_1.bigfactorial(i):_1.gamma(i.multiplier.add(new g1(1)).toDecimal()));if(i.isConstant()&&i.getDenom().equals(2)){var I,z=i.getNum(),p0=i.multiplier.isNegative()?(p0=t.subtract(z.negate(),new r(1)).multiplier.divide(new g1(2)),I=t.pow(new r(-4),new r(p0)).multiplier.multiply(_1.bigfactorial(p0)),_1.bigfactorial(new g1(2).multiply(p0))):(p0=t.add(z,new r(1)).multiplier.divide(new g1(2)),I=_1.bigfactorial(new g1(2).multiply(p0)),t.pow(new r(4),new r(p0)).multiplier.multiply(_1.bigfactorial(p0))),p0=I.divide(p0);return t.multiply(t.parse("sqrt(pi)"),new r(p0))}return t.symfunction(S,[i])}function X1(i,u){if(i.isConstant()&&u.isConstant()){var O=new r(1);return O.multiplier=O.multiplier.multiply(i.multiplier.mod(u.multiplier)),O}return O=t.divide(i.clone(),u.clone()),x(O)?new r(0):t.symfunction("mod",[i,u])}function N1(i){if(i.isComposite()){var u,O,I,z,p0=new r(0);return i.each(function(L0){I=L0.getNum(),z=L0.getDenom(),O=p0.getNum(),u=p0.getDenom(),O=t.multiply(z,O),I=t.multiply(I,u),I=t.expand(t.add(O,I)),z=t.multiply(u,z),p0=t.divide(I,z)},!0),p0}return i}function y1(i){if((i=Y(i)?i:t.parse(i)).group===A1)return t.symfunction(A,[i]);var u=(i=i.fname===""&&i.power.equals(1)?i.args[0]:i).multiplier.sign()<0;if(m0.PARSE2NUMBER){if(i.isConstant()&&!u)return new r(p1.sqrt(i.multiplier.toDecimal()));if(i.isImaginary())return A0.sqrt(i);if(i.group===Q0)return t.symfunction("sqrt",[i])}var O,I=i.isConstant();if(i.group===z0&&i.isLinear()){var z=y1(r(i.multiplier));for(L0 in i.symbols){var p0=i.symbols[L0];z=t.multiply(z,y1(p0))}V0=z}else if(i.fname===A){var L0=i.args[0],$0=i.multiplier;L0.setPower(i.power.multiply(new g1(.25))),V0=L0,$0.equals(1)||(V0=t.multiply(y1(t.parse($0)),V0))}else if(i.power.isInteger())if(i.multiplier<0&&i.group===Q0)var e1=t.parse(i.multiplier).negate(),$0=t.parse(i).toUnitMultiplier().negate(),V0=t.multiply(t.symfunction(m0.SQRT,[$0]),y1(e1));else{e1=i.power.sign(),i.power=i.power.abs(),I&&i.multiplier.lessThan(0)&&(O=r.imaginary(),i.multiplier=i.multiplier.abs());var M1=i.multiplier.toDecimal(),I=Math.abs(M1),I=Math.sqrt(I);if(x(I))z=new r(I);else if(x(M1)){var W0=_1.ifactor(M1),T1=1;for(p0 in W0){var w1,a1=($1=W0[p0])-$1%2;a1&&(w1=Math.pow(p0,a1),T1*=Math.pow(p0,a1/2),M1/=w1)}z=t.multiply(t.symfunction(A,[new r(M1)]),new r(T1))}else{for(var $1,J1=[new r(i.multiplier.num),new r(i.multiplier.den)],H1=[new r(1),new r(1)],D1=[new r(1),new r(1)],W1=0;W1<2;W1++)g2($1=J1[W1]).each(function(B1){var s1=(B1=r.unwrapPARENS(B1)).clone().toLinear(),Y1=Number(B1.power),B1=Y1%2;H1[W1]=t.multiply(H1[W1],t.pow(s1,new r((Y1-B1)/2))),D1[W1]=t.multiply(D1[W1],y1(t.pow(s1,new r(B1))))});z=t.divide(t.multiply(H1[0],D1[0]),t.multiply(H1[1],D1[1]))}V0=(i=i.toUnitMultiplier(!0)).isOne()?i:i1(i.power.toString())?t.pow(i.clone(),new r(.5)):t.symfunction(A,[i]),e1<0&&V0.power.negate(),z&&(V0=t.multiply(z,V0)),O&&(V0=t.multiply(O,V0))}else i.setPower(i.power.multiply(new g1(.5))),V0=i;return u&&m0.PARSE2NUMBER?t.parse(V0):V0}function L1(z){if(z.isConstant(!0))return O1(z,new r(3));var u,O=z.power/3,I=t.pow(t.parse(z.multiplier),new r(1/3)),z=z.toUnitMultiplier();return x(O)?u=t.pow(z.toLinear(),t.parse(O)):z.group===z0?(u=new r(1),z.each(function(p0){u=t.multiply(u,L1(p0))})):u=t.symfunction("cbrt",[z]),t.multiply(I,u)}function O1(i,u,O,I){if((u=u0(t.parse(u))).equals(0))throw new j0("Unable to calculate nthroots of zero");if(i<0&&i1(u))throw new Error("Cannot calculate nthroot of negative number for even powers");if(!i.isConstant(!0))return t.symfunction("nthroot",arguments);I===void 0&&(I=!0),O=O||25;var z=(i=i.group!==k0?u0(i):i).sign();if(z<0&&(i=P(i)),x(i)&&u.isConstant()){var p0,u=i<18446744073709552e3?g1.create(Math.pow(i,1/u)):_1.nthroot(i,u);return I&&(p0=new r(u)),p0=new r(u.toDecimal(O)),t.multiply(new r(z),p0)}}function g2(i){if(i.greaterThan(9999999999998891e26)||i.equals(-1))return i;if(i.equals(Math.PI))return new r(Math.PI);if((i=u0(i.clone())).isConstant()){var u=new r(1),O=i.toString();if(x(O)){var I,z=_1.ifactor(O);for(I in z)var p0=z[I],u=t.multiply(u,t.symfunction("parens",[new r(I).setPower(new g1(p0))]))}else O=g2(new r(i.multiplier.num)),i=g2(new r(i.multiplier.den)),u=t.multiply(t.symfunction("parens",[O]),t.symfunction("parens",[i]).invert())}else u=t.symfunction("pfactor",arguments);return u}function S2(i){return i.realpart()}function s2(i){return i.imagpart()}function G1(O){var u=O.realpart(),O=O.imagpart();return t.add(u,t.multiply(O.negate(),r.imaginary()))}function e(O){var u=O.realpart(),O=O.imagpart();return u.isConstant()&&O.isConstant()?O.equals(0)&&u.equals(-1)?t.parse("pi"):O.equals(1)&&u.equals(0)?t.parse("pi/2"):O.equals(1)&&u.equals(1)?t.parse("pi/4"):new r(Math.atan2(O,u)):t.symfunction("atan2",[O,u])}function l(i,u){var O,I;for(u.map(function(z){z.numVal=u0(z).multiplier});;){if((I=u.length)<2)return u[0];O=u.pop(),I=u[I-2],(i==="min"?O.numVal<I.numVal:O.numVal>I.numVal)&&(u.pop(),u.push(O))}}function d(i,u){if(i.equals(1))return new r(0);var O,I,z;if(i.fname===A&&i.multiplier.equals(1))return O=t.divide(d(i.args[0]),new r(2)),i.power.sign()<0&&O.negate(),O;if(i.equals(0))throw new j0(m0.LOG+"(0) is undefined!");return i.isImaginary()?A0.evaluate(i,m0.LOG):(i.isConstant()&&u!==void 0&&u.isConstant()?O=new r(Math.log(i)/Math.log(u)):i.group===A1&&i.power.multiplier.lessThan(0)||i.power.toString()==="-1"?(i.power.negate(),O=d(i).negate()):i.value==="e"&&i.multiplier.equals(1)?(u=i.power,O=Y(u)?u:new r(u)):i.group===f1&&i.fname==="exp"?(z=i.args[0],O=i.multiplier.equals(1)?t.multiply(z,new r(i.power)):t.symfunction(m0.LOG,[i])):m0.PARSE2NUMBER&&H0(i)?((i=t.parse(i)).multiplier.lessThan(0)&&(i.negate(),I=t.multiply(new r(Math.PI),new r("i"))),O=new r(Math.log(i.multiplier.toDecimal())),I&&(O=t.add(O,I))):(i.power.equals(1)||i.contains("e")||(z=i.group===A1?i.power:new r(i.power),i.toLinear()),O=1<arguments.length&&g0(arguments)?new r(1):t.symfunction(m0.LOG,arguments),z&&(O=t.multiply(z,O))),O)}function N(i,u){var O=u&&u.isConstant()||u===void 0;if(i.isConstant()&&O){var I,O=i;return u&&u.lessThan(0)&&(u=P(u),O=(I=Number(i).toExponential().toString().split("e"))[0],I=I[1]),u=new r(Z0(O,Number(u||0))),t.multiply(u,t.pow(new r(10),new r(I||0)))}return t.symfunction("round",arguments)}function _(i){return i%=2,0<=(i=i<0?2+i:i)&&i<=.5?1:.5<i&&i<=1?2:1<i&&i<=1.5?3:4}function G(i){if(!isFinite(i)){var u=Math.sign(i),O=new r(String(Math.abs(i)));return O.multiplier=O.multiplier.multiply(new g1(u)),O}if(Y(i))return i;if(typeof i=="number")try{i=g1.simple(i)}catch{i=new g1(i)}return O=new r(0),O.multiplier=i,O}function t0(i,u){if(Array.isArray(i))return i.map(function(w1){return t0(w1,u)});if(u=u||{},i.group===f1&&i.fname===""){var O=t0(i.args[0],u),I=t0(t.pow(O,t.parse(i.power)),u);return t.multiply(t.parse(i.multiplier),I).distributeMultiplier()}if([k0,l0,Q0].indexOf(i.group)!==-1)return i;I=i.clone();try{var z,p0,L0,e1=i.multiplier.toString(),$0=Number(i.power),V0=i;if(i.isComposite()&&x(i.power)&&0<i.power){var M1=$0-1,O=new r(0);i.each(function(a1){O=t.add(O,t0(t.parse(a1),u))});for(var W0=t.parse(O),T1=0;T1<M1;T1++)W0=P0(W0,O,u);V0=t.multiply(t.parse(e1),W0).distributeMultiplier()}else i.group===f1&&u.expand_functions===!0?(z=[],i.args.forEach(function(w1){z.push(t0(w1,u))}),V0=t.pow(t.symfunction(i.fname,z),t.parse(i.power)),V0=t.multiply(V0,t.parse(i.multiplier))):i.isComposite()&&x(i.power)&&i.power<0&&u.expand_denominator===!0?(i=i.invert(),(V0=t0(i,u)).invert()):i.group===z0?(p0=function(w1){switch(w1.group){case d0:return 0;case h1:return 1;case z0:return 2;case f1:return 3;default:return 4}},L0=i.collectSymbols().sort(function(w1,a1){return p0(a1)-p0(w1)}).map(function(w1){return t0(t.pow(w1,t.parse($0)),u)}),O=L0.pop(),(V0=O.isComposite()&&O.isLinear()?(L0.forEach(function(w1){O=P0(O,w1,u)}),O.isComposite()?(1<O.power&&(O=t0(t.pow(O,t.parse(O.power)),u)),t.multiply(t.parse(e1),O).distributeMultiplier()):O):(V0=O,L0.forEach(function(w1){V0=t.multiply(V0,w1)}),t.multiply(V0,t.parse(e1)).distributeMultiplier())).group===z0&&(V0=t.parse(V0))):V0=i;return V0}catch{return I}return I}function q0(O){if(Y(O.power)||!O.power.absEquals(.5))return O;var u=O.power.sign(),O=y1(O.group===l0?new r(O.value):O.toLinear());return u<0&&O.invert(),O}this.toTeX=function(i,u){var O=(u=u||{}).decimals===!0?"decimals":void 0,p0=typeof i=="string"?this.toObject(i):i,I=[],z=u.cdot===void 0?"\\cdot":u.cdot,p0=function(Z1){for(var s1=[];Z1.length;){var Y1,B1,K1=Z1.shift(),m2=Z1[0],M2=u1(m2),w2=m2==="-";K1==="^"&&(m2==="+"?Z1.shift():M2&&m2[0]==="+"&&m2.shift(),M2&&m2.length===1&&Z1.unshift(Z1.shift()[0])),K1==="^"&&(M2&&m2[0]==="-"||w2)?(Y1=s1.pop(),B1="1",(w2=s1[s1.length-1])==="*"?(s1.pop(),B1=s1.pop()):u1(w2)&&(B1=s1.pop()),s1.push(B1,"/",Y1,K1),(M2?m2:Z1).shift(),M2&&m2.length===1&&s1.push(Z1.shift()[0])):s1.push(K1)}return s1}(p0);if(u1(p0)){for(var L0,e1,$0=[],V0=0;V0<p0.length;V0++)L0=p0[V0],p0[V0+1]==="^"?(e1=p0[V0+2],$0.push(f.braces(this.toTeX([L0]))+"^"+f.braces(this.toTeX([e1]))),V0+=2):$0.push(L0);p0=$0}for(var V0=0,M1=p0.length;V0<M1;V0++){var W0=p0[V0];if(Y(W0=W0==="*"?z:W0))if(W0.group===f1){var T1,w1=W0.fname;if(w1===A)$1="\\sqrt"+f.braces(this.toTeX(W0.args));else if(w1===w)$1=f.brackets(this.toTeX(W0.args),"abs");else if(w1===b)$1=f.brackets(this.toTeX(W0.args),"parens");else if(w1===m0.LOG10)$1="\\"+m0.LOG10_LATEX+"\\left( "+this.toTeX(W0.args)+"\\right)";else if(w1==="integrate")var a1=S1(W0.args),$1="\\int "+(J1=f.braces(this.toTeX(a1[0])))+"\\, d"+(H1=this.toTeX(a1[1]));else if(w1==="defint"){var a1=S1(W0.args),J1=f.braces(this.toTeX(a1[0])),H1=this.toTeX(a1[3]);$1="\\int\\limits_{"+this.toTeX(a1[1])+"}^{"+this.toTeX(a1[2])+"} "+J1+"\\, d"+H1}else if(w1==="diff"){if(a1=S1(W0.args),H1="",J1=f.braces(this.toTeX(a1[0])),a1.length===1){for(var D1=[],W1=0;W1<a1[0].length;W1++)a1[0][W1].group===3&&D1.push(a1[0][W1].value);D1.sort(),H1=0<D1.length?"\\frac{d}{d "+D1[0]+"}":"\\frac{d}{d x}"}else H1=a1.length===2?"\\frac{d}{d "+a1[1]+"}":"\\frac{d^{"+a1[2]+"}}{d "+this.toTeX(a1[1])+"^{"+a1[2]+"}}";$1=H1+"\\left("+J1+"\\right)"}else if(w1==="sum"||w1==="product"){var t2=[[],[],[],[]],W1=0;for(V0=0;V0<W0.args.length;V0++)W0.args[V0]!==","?t2[W1].push(W0.args[V0]):W1++;$1=(w1==="sum"?"\\sum_":"\\prod_")+f.braces(this.toTeX(t2[1])+" = "+this.toTeX(t2[2])),$1+="^"+f.braces(this.toTeX(t2[3]))+f.braces(this.toTeX(t2[0]))}else $1=w1==="limit"?(T1=S1(W0.args).map(function(s1){return Array.isArray(s1)?t.toTeX(s1.join("")):t.toTeX(String(s1))}),"\\lim_"+f.braces(T1[1]+"\\to "+T1[2])+" "+f.braces(T1[0])):w1===S||w1===C?this.toTeX(W0.args)+(w1===S?"!":"!!"):f.latex(W0,O);I.push($1)}else I.push(f.latex(W0,O));else u1(W0)?I.push(f.brackets(this.toTeX(W0))):W0==="/"?I.push(f.frac(x0(I.pop()),x0(this.toTeX([p0[++V0]])))):I.push(W0)}return I.join(" ")},this.expand=t0,this.round=N,this.clean=function i(u){var O,I,z,p0,L0,e1,$0,V0=u.group;return V0===d0?(I=u.getNum(),z=u.getDenom()||new r(1),p0=Number(u.power),L0=new r(1),Math.abs(p0)===1&&(z.each(function(M1){M1.group===z0?L0=t.multiply(L0,i(M1.getDenom())):M1.power.lessThan(0)&&(L0=t.multiply(L0,i(M1.clone().toUnitMultiplier())))}),e1=new r(0),z.each(function(M1){e1=t.add(t.divide(M1,L0.clone()),e1)}),L0.invert(),I.isComposite()?($0=new r(0),I.each(function(M1){$0=t.add(t.multiply(i(M1),L0.clone()),$0)})):$0=t.multiply(L0,I),O=t.divide($0,e1))):V0===z0?(O=new r(1),u.each(function(M1){O=t.multiply(O,t.clean(M1))})):V0===f1&&u.args.length===1&&u.args[0].isConstant()&&(O=f0("PARSE2NUMBER",function(){return t.parse(u)},!0)),O=O||u},this.sqrt=y1,this.cbrt=L1,this.abs=P,this.log=d,this.rationalize=N1,this.nthroot=O1,this.arg=e,this.conjugate=G1,this.imagpart=s2,this.realpart=S2,this.getFunction=function(i){return R1[i][0]},this.addPreprocessor=function(i,u,O,I){var z=h.names,p0=h.actions;if(typeof u!="function")throw new PreprocessorError("Incorrect parameters. Function expected!");O?I?(z.splice(O,0,i),p0.splice(O,0,u)):(z[O]=i,p0[O]=u):(z.push(i),p0.push(u))},this.getPreprocessors=function(){for(var i={},u=0,O=i.names.length;u<O;u++)i[i.names[u]]={order:u,action:i.actions[u]};return i},this.removePreprocessor=function(i,u){i=h.names.indexOf(i),u?(H(h.names,i),H(h.actions,i)):(h.names[i]=void 0,h.actions[i]=void 0)},this.mapped_function=function(){for(var i={},u=this.params,O=0;O<u.length;O++)i[u[O]]=String(arguments[O]);return t.parse(this.body,i)},this.add=function(i,u){var O=Y(i),I=Y(u);if(O&&I){if(i.unit||u.unit)return t.Unit.add(i,u);if(i.isInfinity||u.isInfinity){var M1=i.multiplier.lessThan(0),W0=u.multiplier.lessThan(0);if(i.isInfinity&&u.isInfinity&&M1!==W0)throw new j0("("+i+")+("+u+") is not defined!");var T1=r.infinity();return W0&&T1.negate(),T1}if(i.isComposite()&&i.isLinear()&&u.isComposite()&&u.isLinear()&&(i.distributeMultiplier(),u.distributeMultiplier(),u.length>i.length&&i.group===u.group&&([i,u]=[u,i])),i.multiplier.equals(0))return u;if(u.multiplier.equals(0))return i;if(i.isConstant()&&u.isConstant()&&m0.PARSE2NUMBER)return $0=new r(i.multiplier.add(u.multiplier).toDecimal(m0.PRECISION));var z=i.group,p0=u.group,$1=i.power.toString(),a1=u.power.toString();if(z<p0||z===p0&&a1<$1&&0<a1)return this.add(u,i);z===z0&&p0===h1&&i.value===u.value&&(D1=i,z=(i=u).group,p0=(u=D1).group,$1=i.power.toString(),a1=u.power.toString());var L0,e1,$0,V0=$1===a1,M1=i.value,W0=u.value,T1=i.isComposite(),$1=u.isComposite();if(T1&&(L0=r2(i,"hash")),$1&&(e1=r2(u,"hash")),z===d0&&p0===d0&&u.isLinear()&&!i.isLinear()&&L0!==e1)return this.add(u,i);z===h1&&p0===h1&&(M1=L0,W0=e1);var w1,a1=z===l0&&p0===k0,$1=i.value===u.multiplier.toString(),$1=M1===W0||L0===e1&&L0!==void 0||a1&&$1;if($1&&V0&&z===p0)if(a1&&(u=u.convert(l0)),z!==h1||p0!==Q0&&p0!==l0)if(($0=i).multiplier.isOne()&&u.multiplier.isOne()&&z===d0&&i.isLinear()&&u.isLinear())for(var J1 in u.symbols){var H1=u.symbols[J1];$0.attach(H1)}else $0.multiplier=$0.multiplier.add(u.multiplier);else i.distributeMultiplier(),$0=i.attach(u);else if($1&&z!==h1)z===d0&&p0===h1?(u.insert(i,"add"),$0=u):($0=r.shell(h1).attach([i,u])).value=z===h1?L0:M1;else if(T1&&i.isLinear())if(M1=z===p0,T1=z===h1&&p0===h1,T1&&(M1=i.value===u.value),i.distributeMultiplier(),u.isComposite()&&u.isLinear()&&M1){for(var J1 in u.distributeMultiplier(),u.symbols)H1=u.symbols[J1],i.attach(H1);$0=i}else T1&&i.value!==e1||z===h1&&!$1?($0=r.shell(d0).attach([i,u])).updateHash():$0=i.attach(u);else z===f1&&i.fname===A&&p0!==A1&&u.power.equals(.5)&&(w1=u.multiplier.clone(),(u=y1(u.toUnitMultiplier().toLinear())).multiplier=w1),i.length===2&&u.length===2&&i1(i.power)&&i1(u.power)?$0=t.add(t0(i),t0(u)):($0=r.shell(d0).attach([i,u])).updateHash();return($0=$0.multiplier.equals(0)?new r(0):$0).length===1&&(w1=$0.multiplier,($0=D0($0.symbols)).multiplier=$0.multiplier.multiply(w1)),$0}I&&!O&&(D1=i,i=u,u=D1,D1=I,I=O,O=D1);var D1=e0(u);if(O&&D1){var W1=new m;u.eachElement(function(Z1,s1,Y1){W1.set(s1,Y1,t.add(i.clone(),Z1))}),u=W1}else if(e0(i)&&D1)u=i.add(u);else if(O&&B0(u))u.each(function(Z1,s1){u.elements[--s1]=t.add(i.clone(),u.elements[s1])});else if(B0(i)&&B0(u))u.each(function(Z1,s1){u.elements[--s1]=t.add(i.elements[s1],u.elements[s1])});else{if(B0(i)&&e0(u))return t.add(u,i);if(e0(i)&&B0(u)){if(u.elements.length===i.rows()){var W1=new m,t2=i.cols();return u.each(function(s1,Y1){for(var B1=[],K1=0;K1<t2;K1++)B1.push(t.add(i.elements[Y1-1][K1].clone(),s1.clone()));W1.elements.push(B1)}),W1}y0("Dimensions must match!")}}return u},this.subtract=function(i,u){var O=Y(i),I=Y(u);if(O&&I)return i.unit||u.unit?t.Unit.subtract(i,u):this.add(i,u.negate());if(I&&B0(i))u=i.map(function(L0){return t.subtract(L0,u.clone())});else if(O&&B0(u))u=u.map(function(L0){return t.subtract(i.clone(),L0)});else if(B0(i)&&B0(u))i.dimensions()===u.dimensions()?u=i.subtract(u):t.error("Unable to subtract vectors. Dimensions do not match.");else if(e0(i)&&B0(u)){if(u.elements.length===i.rows()){var z=new m,p0=i.cols();return u.each(function(L0,e1){for(var $0=[],V0=0;V0<p0;V0++)$0.push(t.subtract(i.elements[e1-1][V0].clone(),L0.clone()));z.elements.push($0)}),z}y0("Dimensions must match!")}else{if(B0(i)&&e0(u)){var z=u.clone().negate();return t.add(z,i)}e0(i)&&e0(u)?u=i.subtract(u):e0(i)&&I?(z=new m,i.each(function(L0,e1,$0){z.set(e1,$0,t.subtract(L0,u.clone()))}),u=z):O&&e0(u)&&(z=new m,u.each(function(L0,e1,$0){z.set(e1,$0,t.subtract(i.clone(),L0))}),u=z)}return u},this.multiply=function(i,u){var O=Y(i),I=Y(u);if(O&&u instanceof L)return u.elements.push(i),u;if(O&&I){if(u.isUnit){var a1=i.clone();return i.unit=u,a1}if(i.unit||u.unit)return t.Unit.multiply(i,u);if(i.isInfinity||u.isInfinity){if(i.equals(0)||u.equals(0))throw new j0(i+"*"+u+" is undefined!");if(u.power.lessThan(0)){if(i.isInfinity)throw new j0("Infinity/Infinity is not defined!");return new r(0)}var W0=i.multiplier.multiply(u.multiplier).sign(),M1=r.infinity();if(i.isConstant()||u.isConstant()||i.isInfinity&&u.isInfinity)return W0<0&&M1.negate(),M1}if(i.isConstant()&&u.isConstant()&&m0.PARSE2NUMBER)return new r($0=new p1(i.multiplier.toDecimal()).times(new p1(u.multiplier.toDecimal())).toFixed());if(i.isOne())return u.clone();if(u.isOne())return i.clone();if(i.multiplier.equals(0)||u.multiplier.equals(0))return new r(0);if(u.group>i.group&&u.group!==d0)return this.multiply(u,i);i.group===z0&&u.group===h1&&i.value===u.value&&($0=i,i=u,u=$0);var z=i.group,p0=u.group,L0=u.multiplier.num,e1=u.multiplier.den;z!==f1||i.fname!==A||u.isConstant()||i.args[0].value!==u.value||i.args[0].multiplier.lessThan(0)?z===f1&&i.fname===A&&i.multiplier.equals(1)&&i.power.equals(-1)&&u.isConstant()&&i.args[0].equals(u)&&(i=t.symfunction(A,[u.clone()]),u=new r(1)):(w1=i.power,T1=t.parse(i.multiplier),(i=t.multiply(T1,i.args[0].clone())).setPower(new g1(.5).multiply(w1)),z=i.group);var $0,V0=i.value,M1=u.value,W0=new g1(i.sign()),T1=z===l0&&p0===k0&&u.multiplier.equals(i.value),w1=(T1?new g1(1).multiply(i.multiplier):i.multiplier.multiply(u.multiplier)).abs(),a1=i.clone().toUnitMultiplier();if(u=u.clone().toUnitMultiplier(!0),z===f1&&p0===f1){var $1=i.args[0].clone(),J1=u.args[0].clone();if(i.fname===A&&u.fname===A&&i.isLinear()&&u.isLinear()){var H1=t.divide($1,J1).invert();H1.gt(1)&&x(H1)&&(a1=t.multiply(i.args[0].clone(),y1(H1.clone())),u=new r(1))}else if(i.fname===S&&u.fname===S&&!$1.isConstant()&&!J1.isConstant()&&u.power<0&&(H1=t.subtract($1.clone(),J1.clone()),H1.isConstant()))if($0=new r(1),H1<0){for(var D1=0,W1=Math.abs(H1);D1<=W1;D1++){var t2=t.add($1.clone(),new r(D1));$0=t.multiply($0,t2)}a1=t.multiply(t.pow($1,new r(i.power)),t.pow($0,new r(u.power))),u=new r(1)}else{for(D1=0,W1=Math.abs(H1);D1<=W1;D1++)t2=t.add(J1.clone(),new r(D1)),$0=t.multiply($0,t2);a1=t.multiply(t.pow($0,new r(i.power)),t.pow(J1,new r(u.power))),u=new r(1)}}if(V0===M1&&z===h1&&z===p0&&(V0=i.text("hash"),M1=u.text("hash")),(V0=p0===A1&&u.previousGroup===h1&&z===h1?r2(i,"hash",A1):V0)!==M1&&!T1||z===h1&&(p0===Q0||p0===l0||p0===f1)||z===h1&&p0===z0)if(z===z0&&i.isLinear())if(p0===z0&&u.distributeExponent(),p0===z0&&u.isLinear()){for(var t2 in u.symbols){var Z1=u.symbols[t2];a1=a1.combine(Z1)}a1.multiplier=a1.multiplier.multiply(u.multiplier)}else a1.combine(u);else z!==k0?z===z0?(a1.distributeExponent(),a1.combine(u)):u.isOne()||(B1=u.multiplier.clone(),u.toUnitMultiplier(),(a1=r.shell(z0).combine([a1,u])).multiplier=a1.multiplier.multiply(B1)):a1=u.clone().toUnitMultiplier();else{var s1=i.power,Y1=u.power,B1=Y(s1),K1=Y(Y1),K1=B1||K1;z===h1&&p0!==h1&&u.previousGroup!==h1&&s1.equals(1)?(a1=new r(0),i.each(function(w2){a1=t.add(a1,t.multiply(w2,u.clone()))},!0)):(a1.power=K1?t.add(Y(s1)?s1:new r(s1),Y(Y1)?Y1:new r(Y1)):z===k0?s1:s1.add(Y1),a1.power.equals(0)&&(a1=a1.convert(k0)),K1&&a1.convert(A1),i.imaginary&&u.imaginary&&i1(a1.power%2)&&(a1=new r(1),w1.negate()),a1.group!==A1&&a1.previousGroup&&(a1.previousGroup=void 0),a1.multiplier=a1.multiplier.multiply(u.multiplier))}return a1.group===l0&&(z=Math.log(a1.value),s1=Math.log(L0)/z,Y1=Math.log(e1)/z,K1=w1.num/L0,z=w1.den/e1,s1!=0&&x(s1)&&x(K1)&&(a1.power=a1.power.add(new g1(s1)),w1.num/=L0),Y1!=0&&x(Y1)&&x(z)&&(a1.power=a1.power.subtract(new g1(Y1)),w1.den/=e1)),a1.length===1&&($0=a1.multiplier,(a1=D0(a1.symbols)).multiplier=a1.multiplier.multiply($0)),e1=a1.power.toString(),i1(e1)&&a1.fname===A?(W0*=a1.sign(),e1=a1.power,a1=a1.args[0],a1=t.multiply(new r(w1),t.pow(a1,new r(e1.divide(new g1(2))))),W0<0&&a1.negate()):(a1.multiplier=a1.multiplier.multiply(w1).multiply(W0),a1.group===d0&&a1.isImaginary()&&a1.distributeMultiplier()),a1=a1.group===l0&&x(a1.power.toDecimal())?a1.convert(k0):a1}if(I&&!O&&($0=i,i=u,u=$0,$0=I,I=O,O=$0),W0=e0(u),I=e0(i),O&&W0){var m2=new m;u.eachElement(function(w2,N2,P2){m2.set(N2,P2,t.multiply(i.clone(),w2))}),u=m2}else if(I&&W0)u=i.multiply(u);else if(O&&B0(u))u.each(function(w2,N2){u.elements[--N2]=t.multiply(i.clone(),u.elements[N2])});else if(B0(i)&&B0(u))u.each(function(w2,N2){u.elements[--N2]=t.multiply(i.elements[N2],u.elements[N2])});else{if(B0(i)&&e0(u))return this.multiply(u,i);if(e0(i)&&B0(u)){if(u.elements.length===i.rows()){var m2=new m,M2=i.cols();return u.each(function(N2,P2){for(var $2=[],J2=0;J2<M2;J2++)$2.push(t.multiply(i.elements[P2-1][J2].clone(),N2.clone()));m2.elements.push($2)}),m2}y0("Dimensions must match!")}}return u},this.divide=function(i,u){var O=Y(i),I=Y(u);if(O&&I){if(i.unit||u.unit)return t.Unit.divide(i,u);if(u.equals(0))throw new I0("Division by zero not allowed!");return i.isConstant()&&u.isConstant()?(z=i.clone()).multiplier=z.multiplier.divide(u.multiplier):(u.invert(),z=t.multiply(i,u)),z}var z,p0,L0=B0(i),e1=B0(u);return O&&e1?u=u.map(function($0){return t.divide(i.clone(),$0)}):L0&&I?u=i.map(function($0){return t.divide($0,u.clone())}):L0&&e1?i.dimensions()===u.dimensions()?u=u.map(function($0,V0){return t.divide(i.elements[--V0],$0)}):t.error("Cannot divide vectors. Dimensions do not match!"):(z=e0(i),L0=e0(u),z&&I?(p0=new m,i.eachElement(function($0,V0,M1){p0.set(V0,M1,t.divide($0,u.clone()))}),u=p0):O&&L0?(p0=new m,u.eachElement(function($0,V0,M1){p0.set(V0,M1,t.divide(i.clone(),$0))}),u=p0):z&&L0?(p0=new m,i.rows()===u.rows()&&i.cols()===u.cols()?(i.eachElement(function($0,V0,M1){p0.set(V0,M1,t.divide($0,u.elements[V0][M1]))}),u=p0):t.error("Dimensions do not match!")):z&&e1&&(i.cols()===u.dimensions()?(p0=new m,i.eachElement(function($0,V0,M1){p0.set(V0,M1,t.divide($0,u.elements[V0].clone()))}),u=p0):t.error("Unable to divide matrix by vector."))),u},this.pow=function(i,u){var O,I=Y(i),z=Y(u);if(I&&z){if(i.unit||u.unit)return t.Unit.pow(i,u);if(i.group===f1&&i.fname===w&&i1(u)){var M1=i.multiplier.clone(),V0=t.pow(i.args[0],u);return V0.multiplier=M1,V0}if(i.isInfinity||u.isInfinity){if(i.isInfinity&&u.isInfinity)throw new j0("("+i+")^("+u+") is undefined!");if(i.isConstant()&&u.isInfinity){if(i.equals(0)){if(u.lessThan(0))throw new j0("0^Infinity is undefined!");return new r(0)}if(i.equals(1))throw new j0("1^"+u.toString()+" is undefined!");if(u.lessThan(0))return new r(0);if(!i.lessThan(0))return r.infinity()}if(i.isInfinity&&u.isConstant()){if(u.equals(0))throw new j0(i+"^0 is undefined!");return u.lessThan(0)?new r(0):t.multiply(r.infinity(),t.pow(new r(i.sign()),u.clone()))}}var W0=i.equals(0),p0=u.equals(0);if(W0&&p0)throw new j0("0^0 is undefined!");if(W0&&u.isConstant()&&u.multiplier.greaterThan(0))return new r(0);if(p0)return new r(1);var L0,e1=u.isConstant(),$0=i.isConstant(),V0=u.isInteger(),M1=i.multiplier,W0=i.clone();if($0&&e1&&i.equals(0)&&u.lessThan(0))throw new j0("Division by zero is not allowed!");if(m0.PARSE2NUMBER&&$0&&e1&&i.sign()<0&&P1(u)){var T1=Math.PI*u;return t2=new r(Math.cos(T1)),H1=t.multiply(r.imaginary(),new r(Math.sin(T1))),t.add(t2,H1)}if(m0.PARSE2NUMBER&&i.isImaginary()&&e1&&x(u)&&!u.lessThan(0)&&(t2=i.realpart(),H1=i.imagpart(),t2.isConstant("all")&&H1.isConstant("all")))return p0=m0.USE_BIG?r(p1.atan2(J1.multiplier.toDecimal(),W1.multiplier.toDecimal()).times(u.toString())):Math.atan2(H1,t2)*u,L0=new r(p0),W1=t.pow(r.hyp(t2,H1),u),T1=t.multiply(W1.clone(),t.trig.cos(L0.clone())),p0=t.multiply(W1,t.trig.sin(L0)),t.add(T1,t.multiply(r.imaginary(),p0));if(W0.toUnitMultiplier(),W0.group!==f1||W0.fname!==A||e1?(M2=M1.sign(),P1(u)&&M2<0&&(W0.negate(),(W0=t.symfunction(b,[W0])).negate()),W0.multiplyPower(u)):((Y1=W0.args[0]).multiplyPower(new r(.5)),Y1.multiplier.multiply(W0.multiplier),Y1.multiplyPower(u),W0=Y1),$0&&e1&&m0.PARSE2NUMBER)M2<0&&(i.negate(),a1=u.multiplier.den.equals(2)?new r(m0.IMAGINARY):x(u.multiplier)?i1(u.multiplier)?new r(1):new r(-1):i1(u.multiplier.den)?t.pow(t.symfunction(b,[new r(M2)]),u.clone()):new r(Math.pow(M2,u.multiplier.num))),W0=new r(Math.pow(i.multiplier.toDecimal(),u.multiplier.toDecimal())),a1&&(W0=t.multiply(W0,a1));else if(V0&&!M1.equals(1)){if(u.abs().gt(m0.MAX_EXP))return u.sign()<0?new r(0):r.infinity();var w1=u.multiplier.toDecimal(),a1=Math.sign(w1);w1=Math.abs(w1);var $1=new g1(1);$1.num=M1.num.pow(w1),$1.den=M1.den.pow(w1),a1<0&&$1.invert(),W0.multiplier=W0.multiplier.multiply($1)}else{var J1,H1,D1,W1,t2,Z1,s1,Y1,B1,K1,m2,M2=i.sign();u.isConstant()&&i.isConstant()&&!u.multiplier.den.equals(1)&&M2<0?W0=u.multiplier.den.equals(2)?(J1=new r(m0.IMAGINARY),i.negate(),u.lessThan(0)&&(J1.negate(),u.negate()),t.multiply(t.pow(i,u),J1)):((D1=i.clone()).multiplier.negate(),W0=t.pow(t.symfunction(b,[new r(M2)]),u.clone()),$1=t.pow(new r(D1.multiplier.num),u.clone()),J1=t.pow(new r(D1.multiplier.den),u.clone()),W1=t.divide($1,J1),t.multiply(W0,W1)):m0.PARSE2NUMBER&&u.isImaginary()?(t2=u.realpart(),H1=u.imagpart(),D1=i.clone().toLinear(),W1=t.pow(D1.clone(),t2),B1=d(D1.clone()),t2=Q.cos(t.multiply(H1.clone(),B1)),B1=t.multiply(Q.sin(t.multiply(H1,d(D1))),r.imaginary()),W0=t.multiply(W1,t.add(t2,B1)),W0=t.expand(t.parse(W0))):(Z1=q0(new r((B1=i.group===k0&&M2<0)?M1.num:Math.abs(M1.num)).setPower(u.clone())),s1=q0(new r(M1.den).setPower(u.clone()).invert()),i.imaginary&&(V0?(Y1=Math.sign(u),w1=P(u),W0=new r(i1(K1=w1%4)?-1:m0.IMAGINARY),(K1===0||Y1<0&&K1===1||0<Y1&&K1===3)&&W0.negate()):(V0=u.multiplier.multiply(g1.quick(1,2)),Y1=Math.pow(-1,V0.num),W0=i1(V0.den)?new r(-1).setPower(V0,!0):new r(Y1))),M2<0&&!B1&&W0.negate(),e1&&i.group!==A1&&(M2=i1(u.multiplier.den),B1=i1(i.power),K1=W0.power.toDecimal(),e1=i1(K1),M2&&B1&&!e1&&(W0=K1===1?t.symfunction(w,[W0]):x(K1)?t.multiply(t.symfunction(w,[W0.clone().toLinear()]),W0.clone().setPower(new g1(K1-1))):(w1=W0.power,t.symfunction(w,[W0.toLinear()]).setPower(w1)),m0.POSITIVE_MULTIPLIERS&&W0.fname===w&&(W0=W0.args[0]))),u.equals(2)&&W0.group===z0&&(m2=new r(1),W0.each(function(w2){m2=t.multiply(m2,t.pow(w2,u))}),W0=m2))}return W0=q0(W0),(W0=Z1&&s1?t.multiply(W0,function(w2){if(w2.group===l0){var N2=w2.value,P2=B2(N2)[0];if(!P2)return C1("Unable to compute prime factors. This should not happen. Please review and report."),w2;if(N2=new g1(Math.log(N2)/Math.log(P2)).multiply(w2.power),N2.den>w2.power.den)return w2;w2=x(N2)?r(Math.pow(P2,N2)):new r(P2).setPower(N2)}return w2}(t.multiply(Z1,s1))):W0).fname===A?(s1=((Z1=W0.group===A1)?W0.power.multiplier:W0.power).toString(),i1(s1)&&(Z1=Z1?t.divide(W0.power,new r(2)):new r(W0.power.divide(new g1(2))),M1=W0.multiplier,(W0=t.pow(W0.args[0],Z1)).multiplier=W0.multiplier.multiply(M1))):!m0.IGNORE_E&&W0.isE()&&W0.group===A1&&W0.power.contains("pi")&&W0.power.contains(m0.IMAGINARY)&&u.group===z0&&(L0=u.stripVar(m0.IMAGINARY),W0=t.add(Q.cos(L0),t.multiply(r.imaginary(),Q.sin(L0)))),W0}return B0(i)&&z?i=i.map(function(w2){return t.pow(w2,u.clone())}):e0(i)&&z?(O=new m,i.eachElement(function(w2,N2,P2){O.set(N2,P2,t.pow(w2,u.clone()))}),i=O):I&&e0(u)&&(O=new m,u.eachElement(function(w2,N2,P2){O.set(N2,P2,t.pow(i.clone(),w2))}),i=O),i},this.comma=function(i,u){return(i=i instanceof L?i:L.create(i)).append(u),i},this.mod=X1,this.slice=function(i,u){return new y(i,u)},this.equals=function(i,u){return i.group===Q0||i.isLinear()||y0("Cannot set equality for "+i.toString()),K[i.value]=u.clone(),u},this.percent=function(i){return t.divide(i,new r(100))},this.assign=function(i,u){if(i instanceof L&&u instanceof L)return i.elements.map(function(I,z){return t.assign(I,u.elements[z])}),E.fromArray(u.elements);if(i.parent){var O=i.parent;return O.elements[O.getter]=u,delete O.getter,O}if(i.group!==Q0)throw new c2("Cannot complete operation. Incorrect LH value for "+i);return K[i.value]=u},this.function_assign=function(i,u){var O=i.elements.pop();return c0(O,i.elements,u)};function X0(i){return new r(i===!0?1:0)}this.eq=function(i,u){return X0(i.equals(u))},this.gt=function(i,u){return X0(i.gt(u))},this.gte=function(i,u){return X0(i.gte(u))},this.lt=function(i,u){return X0(i.lt(u))},this.lte=function(i,u){return X0(i.lte(u))},this.factorial=function(i){return this.symfunction(S,[i])},this.dfactorial=function(i){return this.symfunction(C,[i])}}m0.FUNCTION_MODULES.push(_1),U(_1),Math.sign=Math.sign||function(t){return(t=+t)==0||isNaN(t)?t:0<t?1:-1},Math.cosh=Math.cosh||function(t){return t=Math.exp(t),(t+1/t)/2},Math.sech=Math.sech||function(t){return 1/Math.cosh(t)},Math.csch=Math.csch||function(t){return 1/Math.sinh(t)},Math.coth=Math.coth||function(t){return 1/Math.tanh(t)},Math.sinh=Math.sinh||function(t){return t=Math.exp(t),(t-1/t)/2},Math.tanh=Math.tanh||function(t){return t===1/0?1:t===-1/0?-1:(t=Math.exp(2*t),(t-1)/(t+1))},Math.asinh=Math.asinh||function(t){return t===-1/0?t:Math.log(t+Math.sqrt(t*t+1))},Math.acosh=Math.acosh||function(t){return Math.log(t+Math.sqrt(t*t-1))},Math.atanh=Math.atanh||function(t){return Math.log((1+t)/(1-t))/2},Math.log10=Math.log10||function(t){return Math.log(t)*Math.LOG10E},Math.trunc=Math.trunc||function(t){return isNaN(t)?NaN:0<t?Math.floor(t):Math.ceil(t)},B2(314146179365),n2.getExpression=function(t,s){return t!=="last"&&t||(t=V.length),t=V[(t=t==="first"?1:t)-1],t&&new n2(t)},(n2.prototype={text:function(t,s){return s=s||m0.EXPRESSION_DECP,t=t||"decimals",this.symbol.text_?this.symbol.text_(t):r2(this.symbol,t,void 0,s)},latex:function(t){return this.symbol.latex?this.symbol.latex(t):f.latex(this.symbol,t)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(B0(this.symbol)&&this.symbol.dimensions()===0)return this;var t,s=arguments[0],h=1;typeof s=="string"?t=s.charAt(0)==="%"?n2.getExpression(s.substr(1)).text():s:s instanceof n2||Y(s)?t=s.text():(t=this.symbol.text(),h--);var y=arguments[h]||{};return new n2(f0("PARSE2NUMBER",function(){return a.parse(t,y)},!0))},buildFunction:function(t){return R.build(this.symbol,t)},isNumber:function(){return H0(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return u0(a.parse(this.symbol)).isImaginary()},variables:function(){return C0(this.symbol)},toString:function(){try{return u1(this.symbol)?"["+this.symbol.toString()+"]":this.symbol.toString()}catch{return""}},toDecimal:function(t){return m0.precision=t,t=r2(this.symbol,"decimals"),m0.precision=void 0,t},isFraction:function(){return a0(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(t,s){return new n2(this.symbol.sub(a.parse(t),a.parse(s)))},operation:function(t,s){return W(s)?s=s.symbol:Y(s)||(s=a.parse(s)),new n2(a[t](this.symbol.clone(),s.clone()))},add:function(t){return this.operation("add",t)},subtract:function(t){return this.operation("subtract",t)},multiply:function(t){return this.operation("multiply",t)},divide:function(t){return this.operation("divide",t)},pow:function(t){return this.operation("pow",t)},expand:function(){return new n2(a.expand(this.symbol))},each:function(t,s){if(this.symbol.each)this.symbol.each(t,s);else if(u1(this.symbol))for(s=0;s<this.symbol.length;s++)t.call(this.symbol,this.symbol[s],s);else t.call(this.symbol)},eq:function(t){Y(t)||(t=a.parse(t));try{return a.subtract(this.symbol.clone(),t).equals(0)}catch{return!1}},lt:function(t){Y(t)||(t=a.parse(t));try{return u0(a.subtract(this.symbol.clone(),t)).lessThan(0)}catch{return!1}},gt:function(t){Y(t)||(t=a.parse(t));try{return u0(a.subtract(this.symbol.clone(),t)).greaterThan(0)}catch{return!1}},gte:function(t){return this.gt(t)||this.eq(t)},lte:function(t){return this.lt(t)||this.eq(t)},numerator:function(){return new n2(this.symbol.getNum())},denominator:function(){return new n2(this.symbol.getDenom())},hasFunction:function(t){return this.symbol.containsFunction(t)},contains:function(t){return this.symbol.contains(t)}}).toTeX=n2.prototype.latex,v2.prototype={fromScientific:function(t){return t=String(t).toLowerCase().split("e"),this.coeff=t[0],this.exponent=t[1],this},convert:function(L){var X=L.split("."),s=X[0]||"",h=X[1]||"",s=v2.removeLeadingZeroes(s),h=v2.removeTrailingZeroes(h),y=s.length,L=s+h,X=v2.leadingZeroes(L).length;return this.exponent=y-(X+1),L=v2.removeLeadingZeroes(L),this.coeff=L.charAt(0)+"."+(L.substr(1,L.length)||"0"),L=this.coeff.split(".")[1]||"",this.decp=L==="0"?0:L.length,this.dec=h,this.wholes=s,this},round:function(t){var s,h,y=this.copy();return(t=Number(t))===0?y.coeff=y.coeff.charAt(0):(s=this.coeff.substring(0,t+1),t=(h=this.coeff.substring(t+1,t+3)).charAt(0),4<h.charAt(1)&&t++,y.coeff=s+t),y},copy:function(){var t=new v2(0);return t.coeff=this.coeff,t.exponent=this.exponent,t.sign=this.sign,t},toString:function(t){var s;return s=m0.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&this.exponent===0&&this.decp<t?this.decp===0?this.wholes:this.coeff:(s=t===void 0?this.coeff:v2.round(this.coeff,Math.min(t,this.decp||1)),this.exponent===0?s:s+"e"+this.exponent),(this.sign===-1?"-":"")+s}},v2.isScientific=function(t){return/\d+\.?\d*e[\+\-]*\d+/i.test(t)},v2.leadingZeroes=function(t){return t=t.match(/^(0*).*$/),t?t[1]:""},v2.removeLeadingZeroes=function(t){return t=t.match(/^0*(.*)$/),t?t[1]:""},v2.removeTrailingZeroes=function(t){var s=t.match(/0*$/);return s?t.substring(0,t.length-s[0].length):""},v2.round=function(t,s){return t=Z0(t,s),s-=String(t).split(".").pop().length,0<s&&(t+=new Array(1+s).join(0)),t},g1.create=function(h){if(h instanceof g1)return h;var s=(h=h.toString()).charAt(0)==="-",h=new g1(h=s?h.substr(1,h.length-1):h);return s&&h.negate(),h},g1.isFrac=function(t){return t instanceof g1},g1.quick=function(t,s){var h=new g1;return h.num=new r0(t),h.den=new r0(s),h},g1.simple=function(t){for(var s=String(x1(t)).split("."),t=s.join(""),h=1,y=(s[1]||"").length,L=0;L<y;L++)h+="0";return g1.quick(t,h).simplify()},g1.prototype={multiply:function(t){if(this.isOne())return t.clone();if(t.isOne())return this.clone();var s=this.clone();return s.num=s.num.multiply(t.num),s.den=s.den.multiply(t.den),s.simplify()},divide:function(t){if(t.equals(0))throw new I0("Division by zero not allowed!");return this.clone().multiply(t.clone().invert()).simplify()},subtract:function(t){return this.clone().add(t.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(X){var s=this.den,h=X.den,y=this.clone(),L=y.num,X=X.num;return s.equals(h)?y.num=L.add(X):(y.num=L.multiply(h).add(X.multiply(s)),y.den=s.multiply(h)),y.simplify()},mod:function(h){var s=this.clone(),h=h.clone();return s.num=s.num.multiply(h.den),s.den=s.den.multiply(h.den),h.num=h.num.multiply(this.den),h.den=h.den.multiply(this.den),s.num=s.num.mod(h.num),s.simplify()},simplify:function(){var t=r0.gcd(this.num,this.den);return this.num=this.num.divide(t),this.den=this.den.divide(t),this},clone:function(){var t=new g1;return t.num=new r0(this.num),t.den=new r0(this.den),t},decimal:function(t){var s=this.num.isNegative()?"-":"";if(this.num.equals(this.den))return"1";t=t||m0.PRECISION,t++;for(var h=[],y=this.num.abs(),L=this.den,X=0;X<t;X++){var A0=y.divide(L),Q=y.subtract(A0.multiply(L));if(h.push(A0),Q.equals(0))break;y=Q.times(10)}var Y0=h.shift();if(h.length===0)return s+Y0.toString();if(X===t){for(var E0=[],X=0;X<2;X++)E0.unshift(h.pop());h.push(Math.round(E0.join(".")))}return s+(Y0.toString()+"."+h.join(""))},toDecimal:function(t){return(t=t||m0.PRECISION)?this.decimal(t):this.num/this.den},qcompare:function(t){return[this.num.multiply(t.den),t.num.multiply(this.den)]},equals:function(t){return isNaN(t)||(t=new g1(t)),t=this.qcompare(t),t[0].equals(t[1])},absEquals:function(t){return isNaN(t)||(t=new g1(t)),t=this.qcompare(t),t[0].abs().equals(t[1])},greaterThan:function(t){return isNaN(t)||(t=new g1(t)),t=this.qcompare(t),t[0].gt(t[1])},gte:function(t){return this.greaterThan(t)||this.equals(t)},lte:function(t){return this.lessThan(t)||this.equals(t)},lessThan:function(t){return isNaN(t)||(t=new g1(t)),t=this.qcompare(t),t[0].lt(t[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var t,s=this.den;return this.num.equals(0)||(t=this.num.isNegative(),this.den=this.num.abs(),this.num=s,t&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(t){return g1.quick(r0.gcd(t.num,this.num),r0.lcm(t.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+"/"+this.den.toString()},valueOf:function(){return m0.USE_BIG?new p1(this.num.toString()).div(new p1(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},r.imaginary=function(){var t=new r(m0.IMAGINARY);return t.imaginary=!0,t},r.infinity=function(t){var s=new r("Infinity");return t===-1&&s.negate(),s},r.shell=function(t,s){return s=new r(s),s.group=t,s.symbols={},s.length=0,s},r.unwrapSQRT=function(t,s){var h,y=t.power;return t.fname===A&&(t.isLinear()||s)&&((h=t.args[0].clone()).power=h.power.multiply(new g1(.5)),h.multiplier=h.multiplier.multiply(t.multiplier),t=h,s&&(t.power=y.multiply(new g1(.5)))),t},r.hyp=function(t,s){return t=t||new r(0),s=s||new r(0),a.sqrt(a.add(a.pow(t.clone(),new r(2)),a.pow(s.clone(),new r(2))))},r.toPolarFormArray=function(h){var s=h.realpart(),h=h.imagpart();return[r.hyp(s,h),s.equals(0)?a.parse("pi/2"):a.trig.atan(a.divide(h,s))]},r.unwrapPARENS=function(t){if(t.fname!=="")return t;var s=t.args[0];return s.power=s.power.multiply(t.power),s.multiplier=s.multiplier.multiply(t.multiplier),t.fname===""?r.unwrapPARENS(s):s},r.create=function(t,s){return a.parse("("+t+")^("+(s=s===void 0?1:s)+")")},r.prototype={getNth:function(t){var s=u0(a.pow(a.parse(this.multiplier),a.parse(t).invert())),h=a.parse(Z0(s));return u0(a.pow(h,a.parse(t))).equals(a.parse(this.multiplier))?h:s},isToNth:function(t){var s,h=this.getNth(t),h=x(h);return this.group===z0?(s=!0,this.each(function(y){y.isToNth(t)||(s=!1)})):s=this.group===k0||x(a.divide(a.parse(this.power),a.parse(t))),h&&s},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==z0)return this.clone();var t=[],y=this.multiplier.sign();this.each(function(U0){if(U0=U0.power,Y(U0)||U0.equals(1))return this.clone();t.push(U0)});var s,h=new g1(c1(t)),y=this.multiplier.sign(),L=this.multiplier.clone().abs(),X=_1.ifactor(L),A0=new g1(1),Q=new g1(1);for(s in X){var Y0=new g1(X[s]);Y0.lessThan(h)||(Y0=Y0.divide(h).subtract(new g1(1)),Q=Q.multiply(new g1(s))),A0=A0.multiply(a.parse($(s)+"^"+$(Y0)).multiplier)}var E0=new r(Q);return this.each(function(U0){(U0=U0.clone()).power=U0.power.divide(h),E0=a.multiply(E0,U0)}),L=a.symfunction(b,[E0]),L.power=h,L.multiplier=y<0?A0.negate():A0,L},equals:function(t){return Y(t)||(t=new r(t)),this.value===t.value&&this.power.equals(t.power)&&this.multiplier.equals(t.multiplier)&&this.group===t.group},abs:function(){var t=this.clone();return t.multiplier.abs(),t},gt:function(t){return Y(t)||(t=new r(t)),this.isConstant()&&t.isConstant()&&this.multiplier.greaterThan(t.multiplier)},gte:function(t){return Y(t)||(t=new r(t)),this.equals(t)||this.isConstant()&&t.isConstant()&&this.multiplier.greaterThan(t.multiplier)},lt:function(t){return Y(t)||(t=new r(t)),this.isConstant()&&t.isConstant()&&this.multiplier.lessThan(t.multiplier)},lte:function(t){return Y(t)||(t=new r(t)),this.equals(t)||this.isConstant()&&t.isConstant()&&this.multiplier.lessThan(t.multiplier)},isPoly:function(t){var s=this.group,h=this.power;if(!x(h)||h<0)return!1;if(s===k0||s===Q0||this.isConstant(!0))return!0;if(h=C0(this),s===z0&&h.length===1){var y=h[0];if(!y)return!0;for(X in this.symbols){var L=this.symbols[X];if(L.group===f1&&!L.args[0].isConstant()||!L.contains(y)&&!L.isConstant(!0))return!1}return!0}if(this.isComposite()||s===z0&&t){if(!t&&1<h.length)return!1;for(var X in this.symbols)if(!this.symbols[X].isPoly(t))return!1;return!0}return!1},stripVar:function(t,s){var h;return this.group!==h1&&this.group!==Q0||this.value!==t?this.group===z0&&this.isLinear()?(h=new r(1),this.each(function(y){y.contains(t,!0)||(h=a.multiply(h,y.clone()))}),h.multiplier=h.multiplier.multiply(this.multiplier)):this.group!==d0||this.isLinear()?this.group===d0&&this.isLinear()?(h=new r(0),this.each(function(y){y.contains(t)||((y=y.clone()).multiplier=y.multiplier.multiply(this.multiplier),h=a.add(h,y))}),h.equals(0)&&(h=new r(this.multiplier))):h=this.group===A1&&this.power.contains(t,!0)||this.group===f1&&this.contains(t)?new r(this.multiplier):this.clone():h=new r(this.multiplier):h=new r(s?0:this.multiplier),h},toArray:function(t,s){s=s||{arr:[],add:function(A0,Q){var Y0=this.arr[Q];this.arr[Q]=Y0?a.add(Y0,A0):A0}};var h=this.group;if(h===Q0&&this.contains(t))s.add(new r(this.multiplier),this.power);else if(h===z0){var y=this.stripVar(t),L=a.divide(this.clone(),y.clone()),L=L.isConstant()?0:L.power;s.add(y,L)}else if(h===h1&&this.value===t)this.each(function(A0,Q){s.add(A0.stripVar(t),Q)});else if(h===d0)this.each(function(A0){A0.toArray(t,s)});else{if(this.contains(t))throw new i2("Cannot convert to array! Exiting");s.add(this.clone(),0)}s=s.arr;for(var X=0;X<s.length;X++)s[X]||(s[X]=new r(0));return s},hasFunc:function(t){var s=this.group===f1||this.group===A1;if(s&&!t||s&&this.contains(t))return!0;if(this.symbols){for(var h in this.symbols)if(this.symbols[h].hasFunc(t))return!0}return!1},sub:function(t,s){t=Y(t)?t.clone():a.parse(t),s=Y(s)?s.clone():a.parse(s),t.group!==k0&&t.group!==l0||y0("Cannot substitute a number. Must be a variable");var h,y=!1,L=t.multiplier.equals(1),X=this.multiplier.clone();if(this.value===t.value&&(this.group!==h1&&t.group!==h1||this.group===h1&&t.group===h1))(L||t.multiplier.equals(this.multiplier))&&(t.isLinear()?h=s:t.power.equals(this.power)&&(h=s,y=!0),t.multiplier.equals(this.multiplier)&&(X=new g1(1)));else if(this.group===z0||this.previousGroup===z0)h=new r(1),this.each(function(t1){t1=a.parse(t1.sub(t,s)),h=a.multiply(h,t1)});else if(this.isComposite()){var A0=this.clone();if(t.isComposite()&&A0.isComposite()&&A0.isLinear()&&t.isLinear()){var Q,Y0=function(t1,S1){for(var x0 in t1.symbols)if(x0=t1.symbols[x0],x0.isComposite()&&Y0(x0,S1)||x0.equals(S1))return!0;return!1};for(Q in t.symbols)if(!Y0(A0,t.symbols[Q]))return A0.clone();h=a.add(a.subtract(A0.clone(),t),s)}else h=new r(0),A0.each(function(t1){h=a.add(h,t1.sub(t,s))})}else if(this.group===A1)h=a.parse(this.value).sub(t,s);else if(this.group===f1){for(var E0=[],U0=0;U0<this.args.length;U0++){var R1=this.args[U0];Y(R1)||(R1=a.parse(R1)),E0.push(R1.sub(t,s))}h=a.symfunction(this.fname,E0)}return h?(y||(y=this.group===A1?this.power.sub(t,s):a.parse(this.power),h=a.pow(h,y)),h.multiplier=h.multiplier.multiply(X),h):this.clone()},isMonomial:function(){if(this.group===Q0)return!0;if(this.group!==z0)return!1;for(var t in this.symbols)if(this.symbols[t].group!==Q0)return!1;return!0},isPi:function(){return this.group===Q0&&this.value==="pi"},sign:function(){return this.multiplier.sign()},isE:function(){return this.value==="e"},isSQRT:function(){return this.fname===A},isConstant:function(t,s){if(s&&this.group===z0){for(var h in this.symbols)if(this.symbols[h].isConstant(!0))return!0}if(t==="functions"&&this.isComposite()){var y=!0;return this.each(function(X){X.isConstant(t,s)||(y=!1)},!0),y}if(t==="all"&&(this.isPi()||this.isE()))return!0;if(t&&this.group===f1){for(var L=0;L<this.args.length;L++)if(!this.args[L].isConstant(t))return!1;return!0}return t?H0(this):this.value===g},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols){for(var t in this.symbols)if(this.symbols[t].isImaginary())return!0}return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new r(0);if(this.isComposite()){var t=new r(0);return this.each(function(s){t=a.add(t,s.realpart())}),t}return this.isImaginary()?new r(0):this.clone()},imagpart:function(){if(this.group===Q0&&this.isImaginary())return new r(this.multiplier);if(this.isComposite()){var t=new r(0);return this.each(function(s){t=a.add(t,s.imagpart())}),t}return this.group===z0?this.stripVar(m0.IMAGINARY):new r(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(t){if(t){if(this.isConstant())return!0;if(this.group===Q0)return this.value!==t||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var s in this.symbols)if(!this.symbols[s].isLinear(t))return!1;return!0}return this.group===z0&&this.symbols[t]?this.symbols[t].isLinear(t):!1}return this.power.equals(1)},containsFunction:function(t){if(typeof t=="string"&&(t=[t]),this.group===f1&&t.indexOf(this.fname)!==-1)return!0;if(this.symbols){for(var s in this.symbols)if(this.symbols[s].containsFunction(t))return!0}return!1},multiplyPower:function(t){if(this.group===k0&&this.multiplier.equals(1))return this;var s,h=this.power;return this.group!==A1&&t.group===k0?(s=t.multiplier,this.group!==k0||s.isInteger()||this.convert(l0),this.power=h.equals(1)?s.clone():h.multiply(s),this.group===l0&&x(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(k0))):(this.group!==A1&&(h=new r(h),this.convert(A1)),this.power=a.multiply(h,t)),this},setPower:function(t,s){return this.group===k0&&this.multiplier.equals(1)||(this.group!==A1||Y(t)?(h=!1,Y(t)&&(t.group===k0?t=t.multiplier:h=!0),h=h?A1:l0,this.power=t,this.group===k0&&h&&this.convert(h,s)):(this.group=this.previousGroup,delete this.previousGroup,this.group===k0?(this.multiplier=new g1(this.value),this.value=g):this.power=t)),this;var h},isInverse:function(){return this.group===A1?this.power.multiplier.lessThan(0):this.power<0},clone:function(t){var s,h=t||new r(0),y=["value","group","length","previousGroup","imaginary","fname","args","isInfinity","scientific"],L=y.length;if(this.symbols)for(var X in h.symbols={},this.symbols)h.symbols[X]=this.symbols[X].clone();for(s=0;s<L;s++)this[y[s]]!==void 0&&(h[y[s]]=this[y[s]]);return h.power=this.power.clone(),h.multiplier=this.multiplier.clone(),this.isConversion&&(h.isConversion=this.isConversion),this.isUnit&&(h.isUnit=this.isUnit),h},toUnitMultiplier:function(t){return this.multiplier.num=new r0(this.multiplier.num.isNegative()&&t?-1:1),this.multiplier.den=new r0(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new g1(1)),this},each:function(t,s){if(this.symbols)for(var h in this.symbols){var y=this.symbols[h];if(y.group===h1&&s)for(var L in y.symbols)t.call(h,y.symbols[L],L);else t.call(this,y,h)}else t.call(this,this,this.value)},valueOf:function(){return this.group===k0?this.multiplier.valueOf():this.power===0?1:this.multiplier===0?0:r2(this,"decimals")},contains:function(t,s){t=String(t);var h=this.group;if(this.value===t)return!0;if(this.symbols){for(var y in this.symbols)if(this.symbols[y].contains(t,s))return!0}if(h===f1||this.previousGroup===f1){for(var L=0;L<this.args.length;L++)if(this.args[L].contains(t,s))return!0}return h===A1&&(s&&this.power.contains(t,s)||this.value===t)?!0:this.value===t},negate:function(){return this.multiplier.negate(),this.group!==d0&&this.group!==h1||this.distributeMultiplier(),this},invert:function(t,s){return t||(this.multiplier=this.multiplier.invert()),Y(this.power)?this.power.negate():this.group===z0&&s?this.each(function(h){return h.invert()}):this.power&&this.group!==k0&&this.power.negate(),this},distributeMultiplier:function(t){if(t=t?this.power.absEquals(1):this.power.equals(1),this.symbols&&t&&this.group!==z0&&!this.multiplier.equals(1)){for(var s in this.symbols)s=this.symbols[s],s.multiplier=s.multiplier.multiply(this.multiplier),s.distributeMultiplier();this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var t,s=this.power;for(t in this.symbols){var h=this.symbols[t];h.group===A1?h.power=a.multiply(h.power,new r(s)):this.symbols[t].power=this.symbols[t].power.multiply(s)}this.toLinear()}return this},convert:function(t,s){var h;return f1<t?(h=this.clone(),this.symbols={},(t===z0?h:this).toUnitMultiplier(),this.group===f1&&(h.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[h.keyForGroup(t)]=h,this.group=t,this.length=1):t===A1?this.group===k0&&this.multiplier.equals(1)||(this.group!==A1&&(this.previousGroup=this.group),this.group===k0?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=r2(this,"hash"),this.group=A1):t===k0?(h=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new r(this.group===l0?h*Math.pow(this.value,this.power):h).clone(this)):t===l0&&this.group===k0&&(this.value=s?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!s),this.group=l0),this},insert:function(t,s){var h,y;return Y(t)||y0("Object "+t+" is not of type Symbol!"),this.symbols&&(y=this.group,f1<y&&(y=(h=t.keyForGroup(y))in this.symbols&&this.symbols[h],s==="add"?(s=h,y?(this.symbols[s]=a.add(y,t),this.symbols[s].multiplier.equals(0)&&(delete this.symbols[s],this.length--,this.length===0&&(this.convert(k0),this.multiplier=new g1(0)))):(this.symbols[h]=t,this.length++)):(t.group===l0&&x(t.power)&&t.convert(k0),t.group!==A1?(this.multiplier=this.multiplier.multiply(t.multiplier),t.toUnitMultiplier()):(t.parens=t.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(t.multiplier.clone().abs()),t.toUnitMultiplier(!0)),y&&((t=a.multiply(H(this.symbols,h),t)).isConstant()&&(this.multiplier=this.multiplier.multiply(t.multiplier),t=new r(1)),this.length--),t.isOne(!0)?t.multiplier.lessThan(0)&&this.negate():(this.symbols[h]=t,this.length++)),this.length===0&&this.convert(k0),this.group!==d0&&this.group!==z0||this.updateHash())),this},attach:function(t){if(u1(t)){for(var s=0;s<t.length;s++)this.insert(t[s],"add");return this}return this.insert(t,"add")},combine:function(t){if(u1(t)){for(var s=0;s<t.length;s++)this.insert(t[s],"multiply");return this}return this.insert(t,"multiply")},updateHash:function(){if(this.group!==k0)if(this.group===f1){for(var t="",s=this.args,h=this.fname===b,y=0;y<s.length;y++)t+=(y===0?"":",")+r2(s[y]);var L=h?"":this.fname;this.value=L+(h?t:$(t))}else this.group!==Q0&&this.group!==h1&&(this.value=r2(this,"hash"))},keyForGroup:function(t){var s,h=this.group;if(h===k0)s=this.value;else if(h===Q0||h===l0)s=t===h1?this.power.toDecimal():this.value;else if(h===f1)s=t===h1?this.power.toDecimal():r2(this,"hash");else{if(h===h1)return s=t===z0?r2(this,"hash"):t===d0?this.power.equals(1)?this.value:$(r2(this,"hash"))+m0.POWER_OPERATOR+this.power.toDecimal():t===h1?this.power.toString():this.value;h===d0?(t===d0&&(s=r2(this,"hash")),s=t===h1?this.power.toDecimal():this.value):h===z0?s=t===h1?this.power.toDecimal():r2(this,"hash"):h===A1&&(s=t===h1?r2(this.power):r2(this,"hash"))}return s},collectSymbols:function(t,s,h,y){var L=[];if(this.symbols)for(var X in this.symbols)X=this.symbols[X],!y||X.group!==h1&&X.group!==d0?L.push(t?t(X,s):X):L=L.concat(X.collectSymbols());else L.push(this);return L.sort(h=h===null?void 0:h)},latex:function(t){return f.latex(this,t)},text:function(t){return r2(this,t)},isOne:function(t){return this.group===k0?this.multiplier[t?"absEquals":"equals"](1):this.power.equals(0)},isComposite:function(){var t=this.group,s=this.previousGroup;return t===d0||t===h1||s===h1||s===d0},isCombination:function(){var t=this.group,s=this.previousGroup;return t===z0||s===z0},lessThan:function(t){return this.multiplier.lessThan(t)},greaterThan:function(t){return Y(t)||(t=new r(t)),!(!this.isConstant(!0)||!t.isConstant(!0))&&this.multiplier.greaterThan(t.multiplier)},getDenom:function(){var t=this.clone();if((t=this.group===z0&&this.power.lessThan(0)?a.expand(t):t).power.lessThan(0)||t.group===A1&&t.power.multiplier.lessThan(0)){var s,h=a.parse(t.multiplier.den);(s=t.toUnitMultiplier()).power.negate(),s=a.multiply(h,s)}else if(t.group===z0)for(var y in s=a.parse(t.multiplier.den),t.symbols){var L=t.symbols[y];(L.power<0||L.group===A1&&L.power.multiplier.lessThan(0))&&(s=a.multiply(s,t.symbols[y].clone().invert()))}else s=a.parse(t.multiplier.den);return s},getNum:function(){var t,s=this.clone();return(s=s.group===z0&&s.power.lessThan(0)?a.expand(s):s).power.greaterThan(0)&&s.group!==z0||s.group===A1&&s.power.multiplier.greaterThan(0)?t=a.multiply(a.parse(s.multiplier.num),s.toUnitMultiplier()):s.group===z0?(t=a.parse(s.multiplier.num),s.each(function(h){(0<h.power||h.group===A1&&0<h.power.multiplier)&&(t=a.multiply(t,h.clone()))})):t=a.parse(s.multiplier.num),t},toString:function(){return this.text()}};var p={convert:function(t,s){var h,y,L,X;return t===0?X=[0,1]:t<1e-6||1e20<t?(h=this.quickConversion(Number(t)))[1]<=1e20?(L=t/(y=Math.abs(t)),(X=this.fullConversion(y.toFixed((h[1]+"").length-1)))[0]=X[0]*L):X=h:X=this.fullConversion(t),X},quickConversion:function(t){return function(s){v2.isScientific(s)&&(s=x1(s));var h=(y=(s=(y="",(s=(h=typeof(h=s)!="string"?h.toString():h).charAt(0))==="-"?(h=h.substr(1,h.length),y="-"):s==="+"&&(h=h.substr(1,h.length)),{sign:y,value:h})).value.split(".")).length===1?y[0]:y[0]+y[1],y=y[1]?y[1].length:0,y=`1${"0".repeat(y)}`;return h!=="0"&&(h=h.replace(/^0+/,"")),[s.sign+h,y]}(t)},fullConversion:function(t){for(var s=!1,h=0,y=1,L=1,X=0,A0=0,Q=t;!s;){1e4<++A0&&(s=!0);var U0=Math.floor(Q),Y0=h+U0*L,E0=y+U0*X,U0=Q-U0;U0<1e-16&&(s=!0),Q=1/U0,h=L,y=X,L=Y0,X=E0,(Math.abs(Y0/E0-t)<1e-16||30<A0)&&(s=!0)}return[Y0,E0]}},f={parser:function(){var t,s=["classes","setOperator","getOperators","getBrackets","tokenize","toRPN","tree","units"],h=new v;for(t in h)s.indexOf(t)===-1&&delete h[t];return h.setOperator({precedence:8,operator:"\\",action:"slash",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(y){return y}}),h.setOperator({precedence:8,operator:"\\,",action:"slash_comma",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(y){return y}}),h.getBrackets()["{"].maps_to=void 0,h}(),space:"~",dot:" \\cdot ",latex:function(t,s){if((t=t.clone?t.clone():t)instanceof a.classes.Collection&&(t=t.elements),u1(t)){for(var h=[],y=0;y<t.length;y++){var L=t[y];Y(L)||(L=a.parse(L)),h.push(this.latex(L,s))}return this.brackets(h.join(", "),"square")}if(e0(t)){for(var X=`\\begin{pmatrix}
`,y=0;y<t.elements.length;y++){for(var A0=[],Q=t.elements[y],Y0=0;Y0<Q.length;Y0++)A0.push(this.latex(Q[Y0],s));X+=A0.join(" & "),y<t.elements.length-1&&(X+=`\\\\
`)}return X+="\\end{pmatrix}"}if(B0(t)){for(X="\\left[",y=0;y<t.elements.length;y++)X+=this.latex(t.elements[y],s)+" "+(y!==t.elements.length-1?",\\,":"");return X+="\\right]"}if(i0(t)){for(X="\\{",y=0;y<t.elements.length;y++)X+=this.latex(t.elements[y],s)+" "+(y!==t.elements.length-1?",\\,":"");return X+="\\}"}var E0,U0=s==="decimal"||s==="decimals",R1=(t=t.clone()).power,t1=j(R1),S1=t.multiplier.lessThan(0);if(t.group===l0&&U0)return String(t.multiplier.toDecimal()*Math.pow(t.value,t.power.toDecimal()));t.multiplier=t.multiplier.abs(),E0=U0?[String(t.multiplier.toDecimal()),""]:[t.multiplier.num,t.multiplier.den];var x0,P=this.value(t,t1,s,S1);return t1&&R1.negate(),U0?(x0=Y(R1)?f.latex(R1,s):String(R1.toDecimal()),String(x0)==="1"&&(x0="")):x0=Y(R1)?this.latex(R1,s):this.formatFrac(R1,!0),R1=["",""],R1[t1?1:0]=x0,((S1?"-":"")+this.set(E0,P,R1,t.group===z0)).replace(/\+\-/gi,"-")},greek:{alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",delta:"\\delta",epsilon:"\\epsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",iota:"\\iota",kappa:"\\kappa",lambda:"\\lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",omnikron:"\\omnikron",pi:"\\pi",rho:"\\rho",sigma:"\\sigma",tau:"\\tau",upsilon:"\\upsilon",phi:"\\phi",chi:"\\chi",psi:"\\psi",omega:"\\omega",Gamma:"\\Gamma",Delta:"\\Delta",Epsilon:"\\Epsilon",Theta:"\\Theta",Lambda:"\\Lambda",Xi:"\\Xi",Pi:"\\Pi",Sigma:"\\Sigma",Phi:"\\Phi",Psi:"\\Psi",Omega:"\\Omega"},symbols:{arccos:"\\arccos",cos:"\\cos",csc:"\\csc",exp:"\\exp",ker:"\\ker",limsup:"\\limsup",min:"\\min",sinh:"\\sinh",arcsin:"\\arcsin",cosh:"\\cosh",deg:"\\deg",gcd:"\\gcd",lg:"\\lg",ln:"\\ln",Pr:"\\Pr",sqrt:"\\sqrt",sup:"\\sup",arctan:"\\arctan",cot:"\\cot",det:"\\det",hom:"\\hom",lim:"\\lim",log:"\\log",LN:"\\LN",sec:"\\sec",tan:"\\tan",arg:"\\arg",coth:"\\coth",dim:"\\dim",inf:"\\inf",liminf:"\\liminf",max:"\\max",sin:"\\sin",tanh:"\\tanh"},value:function(t,s,h,y){var L,X,A0,Q,Y0,E0,U0=t.group,R1=t.previousGroup,t1=["",""],S1=s?1:0;if(t.isInfinity)t1[S1]="\\infty";else if(U0===Q0||U0===l0||R1===Q0||R1===l0||R1===k0){(e=this.formatSubscripts(t.value)).replace&&(e=e.replace(/(.+)_$/,"$1\\_"));var x0=String(e).split("_"),s=this.greek[x0[0]];s&&(x0[0]=s,e=x0.join("_")),(t=this.symbols[x0[0]])&&(x0[0]=t,e=x0.join("_")),t1[S1]=e}else if(U0===f1||R1===f1){for(var P,V1,X1,N1,y1=[],x0=t.fname,L1=0;L1<t.args.length;L1++){var O1,g2=typeof(O1=t.args[L1])=="string"?O1:this.latex(O1,h);y1.push(g2)}x0===A?t1[S1]="\\sqrt"+this.braces(y1.join(",")):x0===w?t1[S1]=this.brackets(y1.join(","),"abs"):x0===b?t1[S1]=this.brackets(y1.join(","),"parens"):x0==="limit"?t1[S1]=" \\lim\\limits_{"+y1[1]+" \\to "+y1[2]+"} "+y1[0]:x0==="integrate"?t1[S1]="\\int"+this.braces(y1[0])+this.braces("d"+y1[1]):x0==="defint"?t1[S1]="\\int\\limits_"+this.braces(y1[1])+"^"+this.braces(y1[2])+" "+y1[0]+" d"+y1[3]:x0===S||x0===C?((O1=t.args[0]).power.equals(1)&&(O1.isComposite()||O1.isCombination())&&(y1[0]=this.brackets(y1[0])),t1[S1]=y1[0]+(x0===S?"!":"!!")):x0==="floor"?t1[S1]="\\left \\lfloor"+this.braces(y1[0])+"\\right \\rfloor":x0==="ceil"?t1[S1]="\\left \\lceil"+this.braces(y1[0])+"\\right \\rceil":x0===m0.LOG&&1<y1.length?t1[S1]="\\mathrm"+this.braces(m0.LOG)+"_"+this.braces(y1[1])+this.brackets(y1[0]):x0===m0.LOG10?t1[S1]="\\mathrm"+this.braces(m0.LOG)+"_"+this.braces(10)+this.brackets(y1[0]):x0==="sum"?(P=y1[0],V1=y1[1],X1=y1[2],N1=y1[3],t1[S1]="\\sum\\limits_{"+this.braces(V1)+"="+this.braces(X1)+"}^"+this.braces(N1)+" "+this.braces(P)):x0==="product"?(P=y1[0],V1=y1[1],X1=y1[2],N1=y1[3],t1[S1]="\\prod\\limits_{"+this.braces(V1)+"="+this.braces(X1)+"}^"+this.braces(N1)+" "+this.braces(P)):x0==="nthroot"?t1[S1]="\\sqrt["+y1[1]+"]"+this.braces(y1[0]):x0==="mod"?t1[S1]=y1[0]+" \\bmod "+y1[1]:x0==="realpart"?t1[S1]="\\operatorname{Re}"+this.brackets(y1[0]):x0==="imagpart"?t1[S1]="\\operatorname{Im}"+this.brackets(y1[0]):(x0=x0!==""?"\\mathrm"+this.braces(x0.replace(/_/g,"\\_")):"",t.isConversion?t1[S1]=x0+this.brackets(y1.join(""),"parens"):t1[S1]=x0+this.brackets(y1.join(","),"parens"))}else if(t.isComposite()){for(var S2=t.collectSymbols().sort(U0===d0||R1===d0?function(d,N){return N.group-d.group}:function(d,N){return d=Y(d.power)?-1:d.power,(Y(N.power)?-1:N.power)-d}),s2=[],G1=S2.length,L1=0;L1<G1;L1++)s2.push(f.latex(S2[L1],h));var e=s2.join("+");t1[S1]=t.isLinear()&&t.multiplier.equals(1)&&!y?e:this.brackets(e,"parens")}else U0!==z0&&R1!==A1&&R1!==z0||(U0===z0&&t.distributeExponent(),L=[],X=[],A0=[],Q=[],E0=Y0=0,U0=function(l,d,N){if(1<N&&0<d.length)for(var _=d.length,G=0;G<_;G++){var t0=d[G],q0=l[t0];/^\\left\(.+\\right\)\^\{.+\}$/g.test(q0)||/^\\left\(.+\\right\)$/g.test(q0)||(l[t0]=f.brackets(q0,"parens"))}return l},t.each(function(l){var d;j(l.power)?(d=f.latex(l.invert(),h),E0++,l.isComposite()&&(t.multiplier.den!=1&&Math.abs(l.power)==1&&(d=f.brackets(d,"parens")),A0.push(L.length)),L.push(d)):(d=f.latex(l,h),Y0++,l.isComposite()&&(t.multiplier.num!=1&&Math.abs(l.power)==1&&(d=f.brackets(d,"parens")),Q.push(X.length)),X.push(d))}),U0(X,Q,Y0),t1[0]=X.join(this.dot),U0(L,A0,E0),t1[1]=L.join(this.dot));return t1},set:function(Y0,E0,Q,y){function L(U0){return/^\\left\(.+\\right\)$/.test(U0)}var X;Q=Q&&this.formatP(Q),y&&(X=Q[0],Q[0]=""),E0=this.merge(E0,Q);var A0=Y0[0],Q=Y0[1],Y0=E0[0],E0=E0[1];return Y0&&Number(A0)===1&&(A0=""),Number(Q)===1&&(Q=""),Y0=this.join(A0,Y0,L(Y0)?"":this.dot),E0=this.join(Q,E0,L(E0)?"":this.dot),Y0&&E0?(E0=this.frac(Y0,E0),E0=y&&X?this.brackets(E0)+X:E0):Y0},merge:function(t,s){for(var h=[],y=0;y<2;y++)h[y]=t[y]+s[y];return h},join:function(t,s,h){return t||s?t&&!s?t:s&&!t?s:t+h+s:""},formatSubscripts:function(t){for(var s=t.toString().split("_"),h="";1<s.length;)0<s.length&&(h="_"+this.braces(s.pop()+h));return s[0]+h},formatP:function(t){for(var s=0;s<2;s++){var h=t[s];h&&(t[s]="^"+this.braces(h))}return t},formatFrac:function(y,s){var h=y.num.toString(),y=y.den.toString();return s&&h==="1"&&y==="1"?"":y==="1"?h:this.frac(h,y)},frac:function(t,s){return"\\frac"+this.braces(t)+this.braces(s)},braces:function(t){return"{"+t+"}"},brackets:function(t,s){return s={parens:["(",")"],square:["[","]"],brace:["{","}"],abs:["|","|"],angle:["\\langle","\\rangle"]}[s=s||"parens"],"\\left"+s[0]+t+"\\right"+s[1]},filterTokens:function(t){var s=[];u1(t)&&(s.type=t.type);for(var h=["\\","left","right","big","Big","large","Large"],y=0,L=t.length;y<L;y++){var X=t[y],A0=t[y+1];X.value==="\\"&&A0.value==="\\"?s.push(X):u1(X)?s.push(f.filterTokens(X)):h.indexOf(X.value)===-1&&s.push(X)}return s},parse:function(t){function s(V1){return X[V1===void 0?++Q:Q+=V1]}function h(){return f.parse(s())}function y(V1){return V1 in A0?A0[V1]:V1==="*"&&X[Q+1].value==="&"?(s(2),","):V1==="&"?(s(),","):V1==="\\"?"],[":V1}var L="",X=this.filterTokens(t),A0={cdot:"",times:"",infty:"Infinity"},Q=0;for(Y0=X.length;Q<Y0;Q++){var Y0,E0,U0,R1,t1,S1,x0,P=X[Q];P.value==="frac"?L+=h()+"/"+h():P.value in f.symbols?P.value===A&&X[Q+1].type==="vector"&&X[Q+2].type==="Set"?(t1=h(),L+=h()+"^"+$("1/"+t1)):L+=P.value+h():P.value==="int"?(S1=h(),Q++,U0=y((U0=s().value).substring(1,U0.length)),L+="integrate"+$(S1+","+U0)):P.value==="int_"?(Y0=h(),Q++,(E0=s().value)===void 0&&(Q--,E0=h()),S1=h(),(U0=(U0=s().value)===","?s().value:U0)==="differentialD"&&(Q++,U0=s().value),U0==="mathrm"&&(Q++,U0=s().value),L+="defint"+$(S1+","+Y0+","+E0+","+U0)):P.value&&P.value.startsWith("int_")?(Y0=P.value.replace("int_",""),console.log("uppernow"),Q++,(E0=s().value)===void 0&&(Q--,E0=h()),S1=h(),(U0=(U0=s().value)===","?s().value:U0)==="differentialD"&&(Q++,U0=s().value),U0==="mathrm"&&(Q++,U0=s().value),L+="defint"+$(S1+","+Y0+","+E0+","+U0)):P.value==="mathrm"?L+=(S1=X[++Q][0].value)+h():P.value==="sum_"||P.value==="prod_"?(R1=P.value==="sum_"?"sum":"product",x0=s(),Q++,t1=h(),S1=h(),L+=R1+$([S1,y(x0[0]),y(x0[2]),y(t1)].join(","))):P.value==="lim_"?(x0=s(),L+="limit"+$([h(),y(x0[0]),y(x0[2])].join(","))):P.value==="begin"?(x0=s(),Array.isArray(x0)&&x0[0].value==="matrix"&&(L+="matrix([")):P.value==="end"?(x0=s(),Array.isArray(x0)&&x0[0].value==="matrix"&&(L+="])")):Array.isArray(P)?L+=y(f.parse(P)):L+=y(P.value.toString())}return $(L)}};function E(t){B0(t)?this.elements=t.items.slice(0):u1(t)?this.elements=t.slice(0):this.elements=[].slice.call(arguments)}function m(){var t=arguments,s=t.length,h=[];if(e0(t))for(A0=0;A0<s;A0++)h.push(t[A0].slice(0));else for(var y,L,X,A0=0;A0<s;A0++)y=t[A0],B0(y)&&(y=y.elements),X=(y=u1(y)?y:[y]).length,L&&L!==X&&y0("Unable to create Matrix. Row dimensions do not match!"),h.push(y),L=X;this.elements=h}function M(t){if(this.elements=[],t=B0(t)?t:E.fromArray(arguments))for(var s=t.elements,h=0,y=s.length;h<y;h++)this.add(s[h])}E.arrayPrefill=function(t,s){var h=[];s=s||0;for(var y=0;y<t;y++)h[y]=s;return h},E.fromArray=function(t){var s=new E;return s.elements=t,s},E.fromSet=function(t){return E.fromArray(t.elements)},E.prototype={custom:!0,e:function(t){return t<1||t>this.elements.length?null:this.elements[t-1]},set:function(t,s){Y(s)||(s=new r(s)),this.elements[t]=s},dimensions:function(){return this.elements.length},modulus:function(){return f0("SAFE",function(){return a.pow(this.dot(this.clone()),new r(.5))},void 0,this)},eql:function(t){var s=this.elements.length,h=t.elements||t;if(s!==h.length)return!1;do if(Math.abs(a.subtract(this.elements[s-1],h[s-1]).valueOf())>PRECISION)return!1;while(--s);return!0},clone:function(){for(var t=new E,s=this.elements.length,h=0;h<s;h++)t.elements.push(this.elements[h].clone());return this.getter&&(t.getter=this.getter.clone()),t},map:function(t){var s=[];return this.each(function(h,y){s.push(t(h,y))}),new E(s)},each:function(t){for(var s,h=this.elements.length,y=h;t(this.elements[s=y-h],1+s),--h;);},toUnitVector:function(){return f0("SAFE",function(){var t=this.modulus();return t.valueOf()===0?this.clone():this.map(function(s){return a.divide(s,t)})},void 0,this)},angleFrom:function(t){return f0("SAFE",function(){var s=t.elements||t;if(this.elements.length!==s.length)return null;var h=new r(0),y=new r(0),L=new r(0);this.each(function(Q,Y0){h=a.add(h,a.multiply(Q,s[Y0-1])),y=a.add(y,a.multiply(Q,Q)),L=a.add(L,a.multiply(s[Y0-1],s[Y0-1]))});var y=a.pow(y,new r(.5)),L=a.pow(L,new r(.5)),A0=a.multiply(y,L);if(A0.valueOf()===0)return null;var X=a.divide(h,A0),A0=X.valueOf();return A0<-1&&(X=-1),1<A0&&(X=1),new r(Math.acos(X))},void 0,this)},isParallelTo:function(t){return t=this.angleFrom(t).valueOf(),t===null?null:t<=PRECISION},isAntiparallelTo:function(t){return t=this.angleFrom(t).valueOf(),t===null?null:Math.abs(t-Math.PI)<=PRECISION},isPerpendicularTo:function(t){return t=this.dot(t),t===null?null:Math.abs(t)<=PRECISION},add:function(t){return f0("SAFE",function(){var s=t.elements||t;return this.elements.length!==s.length?null:this.map(function(h,y){return a.add(h,s[y-1])})},void 0,this)},subtract:function(t){return f0("SAFE",function(){var s=t.elements||t;return this.elements.length!==s.length?null:this.map(function(h,y){return a.subtract(h,s[y-1])})},void 0,this)},multiply:function(t){return this.map(function(s){return s.clone()*t.clone()})},x:function(t){return this.multiply(t)},dot:function(t){return f0("SAFE",function(){var s=t.elements||t,h=new r(0),y=this.elements.length;if(y!==s.length)return null;for(;h=a.add(h,a.multiply(this.elements[y-1],s[y-1])),--y;);return h},void 0,this)},cross:function(t){var s=t.elements||t;if(this.elements.length!==3||s.length!==3)return null;var h=this.elements;return f0("SAFE",function(){return new E([a.subtract(a.multiply(h[1],s[2]),a.multiply(h[2],s[1])),a.subtract(a.multiply(h[2],s[0]),a.multiply(h[0],s[2])),a.subtract(a.multiply(h[0],s[1]),a.multiply(h[1],s[0]))])},void 0,this)},max:function(){for(var t,s=0,h=this.elements.length,y=h;t=y-h,Math.abs(this.elements[t].valueOf())>Math.abs(s.valueOf())&&(s=this.elements[t]),--h;);return s},magnitude:function(){var t=new r(0);return this.each(function(s){t=a.add(t,a.pow(s,new r(2)))}),a.sqrt(t)},indexOf:function(t){for(var s,h=null,y=this.elements.length,L=y;s=L-y,h===null&&this.elements[s].valueOf()===t.valueOf()&&(h=1+s),--y;);return h},text:function(t){return r2(this)},toString:function(){return this.text()},latex:function(t){for(var s=[],h=0;h<this.elements.length;h++)s.push(f.latex.call(f,this.elements[h],t));return"["+s.join(", ")+"]"}},m.identity=function(t){for(var s=new m,h=0;h<t;h++){s.elements.push([]);for(var y=0;y<t;y++)s.set(h,y,new r(h===y?1:0))}return s},m.fromArray=function(t){function s(h){return m.apply(this,h)}return s.prototype=m.prototype,new s(t)},m.zeroMatrix=function(t,s){for(var h=new m,y=0;y<t;y++)h.elements.push(E.arrayPrefill(s,new r(0)));return h},(m.prototype={custom:!0,get:function(t,s){if(this.elements[t])return this.elements[t][s]},map:function(t,s){var h=new m;return this.each(function(y,L,X){h.set(L,X,t.call(h,y),s)}),h},set:function(t,s,h,y){this.elements[t]||(this.elements[t]=[]),this.elements[t][s]=y||Y(h)?h:new r(h)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(t){return!t||t>this.cols()?[]:this.elements[t-1]},col:function(t){var s=this.rows(),h=[];if(t>this.cols()||!t)return h;for(var y=0;y<s;y++)h.push(this.elements[y][t-1]);return h},eachElement:function(t){for(var s,h=this.rows(),y=this.cols(),L=0;L<h;L++)for(s=0;s<y;s++)t.call(this,this.elements[L][s],L,s)},determinant:function(){if(!this.isSquare())return null;for(var t,s=this.toRightTriangular(),h=s.elements[0][0],y=s.elements.length-1,L=y;h=a.multiply(h,s.elements[t=L-y+1][t]),--y;);return h},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&this.determinant()===0},augment:function(t){var s=this.rows();s!==t.rows()&&y0("Cannot augment matrix. Rows don't match.");for(var h=0;h<s;h++)this.elements[h]=this.elements[h].concat(t.elements[h]);return this},clone:function(){for(var t=this.rows(),s=this.cols(),h=new m,y=0;y<t;y++){h.elements[y]=[];for(var L=0;L<s;L++){var X=this.elements[y][L];h.elements[y][L]=Y(X)?X.clone():X}}return h},invert:function(){return this.isSquare()||y0("Matrix is not square!"),f0("SAFE",function(){var t,s,h,y,L,X,A0,Q=this.elements.length,Y0=Q,E0=m.identity(Q),U0=this.augment(E0).toRightTriangular(),R1=U0.elements[0].length,t1=[];do{for(L=[],h=R1,t1[t=Q-1]=[],X=U0.elements[t][t];A0=a.divide(U0.elements[t][y=R1-h],X.clone()),L.push(A0),Y0<=y&&t1[t].push(A0),--h;);for(U0.elements[t]=L,s=0;s<t;s++){for(L=[],h=R1;L.push(a.subtract(U0.elements[s][y=R1-h].clone(),a.multiply(U0.elements[t][y].clone(),U0.elements[s][t].clone()))),--h;);U0.elements[s]=L}}while(--Q);return m.fromArray(t1)},void 0,this)},toRightTriangular:function(){return f0("SAFE",function(){var t,s,h,y=this.clone(),L=this.elements.length,X=L,A0=this.elements[0].length;do{if(y.elements[s=X-L][s].valueOf()===0){for(var Q=1+s;Q<X;Q++)if((t=y.elements[Q][s])&&t.valueOf()!==0){for(E0=[],U0=A0;E0.push(a.add(y.elements[s][h=A0-U0].clone(),y.elements[Q][h].clone())),--U0;);y.elements[s]=E0;break}}if(y.elements[s][s].valueOf()!==0)for(Q=1+s;Q<X;Q++){for(var Y0=a.divide(y.elements[Q][s].clone(),y.elements[s][s].clone()),E0=[],U0=A0;E0.push((h=A0-U0)<=s?new r(0):a.subtract(y.elements[Q][h].clone(),a.multiply(y.elements[s][h].clone(),Y0.clone()))),--U0;);y.elements[Q]=E0}}while(--L);return y},void 0,this)},transpose:function(){var t,s,h,y=this.elements.length,L=this.elements[0].length,X=new m,A0=L;do for(X.elements[t=L-A0]=[],s=y;X.elements[t][h=y-s]=this.elements[h][t].clone(),--s;);while(--A0);return X},canMultiplyFromLeft:function(t){return t=(e0(t)?t.elements:t).length,this.elements[0].length===t},sameSize:function(t){return this.rows()===t.rows()&&this.cols()===t.cols()},multiply:function(t){return f0("SAFE",function(){var s=t.elements||t;if(!this.canMultiplyFromLeft(s)){if(this.sameSize(t)){for(var h=new m,y=this.rows(),L=0;L<y;L++){var X=a.multiply(new E(this.elements[L]),new E(t.elements[L]));h.elements[L]=X.elements}return h}return null}var A0,Q,Y0,E0,U0,R1=this.elements.length,t1=R1,S1=s[0].length,x0=this.elements[0].length,P=[];do{P[L=t1-R1]=[],A0=S1;do for(Q=S1-A0,Y0=new r(0),E0=x0;Y0=a.add(Y0,a.multiply(this.elements[L][U0=x0-E0],s[U0][Q])),--E0;);while(P[L][Q]=Y0,--A0)}while(--R1);return m.fromArray(P)},void 0,this)},add:function(t,s){var h=new m;return this.sameSize(t)&&this.eachElement(function(y,L,X){var A0=a.add(y.clone(),t.elements[L][X].clone());s&&(A0=s.call(h,A0,y,t.elements[L][X])),h.set(L,X,A0)}),h},subtract:function(t,s){var h=new m;return this.sameSize(t)&&this.eachElement(function(y,L,X){var A0=a.subtract(y.clone(),t.elements[L][X].clone());s&&(A0=s.call(h,A0,y,t.elements[L][X])),h.set(L,X,A0)}),h},negate:function(){return this.each(function(t){return t.negate()}),this},toVector:function(){if(this.rows()!==1&&this.cols()!==1)return this;var t=new E;return t.elements=this.elements,t},toString:function(t,s){for(var h=this.rows(),y=[],L=0;L<h;L++)y.push("["+this.elements[L].map(function(X){var A0=s?X.multiplier.toDecimal():X.toString();return X!==void 0?A0:""}).join(",")+"]");return"matrix"+$(y.join(","))},text:function(){return"matrix("+this.elements.toString("")+")"},latex:function(t){var s=this.cols(),h=this.elements;return o0("\\begin{vmatrix}{0}\\end{vmatrix}",function(){var y,L=[];for(y in h){for(var X=[],A0=0;A0<s;A0++)X.push(f.latex.call(f,h[y][A0],t));L.push(X.join(" & "))}return L.join(" \\cr ")})}}).each=m.prototype.eachElement,M.fromArray=function(t){function s(h){return M.apply(this,h)}return s.prototype=M.prototype,new s(t)},M.prototype={add:function(t){this.contains(t)||this.elements.push(t.clone())},contains:function(t){for(var s=0;s<this.elements.length;s++){var h=this.elements[s];if(t.equals(h))return!0}return!1},each:function(t){for(var s=this.elements,h=new M,y=0,L=s.length;y<L;y++){var X=s[y];t.call(this,X,h,y)}return h},clone:function(){var t=new M;return this.each(function(s){t.add(s.clone())}),t},union:function(t){var s=this.clone();return t.each(function(h){s.add(h)}),s},difference:function(t){var s=this.clone();return t.each(function(h){s.remove(h)}),s},remove:function(t){for(var s=0,h=this.elements.length;s<h;s++)if(this.elements[s].equals(t))return H(this.elements,s),!0;return!1},intersection:function(t){var s=new M,h=this;return t.each(function(y){h.contains(y)&&s.add(y)}),s},intersects:function(t){return 0<this.intersection(t).elements.length},is_subset:function(t){for(var s=t.elements,h=0,y=s.length;h<y;h++)if(!this.contains(s[h]))return!1;return!0},toString:function(){return"{"+this.elements.join(",")+"}"}};var R={dependencies:{_rename:{"Math2.factorial":"factorial"},factorial:{"Math2.gamma":_1.gamma},gamma_incomplete:{"Math2.factorial":_1.factorial},Li:{"Math2.Ei":_1.Ei,"Math2.bigLog":_1.bigLog,Frac:g1},Ci:{"Math2.factorial":_1.factorial},Ei:{"Math2.factorial":_1.factorial},Si:{"Math2.factorial":_1.factorial},Shi:{"Math2.factorial":_1.factorial},Chi:{isInt:x,nround:Z0,"Math2.num_integrate":_1.num_integrate},factor:{"Math2.ifactor":_1.ifactor,Symbol:r},num_integrate:{"Math2.simpson":_1.simpson,nround:Z0},fib:{even:i1}},reformat:{diff:function(y,s){var h=y.args[1].toString(),y="var f = "+R.build(y.args[0].toString(),[h])+";";return s[1]+="var diff = "+_1.diff.toString()+";",s[1]+=y,["diff(f)("+h+")",s]}},getProperName:function(t){return{continued_fraction:"continuedFraction"}[t]||t},compileDependencies:function(t,s){var h,y,L=R.dependencies[t],X=s&&s[1]?s[1]:"",A0=s&&s[0]?s[0]:{};for(h in L)typeof L[h]!="object"&&(X+="var "+(1<(y=h.split(".")).length?y[1]:y[0])+"="+L[h]+";",A0[h]=y.pop());return[A0,X]},getArgsDeps:function(t,s){for(var h=t.args,y=0;y<h.length;y++)t.args[y].each(function(L){L.group===f1&&(s=R.compileDependencies(L.fname,s))});return s},build:function(t,s){t=f0("PARSE2NUMBER",function(){return a.parse(t)},!0);var h=C0(t),y=[],L=[],X=function(E0,U0){E0.fname===""&&(E0=r.unwrapPARENS(E0)),U0=U0||[];function R1(N1){return N1=N1 in Math?"Math."+N1:(N1=R.getProperName(N1),y.indexOf(N1)===-1&&(U0.push("var "+N1+" = "+_1[N1].toString()+"; "),y.push(N1)),N1),N1+=$(E0.args.map(function(y1){return X(y1,U0)[0]}).join(","))}var t1,S1,x0=[],P=E0.group,V1="",X1=function(L1){var y1,L1=L1===z0?"*":"+",O1=[];for(y1 in E0.symbols){var g2=E0.symbols[y1],S2=X(g2,U0)[0];g2.isComposite()&&(S2=$(S2)),O1.push(S2)}return L1=O1.join(L1),L1=L1&&!E0.multiplier.equals(1)?$(L1):L1};return P===k0?x0.push(E0.multiplier.toDecimal()):E0.multiplier.equals(-1)?V1="-":E0.multiplier.equals(1)||x0.push(E0.multiplier.toDecimal()),P===Q0||P===l0?t1=E0.value:P===f1?(L=R.compileDependencies(E0.fname,L),L=R.getArgsDeps(E0,L),t1=R.reformat[E0.fname]?(S1=R.reformat[E0.fname](E0,L),L=S1[1],S1[0]):R1(E0.fname)):P===A1?(P=E0.previousGroup)===k0||P===Q0?t1=E0.value:P===f1?(t1=R1(E0.fname),L=R.compileDependencies(E0.fname,L),L=R.getArgsDeps(E0,L)):t1=X1(E0.previousGroup):t1=X1(E0.group),E0.group===k0||E0.power.equals(1)||(X1=X(a.parse(E0.power)),U0.push(X1[1]),t1="Math.pow"+$(t1+","+X1[0])),t1&&x0.push(V1+t1),[x0.join("*"),U0.join("").replace(/\n+\s+/g," ")]};s&&(h=s);var A0,Q=X(t);for(A0 in L[0]){var Y0=L[0][A0];Q[1]=Q[1].replace(A0,Y0),L[1]=L[1].replace(A0,Y0)}return new Function(h,(L[1]||"")+Q[1]+" return "+Q[0]+";")}};U(a.CONSTANTS),U(a.functions),a.initConstants(),a.error||(a.error=y0),m0.LOG_FNS={log:a.functions.log,log10:a.functions.log10};function D(t,s,h,y){var L=!1,X=/^([a-z_][a-z\d\_]*)\(([a-z_,\s]*)\):=(.+)$/gi.exec(t);return X?_2.setFunction(X[1],X[2].split(","),X[3]):(t instanceof n2&&(t=t.toString()),(h=u1(h)?h:h===void 0?[]:[h]).forEach(function(A0){var Q;A0!=="numer"?(Q=a.functions[h])&&Q[1]===1&&(t=`${A0}(${t})`):L=!0}),X=f0("PARSE2NUMBER",function(){return a.parse(t,s)},L||m0.PARSE2NUMBER),y?V[y-1]=X:V.push(X),new n2(X))}var U={allSame:g0,allNumeric:function(t){for(var s=0;s<t.length;s++)if(!n0(t[s]))return!1;return!0},arguments2Array:v0,arrayAddSlices:function(t,s){s=s||20;var h=[];h.push(t[0]);for(var y=0;y<t.length-1;y++)for(var L=t[y],X=(t[y+1]-L)/s,A0=0;A0<s;A0++)h.push(L+=X);return h},arrayClone:function(t){for(var s=[],h=t.length,y=0;y<h;y++)s[y]=t[y].clone();return s},arrayMax:function(t){return Math.max.apply(void 0,t)},arrayMin:c1,arrayEqual:function(t,s){if(t.sort(),s.sort(),t.length!==s.length)return!1;for(var h=0;h<t.length;h++)if(t[h]!==s[h])return!1;return!0},arrayUnique:o1,arrayGetVariables:function(t){for(var s=C0(t[0],null,null),h=1,y=t.length;h<y;h++)s=s.concat(C0(t[h]));return s=o1(s).sort()},arraySum:function(t,s){for(var L=new r(0),h=0;h<t.length;h++)var y=t[h],L=a.add(L,Y(y)?y:a.parse(y));return s?Number(L):L},block:f0,build:R.build,clearU:function(t){t=S0.indexOf(t),t!==-1&&(S0[t]=void 0)},comboSort:function(t,s){for(var h=t.length,y=[],L=0;L<t.length;L++)y.push([t[L],s[L]]);y.sort(function(Q,Y0){return Q[0]-Y0[0]});for(var X=[],A0=[],L=0;L<h;L++)X.push(y[L][0]),A0.push(y[L][1]);return[X,A0]},compare:function(t,s,h){for(var y,L={},X=0;X<h.length;X++)L[h[X]]=new r(Math.floor(5*Math.random())+1);return f0("PARSE2NUMBER",function(){y=a.parse(t,L).equals(a.parse(s,L))}),y},convertToVector:b0,customError:G0,customType:function(t){return t!==void 0&&t.custom},decompose_fn:l1,each:T0,evaluate:u0,even:i1,evenFraction:P1,fillHoles:function(t,s){s=s||t.length;for(var h=0;h<s;h++)t[h]||(t[h]=new r(0));return t},firstObject:D0,format:o0,generatePrimes:K0,getCoeffs:function(t,s,h){var y=[];t.each(function(Y0){var A0,Q=Y0.contains(s)?(A0=Y0.stripVar(s),a.divide(Y0.clone(),A0.clone()).power.toDecimal()):(A0=Y0,0),Y0=y[Q];y[Q]=Y0?a.add(Y0,A0):A0},!0);for(var L=0;L<y.length;L++)y[L]||(y[L]=new r(0));return y},getU:function(t){for(var s="u",h=0,y=C0(t);S0.indexOf(s)!==-1||y.indexOf(s)!==-1;)s="u"+h++;for(var L=0,X=S0.length;L<=X;L++)if(!S0[L]){S0[L]=s;break}return s},importFunctions:function(){var t,s={};for(t in a.functions)s[t]=a.functions[t][0];return s},inBrackets:$,isArray:u1,isExpression:W,isFraction:a0,isInt:x,isMatrix:e0,isNegative:j,isNumericSymbol:H0,isPrime:s0,isReserved:N0,isSymbol:Y,isVariableSymbol:function(t){return t.group===Q0&&t.multiplier.equals(1)&&t.power.equals(1)},isVector:B0,keys:F0,knownVariable:function(t,s){var h={};return h[t]=s,h},nroots:function(t){var s,h;if(t.group===f1&&t.fname===""?(s=r.unwrapPARENS(a.parse(t).toLinear()),h=a.parse(t.power)):t.group===l0&&(s=a.parse(t.value),h=a.parse(t.power)),s&&h&&s.group===k0&&h.group===k0&&s.multiplier.isNegative()){for(var y=[],L=r.toPolarFormArray(u0(t))[0],X=a.arg(s),A0=h.multiplier.den.toString(),Q=h.multiplier.num.toString(),Y0=0;Y0<A0;Y0++){var E0=u0(a.parse(o0("(({0})+2*pi*({1}))/({2})",X,Y0,A0))).multiplier.toDecimal();y.push(u0(a.parse(o0("(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})",L,A0,m0.IMAGINARY,E0,Q))))}return E.fromArray(y)}return t.isConstant(!0,!0)?(s=t.sign(),X=u0(t.abs()),y=[(h=a.sqrt(X)).clone(),h.negate()],s<0&&(y=y.map(function(U0){return a.multiply(U0,r.imaginary())}))):y=[a.parse(t)],E.fromArray(y)},remove:H,reserveNames:U,range:function(t,s,h){var y=[];h=h||1;for(var L=t;L<=s;L++)y.push(L*h);return y},round:Z0,sameSign:function(t,s){return t<0==s<0},scientificToDecimal:x1,separate:m1,stringReplace:function(t,s,h,y){return t.substr(0,s)+y+t.substr(h,t.length)},text:r2,validateName:I1,variables:C0,warn:C1},F={groups:Z,Symbol:r,Expression:n2,Frac:g1,Vector:E,Matrix:m,Parser:v,Scientific:v2,Fraction:p,Math2:_1,LaTeX:f,Utils:U,PARSER:a,PARENTHESIS:b,Settings:m0,err:y0,bigInt:r0,bigDec:p1,exceptions:F1};return D.rpn=function(t){return a.tokenize(a.toRPN(t))},D.convertToLaTeX=function(t,s){return a.toTeX(t,s)},D.convertFromLaTeX=function(t){return t=f.parse(a.tokenize(t)),new n2(a.parse(t))},D.version=function(t){if(t)try{return F[t].version}catch{return"No module named "+t+" found!"}return"1.1.13"},D.getWarnings=function(){return h0},D.setConstant=function(t,s){if(I1(t),!N0(t))if(s==="delete"||s==="")delete a.CONSTANTS[t];else{if(isNaN(s))throw new i2("Constant must be a number!");a.CONSTANTS[t]=s}return this},D.getConstant=function(t){return String(a.constant[t])},D.setFunction=c0,D.getCore=function(){return F},D.getExpression=D.getEquation=n2.getExpression,D.reserved=function(t){return t?S0:S0.join(", ")},D.clear=function(t,s){return t==="all"?V=[]:t==="last"?V.pop():t==="first"?V.shift():(t=t?t-1:V.length,s===!0?V[t]=void 0:H(V,t)),this},D.flush=function(){return this.clear("all"),this},D.expressions=function(t,s,h){for(var y=t?{}:[],L=0;L<V.length;L++){var X=s?f.latex(V[L],h):r2(V[L],h);t?y[L+1]=X:y.push(X)}return y},D.register=function(t){var s=this.getCore();if(u1(t))for(var h=0;h<t.length;h++)t&&this.register(t[h]);else if(t&&m0.exclude.indexOf(t.name)===-1){if(t.dependencies){for(h=0;h<t.dependencies.length;h++)if(!s[t.dependencies[h]])throw new Error(o0("{0} requires {1} to be loaded!",t.name,t.dependencies[h]))}var y=t.parent,L=t.build.call(s);y&&(s[y]||(s[t.parent]={}),(y==="nerdamer"?this:s[y])[t.name]=L),t.visible&&(a.functions[t.name]=[L,t.numargs])}},D.validateName=I1,D.validVarName=function(t){try{return I1(t),S0.indexOf(t)===-1}catch{return!1}},D.supported=function(){return F0(a.functions)},D.numEquations=D.numExpressions=function(){return V.length},D.setVar=function(t,s){return I1(t),t in a.CONSTANTS&&y0("Cannot set value for constant "+t),s==="delete"||s===""?delete K[t]:K[t]=Y(s)?s:a.parse(s),this},D.getVar=function(t){return K[t]},D.clearVars=function(){return K={},this},D.load=function(t){return t.call(this),this},D.getVars=function(t,s){var h={};if((t=t||"text")==="object")h=K;else for(var y in K)t==="latex"?h[y]=K[y].latex(s):t==="text"&&(h[y]=K[y].text(s));return h},D.set=function(t,s){if(typeof t=="object")for(var h in t)D.set(h,t[h]);["SAFE"].indexOf(t)!==-1&&y0("Cannot modify setting: "+t),t==="PRECISION"?(p1.set({precision:s}),21<(m0.PRECISION=s)&&this.set("USE_BIG",!0)):t==="USE_LN"&&s===!0?(m0.LOG="LN",m0.LOG10="log",a.functions.log=m0.LOG_FNS.log10,a.functions.log[0]=function(y){return y.isConstant()?new r(Math.log10(y)):a.symfunction(m0.LOG10,[y])},a.functions.LN=m0.LOG_FNS.log,delete a.functions.log10):m0[t]=s},D.get=function(t){return m0[t]},D.updateAPI=function(t){for(var s in a.functions)s in D&&!t||(D[s]=function(h){return function(){for(var y=[].slice.call(arguments),L=0;L<y.length;L++)y[L]=a.parse(y[L]);return new n2(f0("PARSE2NUMBER",function(){return a.callfunction(h,y)}))}}(s))},D.replaceFunction=function(t,s,L){var y=a.functions[t],L=L===void 0?y[1]:L;a.functions[t]=[s.call(void 0,y[0],F),L]},D.setOperator=function(t,s){a.setOperator(t,s)},D.getOperator=function(t){return a.getOperator(t)},D.aliasOperator=function(t,s){a.aliasOperator(t,s)},D.tree=function(t){return a.tree(a.toRPN(a.tokenize(t)))},D.htmlTree=function(t,s){return`<div class="tree">
    <ul>
        <li>
`+this.tree(t).toHTML(3,s)+`
        </li>
    </ul>
</div>`},D.addPeeker=function(t,s){a.peekers[t]&&a.peekers[t].push(s)},D.removePeeker=function(t,s){H(a.peekers[t],s)},D.parse=function(t){return String(t).split(";").map(function(s){return a.parse(s)})},D.updateAPI(),D}({bigInt:function(){var B=function(a){var r0=1e7,p1=7,Z=9007199254740992,R0=j(Z),E1=Math.log(Z);function m0(x,q){return x===void 0?m0[0]:q===void 0||+q==10?H0(x):Y(x,q)}function G0(x,q){this.value=x,this.sign=q,this.isSmall=!1}function N0(x){this.value=x,this.sign=x<0,this.isSmall=!0}function W(x){return-Z<x&&x<Z}function j(x){return x<1e7?[x]:x<1e14?[x%1e7,Math.floor(x/1e7)]:[x%1e7,Math.floor(x/1e7)%1e7,Math.floor(x/1e14)]}function c1(x){T0(x);var q=x.length;if(q<4&&S(x,R0)<0)switch(q){case 0:return 0;case 1:return x[0];case 2:return x[0]+x[1]*r0;default:return x[0]+(x[1]+x[2]*r0)*r0}return x}function T0(x){for(var q=x.length;x[--q]===0;);x.length=q+1}function o1(x){for(var q=new Array(x),$=-1;++$<x;)q[$]=0;return q}function K0(x){return 0<x?Math.floor(x):Math.ceil(x)}function k0(x,q){for(var $,o0=x.length,F0=q.length,D0=new Array(o0),c0=0,l1=r0,Z0=0;Z0<F0;Z0++)$=x[Z0]+q[Z0]+c0,D0[Z0]=$-(c0=l1<=$?1:0)*l1;for(;Z0<o0;)$=x[Z0]+c0,D0[Z0++]=$-(c0=$===l1?1:0)*l1;return 0<c0&&D0.push(c0),D0}function l0(x,q){return x.length>=q.length?k0(x,q):k0(q,x)}function Q0(x,q){for(var $,o0=x.length,F0=new Array(o0),D0=r0,c0=0;c0<o0;c0++)$=x[c0]-D0+q,q=Math.floor($/D0),F0[c0]=$-q*D0,q+=1;for(;0<q;)F0[c0++]=q%D0,q=Math.floor(q/D0);return F0}function A1(x,q){for(var $,o0=x.length,F0=q.length,D0=new Array(o0),c0=0,l1=r0,Z0=0;Z0<F0;Z0++)c0=($=x[Z0]-c0-q[Z0])<0?($+=l1,1):0,D0[Z0]=$;for(Z0=F0;Z0<o0;Z0++){if(!(($=x[Z0]-c0)<0)){D0[Z0++]=$;break}$+=l1,D0[Z0]=$}for(;Z0<o0;Z0++)D0[Z0]=x[Z0];return T0(D0),D0}function f1(x,q,$){for(var o0,F0=x.length,D0=new Array(F0),c0=-q,l1=r0,Z0=0;Z0<F0;Z0++)o0=x[Z0]+c0,c0=Math.floor(o0/l1),D0[Z0]=(o0%=l1)<0?o0+l1:o0;return typeof(D0=c1(D0))=="number"?new N0(D0=$?-D0:D0):new G0(D0,$)}function h1(x,q){for(var $,o0,F0=x.length,D0=q.length,c0=o1(F0+D0),l1=r0,Z0=0;Z0<F0;++Z0)for(var i1=x[Z0],P1=0;P1<D0;++P1)$=i1*q[P1]+c0[Z0+P1],o0=Math.floor($/l1),c0[Z0+P1]=$-o0*l1,c0[Z0+P1+1]+=o0;return T0(c0),c0}function z0(x,q){for(var $,o0=x.length,F0=new Array(o0),D0=r0,c0=0,l1=0;l1<o0;l1++)$=x[l1]*q+c0,c0=Math.floor($/D0),F0[l1]=$-c0*D0;for(;0<c0;)F0[l1++]=c0%D0,c0=Math.floor(c0/D0);return F0}function d0(x,q){for(var $=[];0<q--;)$.push(0);return $.concat(x)}function g(x,q,$){return new G0(x<r0?z0(q,x):h1(q,j(x)),$)}function b(x){for(var q,$=x.length,o0=o1($+$),F0=r0,D0=0;D0<$;D0++){for(var c0,l1=0-(c0=x[D0])*c0,Z0=D0;Z0<$;Z0++)q=c0*x[Z0]*2+o0[D0+Z0]+l1,l1=Math.floor(q/F0),o0[D0+Z0]=q-l1*F0;o0[D0+$]=l1}return T0(o0),o0}function A(x,q){for(var $,o0=x.length,F0=o1(o0),D0=r0,c0=0,l1=o0-1;0<=l1;--l1)c0=($=c0*D0+x[l1])-($=K0($/q))*q,F0[l1]=0|$;return[F0,0|c0]}function w(Z0,q){var c0=H0(q),$=Z0.value,o0=c0.value;if(o0===0)throw new Error("Cannot divide by zero");if(Z0.isSmall)return c0.isSmall?[new N0(K0($/o0)),new N0($%o0)]:[m0[0],Z0];if(c0.isSmall){if(o0===1)return[Z0,m0[0]];if(o0==-1)return[Z0.negate(),m0[0]];var F0=Math.abs(o0);if(F0<r0){var D0=c1((l1=A($,F0))[0]),q=l1[1];return Z0.sign&&(q=-q),typeof D0=="number"?[new N0(D0=Z0.sign!==c0.sign?-D0:D0),new N0(q)]:[new G0(D0,Z0.sign!==c0.sign),new N0(q)]}o0=j(F0)}if(F0=S($,o0),F0===-1)return[m0[0],Z0];if(F0===0)return[m0[Z0.sign===c0.sign?1:-1],m0[0]];D0=(l1=($.length+o0.length<=200?function(i1,P1){var T,H,f0,v0,u0,b0,O0,M0=i1.length,P0=P1.length,I0=r0,d1=o1(P1.length),j0=P1[P0-1],v1=Math.ceil(I0/(2*j0)),U1=z0(i1,v1),i2=z0(P1,v1);for(U1.length<=M0&&U1.push(0),i2.push(0),j0=i2[P0-1],H=M0-P0;0<=H;H--){for(T=I0-1,U1[H+P0]!==j0&&(T=Math.floor((U1[H+P0]*I0+U1[H+P0-1])/j0)),b0=i2.length,u0=v0=f0=0;u0<b0;u0++)f0+=T*i2[u0],O0=Math.floor(f0/I0),v0+=U1[H+u0]-(f0-O0*I0),f0=O0,v0=v0<0?(U1[H+u0]=v0+I0,-1):(U1[H+u0]=v0,0);for(;v0!==0;){for(--T,u0=f0=0;u0<b0;u0++)f0=(f0+=U1[H+u0]-I0+i2[u0])<0?(U1[H+u0]=f0+I0,0):(U1[H+u0]=f0,1);v0+=f0}d1[H]=T}return U1=A(U1,v1)[0],[c1(d1),c1(U1)]}:function(i1,P1){for(var T,H,f0,v0,u0,b0=i1.length,O0=P1.length,M0=[],P0=[],I0=r0;b0;)if(P0.unshift(i1[--b0]),T0(P0),S(P0,P1)<0)M0.push(0);else{for(f0=P0[(H=P0.length)-1]*I0+P0[H-2],v0=P1[O0-1]*I0+P1[O0-2],O0<H&&(f0=(f0+1)*I0),T=Math.ceil(f0/v0);!(S(u0=z0(P1,T),P0)<=0)&&--T;);M0.push(T),P0=A1(P0,u0)}return M0.reverse(),[c1(M0),c1(P0)]})($,o0))[0];var c0=Z0.sign!==c0.sign,l1=l1[1],Z0=Z0.sign;return[D0=typeof D0=="number"?new N0(D0=c0?-D0:D0):new G0(D0,c0),l1=typeof l1=="number"?new N0(l1=Z0?-l1:l1):new G0(l1,Z0)]}function S(x,q){if(x.length!==q.length)return x.length>q.length?1:-1;for(var $=x.length-1;0<=$;$--)if(x[$]!==q[$])return x[$]>q[$]?1:-1;return 0}function C(x){return x=x.abs(),!x.isUnit()&&(!!(x.equals(2)||x.equals(3)||x.equals(5))||!(x.isEven()||x.isDivisibleBy(3)||x.isDivisibleBy(5))&&(!!x.lesser(49)||void 0))}function V(x,q){for(var $,o0,F0,D0=x.prev(),c0=D0,l1=0;c0.isEven();)c0=c0.divide(2),l1++;t:for(o0=0;o0<q.length;o0++)if(!x.lesser(q[o0])&&!(F0=B(q[o0]).modPow(c0,x)).equals(m0[1])&&!F0.equals(D0)){for($=l1-1;$!=0;$--){if((F0=F0.square().mod(x)).isUnit())return!1;if(F0.equals(D0))continue t}return!1}return!0}G0.prototype=Object.create(m0.prototype),N0.prototype=Object.create(m0.prototype),G0.prototype.plus=G0.prototype.add=function(o0){var q=H0(o0);if(this.sign!==q.sign)return this.subtract(q.negate());var $=this.value,o0=q.value;return q.isSmall?new G0(Q0($,Math.abs(o0)),this.sign):new G0(l0($,o0),this.sign)},N0.prototype.plus=N0.prototype.add=function(x){var q=H0(x),$=this.value;if($<0!==q.sign)return this.subtract(q.negate());if(x=q.value,q.isSmall){if(W($+x))return new N0($+x);x=j(Math.abs(x))}return new G0(Q0(x,Math.abs($)),$<0)},G0.prototype.minus=G0.prototype.subtract=function(F0){var q=H0(F0);if(this.sign!==q.sign)return this.add(q.negate());var $,o0=this.value,F0=q.value;return q.isSmall?f1(o0,Math.abs(F0),this.sign):(q=o0,o0=F0,F0=this.sign,0<=S(q,o0)?$=A1(q,o0):($=A1(o0,q),F0=!F0),typeof($=c1($))=="number"?new N0($=F0?-$:$):new G0($,F0))},N0.prototype.minus=N0.prototype.subtract=function(x){var q=H0(x),$=this.value;return $<0!==q.sign?this.add(q.negate()):(x=q.value,q.isSmall?new N0($-x):f1(x,Math.abs($),0<=$))},G0.prototype.negate=function(){return new G0(this.value,!this.sign)},N0.prototype.negate=function(){var x=this.sign,q=new N0(-this.value);return q.sign=!x,q},G0.prototype.abs=function(){return new G0(this.value,!1)},N0.prototype.abs=function(){return new N0(Math.abs(this.value))},G0.prototype.times=G0.prototype.multiply=function(D0){var q,$=H0(D0),o0=this.value,F0=$.value,D0=this.sign!==$.sign;if($.isSmall){if(F0===0)return m0[0];if(F0===1)return this;if(F0===-1)return this.negate();if((q=Math.abs(F0))<r0)return new G0(z0(o0,q),D0);F0=j(q)}return $=o0.length,q=F0.length,new G0((0<-.012*$-.012*q+15e-6*$*q?function c0(H,f0){if((u0=Math.max(H.length,f0.length))<=30)return h1(H,f0);var u0=Math.ceil(u0/2),i1=H.slice(u0),P1=H.slice(0,u0),v0=f0.slice(u0),T=f0.slice(0,u0),H=c0(P1,T),f0=c0(i1,v0),v0=c0(l0(P1,i1),l0(T,v0)),u0=l0(l0(H,d0(A1(A1(v0,H),f0),u0)),d0(f0,2*u0));return T0(u0),u0}:h1)(o0,F0),D0)},N0.prototype._multiplyBySmall=function(x){return W(x.value*this.value)?new N0(x.value*this.value):g(Math.abs(x.value),j(Math.abs(this.value)),this.sign!==x.sign)},G0.prototype._multiplyBySmall=function(x){return x.value===0?m0[0]:x.value===1?this:x.value===-1?this.negate():g(Math.abs(x.value),this.value,this.sign!==x.sign)},N0.prototype.times=N0.prototype.multiply=function(x){return H0(x)._multiplyBySmall(this)},G0.prototype.square=function(){return new G0(b(this.value),!1)},N0.prototype.square=function(){var x=this.value*this.value;return W(x)?new N0(x):new G0(b(j(Math.abs(this.value))),!1)},N0.prototype.divmod=G0.prototype.divmod=function(x){return x=w(this,x),{quotient:x[0],remainder:x[1]}},N0.prototype.over=N0.prototype.divide=G0.prototype.over=G0.prototype.divide=function(x){return w(this,x)[0]},N0.prototype.remainder=N0.prototype.mod=G0.prototype.remainder=G0.prototype.mod=function(x){return w(this,x)[1]},G0.prototype.pow=function(D0){var q,$,o0,F0=H0(D0),D0=this.value,c0=F0.value;if(c0===0)return m0[1];if(D0===0)return m0[0];if(D0===1)return m0[1];if(D0===-1)return F0.isEven()?m0[1]:m0[-1];if(F0.sign)return m0[0];if(!F0.isSmall)throw new Error("The exponent "+F0.toString()+" is too large.");if(this.isSmall&&W(q=Math.pow(D0,c0)))return new N0(K0(q));for($=this,o0=m0[1];!0&c0&&(o0=o0.times($),--c0),c0!==0;)c0/=2,$=$.square();return o0},N0.prototype.pow=G0.prototype.pow,N0.prototype.modPow=G0.prototype.modPow=function(x,q){if(x=H0(x),(q=H0(q)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var $=m0[1],o0=this.mod(q);x.isPositive();){if(o0.isZero())return m0[0];x.isOdd()&&($=$.multiply(o0).mod(q)),x=x.divide(2),o0=o0.square().mod(q)}return $},G0.prototype.compareAbs=function(o0){var q=H0(o0),$=this.value,o0=q.value;return q.isSmall?1:S($,o0)},N0.prototype.compareAbs=function(o0){var q=H0(o0),$=Math.abs(this.value),o0=q.value;return q.isSmall?$===(o0=Math.abs(o0))?0:o0<$?1:-1:-1},G0.prototype.compareTo=G0.prototype.compare=function(o0){if(o0===1/0)return-1;if(o0===-1/0)return 1;var q=H0(o0),$=this.value,o0=q.value;return this.sign!==q.sign?q.sign?1:-1:q.isSmall?this.sign?-1:1:S($,o0)*(this.sign?-1:1)},N0.prototype.compareTo=N0.prototype.compare=function(o0){if(o0===1/0)return-1;if(o0===-1/0)return 1;var q=H0(o0),$=this.value,o0=q.value;return q.isSmall?$==o0?0:o0<$?1:-1:$<0!==q.sign?$<0?-1:1:$<0?1:-1},N0.prototype.eq=N0.prototype.equals=G0.prototype.eq=G0.prototype.equals=function(x){return this.compare(x)===0},N0.prototype.neq=N0.prototype.notEquals=G0.prototype.neq=G0.prototype.notEquals=function(x){return this.compare(x)!==0},N0.prototype.gt=N0.prototype.greater=G0.prototype.gt=G0.prototype.greater=function(x){return 0<this.compare(x)},N0.prototype.lt=N0.prototype.lesser=G0.prototype.lt=G0.prototype.lesser=function(x){return this.compare(x)<0},N0.prototype.geq=N0.prototype.greaterOrEquals=G0.prototype.geq=G0.prototype.greaterOrEquals=function(x){return 0<=this.compare(x)},N0.prototype.leq=N0.prototype.lesserOrEquals=G0.prototype.leq=G0.prototype.lesserOrEquals=function(x){return this.compare(x)<=0},G0.prototype.isEven=function(){return(1&this.value[0])==0},N0.prototype.isEven=function(){return(1&this.value)==0},G0.prototype.isOdd=function(){return(1&this.value[0])==1},N0.prototype.isOdd=function(){return(1&this.value)==1},G0.prototype.isPositive=function(){return!this.sign},N0.prototype.isPositive=function(){return 0<this.value},G0.prototype.isNegative=function(){return this.sign},N0.prototype.isNegative=function(){return this.value<0},G0.prototype.isUnit=function(){return!1},N0.prototype.isUnit=function(){return Math.abs(this.value)===1},G0.prototype.isZero=function(){return!1},N0.prototype.isZero=function(){return this.value===0},N0.prototype.isDivisibleBy=G0.prototype.isDivisibleBy=function($){var q=H0($),$=q.value;return $!==0&&($===1||($===2?this.isEven():this.mod(q).equals(m0[0])))},N0.prototype.isPrime=G0.prototype.isPrime=function(x){var $=C(this);if($!==a)return $;var q=this.abs(),$=q.bitLength();if($<=64)return V(q,[2,325,9375,28178,450775,9780504,1795265022]);for(var $=Math.log(2)*$,o0=Math.ceil(x===!0?2*Math.pow($,2):$),F0=[],D0=0;D0<o0;D0++)F0.push(B(D0+2));return V(q,F0)},N0.prototype.isProbablePrime=G0.prototype.isProbablePrime=function(x){var q=C(this);if(q!==a)return q;for(var $=this.abs(),o0=x===a?5:x,F0=[],D0=0;D0<o0;D0++)F0.push(B.randBetween(2,$.minus(2)));return V($,F0)},N0.prototype.modInv=G0.prototype.modInv=function(x){for(var q,$,o0=B.zero,F0=B.one,D0=H0(x),c0=this.abs();!c0.equals(B.zero);)q=D0.divide(c0),$=D0,D0=c0,F0=o0.subtract(q.multiply(o0=F0)),c0=$.subtract(q.multiply(c0));if(!D0.equals(1))throw new Error(this.toString()+" and "+x.toString()+" are not co-prime");return o0.compare(0)===-1&&(o0=o0.add(x)),this.isNegative()?o0.negate():o0},G0.prototype.next=function(){var x=this.value;return this.sign?f1(x,1,this.sign):new G0(Q0(x,1),this.sign)},N0.prototype.next=function(){var x=this.value;return x+1<Z?new N0(x+1):new G0(R0,!1)},G0.prototype.prev=function(){var x=this.value;return this.sign?new G0(Q0(x,1),!0):f1(x,1,this.sign)},N0.prototype.prev=function(){var x=this.value;return-Z<x-1?new N0(x-1):new G0(R0,!0)};for(var K=[1];2*K[K.length-1]<=r0;)K.push(2*K[K.length-1]);var S0=K.length,h0=K[S0-1];function y0(x){return(typeof x=="number"||typeof x=="string")&&+Math.abs(x)<=r0||x instanceof G0&&x.value.length<=1}function g0(x,q,$){q=H0(q);for(var o0=x.isNegative(),F0=q.isNegative(),D0=o0?x.not():x,c0=F0?q.not():q,l1=0,Z0=0,i1=null,P1=null,T=[];!D0.isZero()||!c0.isZero();)l1=(i1=w(D0,h0))[1].toJSNumber(),o0&&(l1=h0-1-l1),Z0=(P1=w(c0,h0))[1].toJSNumber(),D0=i1[0],c0=P1[0],T.push($(l1,Z0=F0?h0-1-Z0:Z0));for(var H=$(o0?1:0,F0?1:0)!==0?B(-1):B(0),f0=T.length-1;0<=f0;--f0)H=H.multiply(h0).add(B(T[f0]));return H}N0.prototype.shiftLeft=G0.prototype.shiftLeft=function(x){if(!y0(x))throw new Error(String(x)+" is too large for shifting.");if((x=+x)<0)return this.shiftRight(-x);var q=this;if(q.isZero())return q;for(;S0<=x;)q=q.multiply(h0),x-=S0-1;return q.multiply(K[x])},N0.prototype.shiftRight=G0.prototype.shiftRight=function(x){var q;if(!y0(x))throw new Error(String(x)+" is too large for shifting.");if((x=+x)<0)return this.shiftLeft(-x);for(var $=this;S0<=x;){if($.isZero()||$.isNegative()&&$.isUnit())return $;$=(q=w($,h0))[1].isNegative()?q[0].prev():q[0],x-=S0-1}return(q=w($,K[x]))[1].isNegative()?q[0].prev():q[0]},N0.prototype.not=G0.prototype.not=function(){return this.negate().prev()},N0.prototype.and=G0.prototype.and=function(x){return g0(this,x,function(q,$){return q&$})},N0.prototype.or=G0.prototype.or=function(x){return g0(this,x,function(q,$){return q|$})},N0.prototype.xor=G0.prototype.xor=function(x){return g0(this,x,function(q,$){return q^$})};var C1=1<<30,I1=(r0&-r0)*(r0&-r0)|C1;function x1(x){return x=x.value,x=typeof x=="number"?x|C1:x[0]+x[1]*r0|I1,x&-x}function s0(x,q){return x=H0(x),q=H0(q),x.greater(q)?x:q}function n0(x,q){return x=H0(x),q=H0(q),x.lesser(q)?x:q}function a0(x,q){if(x=H0(x).abs(),q=H0(q).abs(),x.equals(q))return x;if(x.isZero())return q;if(q.isZero())return x;for(var $,o0,F0=m0[1];x.isEven()&&q.isEven();)$=Math.min(x1(x),x1(q)),x=x.divide($),q=q.divide($),F0=F0.multiply($);for(;x.isEven();)x=x.divide(x1(x));do for(;q.isEven();)q=q.divide(x1(q));while(x.greater(q)&&(o0=q,q=x,x=o0),!(q=q.subtract(x)).isZero());return F0.isUnit()?x:x.multiply(F0)}N0.prototype.bitLength=G0.prototype.bitLength=function(){var x=this;return(x=x.compareTo(B(0))<0?x.negate().subtract(B(1)):x).compareTo(B(0))===0?B(0):B(function q($,o0){if(o0.compareTo($)<=0){var D0=q($,o0.square(o0)),F0=D0.p,D0=D0.e,o0=F0.multiply(o0);return o0.compareTo($)<=0?{p:o0,e:2*D0+1}:{p:F0,e:2*D0}}return{p:B(1),e:0}}(x,B(2)).e).add(B(1))};var Y=function(x,q){for(var $=x.length,o0=Math.abs(q),F0=0;F0<$;F0++){var D0=x[F0].toLowerCase();if(D0!=="-"&&/[a-z0-9]/.test(D0)){if(/[0-9]/.test(D0)&&o0<=+D0){if(D0!=="1"||o0!==1)throw new Error(D0+" is not a valid digit in base "+q+".")}else if(D0.charCodeAt(0)-87>=o0)throw new Error(D0+" is not a valid digit in base "+q+".")}}if(2<=q&&q<=36&&$<=E1/Math.log(q)){var l1=parseInt(x,q);if(isNaN(l1))throw new Error(D0+" is not a valid digit in base "+q+".");return new N0(parseInt(x,q))}q=H0(q);var c0=[],l1=x[0]==="-";for(F0=l1?1:0;F0<x.length;F0++){var Z0=(D0=x[F0].toLowerCase()).charCodeAt(0);if(48<=Z0&&Z0<=57)c0.push(H0(D0));else if(97<=Z0&&Z0<=122)c0.push(H0(D0.charCodeAt(0)-87));else{if(D0!=="<")throw new Error(D0+" is not a valid character");for(Z0=F0;x[++F0]!==">";);c0.push(H0(x.slice(Z0+1,F0)))}}return C0(c0,q,l1)};function C0(x,q,$){for(var o0=m0[0],F0=m0[1],D0=x.length-1;0<=D0;D0--)o0=o0.add(x[D0].times(F0)),F0=F0.times(q);return $?o0.negate():o0}function m1(x){return x<=35?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(x):"<"+x+">"}function B0(x,q){if((q=B(q)).isZero()){if(x.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(q.equals(-1)){if(x.isZero())return{value:[0],isNegative:!1};if(x.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-x)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var $=Array.apply(null,Array(+x-1)).map(Array.prototype.valueOf,[0,1]);return $.unshift([1]),{value:[].concat.apply([],$),isNegative:!1}}if($=!1,x.isNegative()&&q.isPositive()&&($=!0,x=x.abs()),q.equals(1))return x.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+x)).map(Number.prototype.valueOf,1),isNegative:$};for(var o0=[],F0=x;F0.isNegative()||0<=F0.compareAbs(q);){var F0=(D0=F0.divmod(q)).quotient,D0=D0.remainder;D0.isNegative()&&(D0=q.minus(D0).abs(),F0=F0.next()),o0.push(D0.toJSNumber())}return o0.push(F0.toJSNumber()),{value:o0.reverse(),isNegative:$}}function e0(x,q){return q=B0(x,q),(q.isNegative?"-":"")+q.value.map(m1).join("")}function i0(x){if(W(+x)){var q=+x;if(q===K0(q))return new N0(q);throw new Error("Invalid integer: "+x)}var $=x[0]==="-",o0=(x=$?x.slice(1):x).split(/e/i);if(2<o0.length)throw new Error("Invalid integer: "+o0.join("e"));if(o0.length===2){var F0=o0[1];if((F0=+(F0=F0[0]==="+"?F0.slice(1):F0))!==K0(F0)||!W(F0))throw new Error("Invalid integer: "+F0+" is not a valid exponent.");if(q=o0[0],o0=q.indexOf("."),0<=o0&&(F0-=q.length-o0-1,q=q.slice(0,o0)+q.slice(o0+1)),F0<0)throw new Error("Cannot include negative exponent part for integers");x=q+=new Array(F0+1).join("0")}if(!/^([0-9][0-9]*)$/.test(x))throw new Error("Invalid integer: "+x);for(var D0=[],c0=x.length,l1=p1,Z0=c0-l1;0<c0;)D0.push(+x.slice(Z0,c0)),(Z0-=l1)<0&&(Z0=0),c0-=l1;return T0(D0),new G0(D0,$)}function H0(x){return typeof x=="number"?function(q){if(W(q)){if(q!==K0(q))throw new Error(q+" is not an integer.");return new N0(q)}return i0(q.toString())}(x):typeof x=="string"?i0(x):x}G0.prototype.toArray=function(x){return B0(this,x)},N0.prototype.toArray=function(x){return B0(this,x)},G0.prototype.toString=function(x){if((x=x===a?10:x)!==10)return e0(this,x);for(var q,$=this.value,o0=$.length,F0=String($[--o0]);0<=--o0;)q=String($[o0]),F0+="0000000".slice(q.length)+q;return(this.sign?"-":"")+F0},N0.prototype.toString=function(x){return(x=x===a?10:x)!=10?e0(this,x):String(this.value)},G0.prototype.toJSON=N0.prototype.toJSON=function(){return this.toString()},G0.prototype.toJSNumber=G0.prototype.valueOf=function(){return parseInt(this.toString(),10)},N0.prototype.toJSNumber=N0.prototype.valueOf=function(){return this.value};for(var u1=0;u1<1e3;u1++)m0[u1]=new N0(u1),0<u1&&(m0[-u1]=new N0(-u1));return m0.one=m0[1],m0.zero=m0[0],m0.minusOne=m0[-1],m0.max=s0,m0.min=n0,m0.gcd=a0,m0.lcm=function(x,q){return x=H0(x).abs(),q=H0(q).abs(),x.divide(a0(x,q)).multiply(q)},m0.isInstance=function(x){return x instanceof G0||x instanceof N0},m0.randBetween=function(x,q){var $=n0(x=H0(x),q=H0(q)),o0=s0(x,q).subtract($).add(1);if(o0.isSmall)return $.add(Math.floor(Math.random()*o0));for(var F0=[],D0=!0,c0=o0.value.length-1;0<=c0;c0--){var l1=D0?o0.value[c0]:r0,Z0=K0(Math.random()*l1);F0.unshift(Z0),Z0<l1&&(D0=!1)}return F0=c1(F0),$.add(typeof F0=="number"?new N0(F0):new G0(F0,!1))},m0.fromArray=function(x,q,$){return C0(x.map(H0),H0(q||10),$)},m0}();return typeof Z2<"u"&&Z2.hasOwnProperty("exports")&&(Z2.exports=B),typeof define=="function"&&define.amd&&define("big-integer",[],function(){return B}),B}(),bigDec:function(B){var a,r0,p1,Z,R0=9e15,E1=1e9,m0="0123456789abcdef",G0="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",N0="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",W={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-R0,maxE:R0,crypto:!1},j=!0,c1="[DecimalError] ",T0=c1+"Invalid argument: ",o1=c1+"Precision limit exceeded",K0=c1+"crypto unavailable",k0=Math.floor,l0=Math.pow,Q0=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,A1=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,f1=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,h1=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,z0=1e7,d0=7,g=G0.length-1,b=N0.length-1,A={name:"[object Decimal]"};function w(r){var v,p,f,E=r.length-1,m="",M=r[0];if(0<E){for(m+=M,v=1;v<E;v++)f=r[v]+"",(p=d0-f.length)&&(m+=a0(p)),m+=f;M=r[v],(p=d0-(f=M+"").length)&&(m+=a0(p))}else if(M===0)return"0";for(;M%10==0;)M/=10;return m+M}function S(r,v,p){if(r!==~~r||r<v||p<r)throw Error(T0+r)}function C(r,v,p,f){for(var E,m,M=r[0];10<=M;M/=10)--v;return--v<0?(v+=d0,E=0):(E=Math.ceil((v+1)/d0),v%=d0),M=l0(10,d0-v),m=r[E]%M|0,f==null?v<3?(v==0?m=m/100|0:v==1&&(m=m/10|0),p<4&&m==99999||3<p&&m==49999||m==5e4||m==0):(p<4&&m+1==M||3<p&&m+1==M/2)&&(r[E+1]/M/100|0)==l0(10,v-2)-1||(m==M/2||m==0)&&(r[E+1]/M/100|0)==0:v<4?(v==0?m=m/1e3|0:v==1?m=m/100|0:v==2&&(m=m/10|0),(f||p<4)&&m==9999||!f&&3<p&&m==4999):((f||p<4)&&m+1==M||!f&&3<p&&m+1==M/2)&&(r[E+1]/M/1e3|0)==l0(10,v-3)-1}function V(r,v,p){for(var f,E,m=[0],M=0,R=r.length;M<R;){for(E=m.length;E--;)m[E]*=v;for(m[0]+=m0.indexOf(r.charAt(M++)),f=0;f<m.length;f++)m[f]>p-1&&(m[f+1]===void 0&&(m[f+1]=0),m[f+1]+=m[f]/p|0,m[f]%=p)}return m.reverse()}A.absoluteValue=A.abs=function(){var r=new this.constructor(this);return r.s<0&&(r.s=1),g0(r)},A.ceil=function(){return g0(new this.constructor(this),this.e+1,2)},A.comparedTo=A.cmp=function(r){var v,p,f=this,E=f.d,m=(r=new f.constructor(r)).d,M=f.s,R=r.s;if(!E||!m)return M&&R?M!==R?M:E===m?0:!E^M<0?1:-1:NaN;if(!E[0]||!m[0])return E[0]?M:m[0]?-R:0;if(M!==R)return M;if(f.e!==r.e)return f.e>r.e^M<0?1:-1;for(v=0,p=(f=E.length)<(r=m.length)?f:r;v<p;++v)if(E[v]!==m[v])return E[v]>m[v]^M<0?1:-1;return f===r?0:r<f^M<0?1:-1},A.cosine=A.cos=function(){var r,v,p=this,f=p.constructor;return p.d?p.d[0]?(r=f.precision,v=f.rounding,f.precision=r+Math.max(p.e,p.sd())+d0,f.rounding=1,p=function(E,m){var M,R=m.d.length,R=R<32?(1/x(4,M=Math.ceil(R/3))).toString():(M=16,"2.3283064365386962890625e-10");E.precision+=M,m=u1(E,1,m.times(R),new E(1));for(var D=M;D--;){var U=m.times(m);m=U.times(U).minus(U).times(8).plus(1)}return E.precision-=M,m}(f,q(f,p)),f.precision=r,f.rounding=v,g0(Z==2||Z==3?p.neg():p,r,v,!0)):new f(1):new f(NaN)},A.cubeRoot=A.cbrt=function(){var r,v,p,f,E,m,M,R,D,U,F=this,t=F.constructor;if(!F.isFinite()||F.isZero())return new t(F);for(j=!1,(m=F.s*l0(F.s*F,1/3))&&Math.abs(m)!=1/0?f=new t(m.toString()):(p=w(F.d),(m=((r=F.e)-p.length+1)%3)&&(p+=m==1||m==-2?"0":"00"),m=l0(p,1/3),r=k0((r+1)/3)-(r%3==(r<0?-1:2)),(f=new t(p=m==1/0?"5e"+r:(p=m.toExponential()).slice(0,p.indexOf("e")+1)+r)).s=F.s),M=(r=t.precision)+3;;)if(U=(D=(R=f).times(R).times(R)).plus(F),f=K(U.plus(F).times(R),U.plus(D),M+2,1),w(R.d).slice(0,M)===(p=w(f.d)).slice(0,M)){if((p=p.slice(M-3,M+1))!="9999"&&(E||p!="4999")){+p&&(+p.slice(1)||p.charAt(0)!="5")||(g0(f,r+1,1),v=!f.times(f).times(f).eq(F));break}if(!E&&(g0(R,r+1,0),R.times(R).times(R).eq(F))){f=R;break}M+=4,E=1}return j=!0,g0(f,r,t.rounding,v)},A.decimalPlaces=A.dp=function(){var r,v=this.d,p=NaN;if(v){if(p=((r=v.length-1)-k0(this.e/d0))*d0,r=v[r])for(;r%10==0;r/=10)p--;p<0&&(p=0)}return p},A.dividedBy=A.div=function(r){return K(this,new this.constructor(r))},A.dividedToIntegerBy=A.divToInt=function(r){var v=this.constructor;return g0(K(this,new v(r),0,1,1),v.precision,v.rounding)},A.equals=A.eq=function(r){return this.cmp(r)===0},A.floor=function(){return g0(new this.constructor(this),this.e+1,3)},A.greaterThan=A.gt=function(r){return 0<this.cmp(r)},A.greaterThanOrEqualTo=A.gte=function(r){return r=this.cmp(r),r==1||r===0},A.hyperbolicCosine=A.cosh=function(){var r,v,p,f=(R=this).constructor,E=new f(1);if(!R.isFinite())return new f(R.s?1/0:NaN);if(R.isZero())return E;v=f.precision,p=f.rounding,f.precision=v+Math.max(R.e,R.sd())+4,f.rounding=1;for(var m,M=(M=R.d.length)<32?(1/x(4,r=Math.ceil(M/3))).toString():(r=16,"2.3283064365386962890625e-10"),R=u1(f,1,R.times(M),new f(1),!0),D=r,U=new f(8);D--;)m=R.times(R),R=E.minus(m.times(U.minus(m.times(U))));return g0(R,f.precision=v,f.rounding=p,!0)},A.hyperbolicSine=A.sinh=function(){var r,v,p,f=(M=this).constructor;if(!M.isFinite()||M.isZero())return new f(M);if(r=f.precision,v=f.rounding,f.precision=r+Math.max(M.e,M.sd())+4,f.rounding=1,(p=M.d.length)<3)M=u1(f,2,M,M,!0);else for(var E,m=16<(m=1.4*Math.sqrt(p))?16:0|m,M=u1(f,2,M=M.times(1/x(5,m)),M,!0),R=new f(5),D=new f(16),U=new f(20);m--;)E=M.times(M),M=M.times(R.plus(E.times(D.times(E).plus(U))));return g0(M,f.precision=r,f.rounding=v,!0)},A.hyperbolicTangent=A.tanh=function(){var r,v,p=this,f=p.constructor;return p.isFinite()?p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+7,f.rounding=1,K(p.sinh(),p.cosh(),f.precision=r,f.rounding=v)):new f(p.s)},A.inverseCosine=A.acos=function(){var r=this,v=r.constructor,p=r.abs().cmp(1),f=v.precision,E=v.rounding;return p!==-1?p===0?r.isNeg()?s0(v,f,E):new v(0):new v(NaN):r.isZero()?s0(v,f+4,E).times(.5):(v.precision=f+6,v.rounding=1,r=r.asin(),p=s0(v,f+4,E).times(.5),v.precision=f,v.rounding=E,p.minus(r))},A.inverseHyperbolicCosine=A.acosh=function(){var r,v,p=this,f=p.constructor;return p.lte(1)?new f(p.eq(1)?0:NaN):p.isFinite()?(r=f.precision,v=f.rounding,f.precision=r+Math.max(Math.abs(p.e),p.sd())+4,f.rounding=1,j=!1,p=p.times(p).minus(1).sqrt().plus(p),j=!0,f.precision=r,f.rounding=v,p.ln()):new f(p)},A.inverseHyperbolicSine=A.asinh=function(){var r,v,p=this,f=p.constructor;return!p.isFinite()||p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+2*Math.max(Math.abs(p.e),p.sd())+6,f.rounding=1,j=!1,p=p.times(p).plus(1).sqrt().plus(p),j=!0,f.precision=r,f.rounding=v,p.ln())},A.inverseHyperbolicTangent=A.atanh=function(){var r,v,p,f=this,E=f.constructor;return f.isFinite()?0<=f.e?new E(f.abs().eq(1)?f.s/0:f.isZero()?f:NaN):(r=E.precision,v=E.rounding,p=f.sd(),Math.max(p,r)<2*-f.e-1?g0(new E(f),r,v,!0):(E.precision=p=p-f.e,f=K(f.plus(1),new E(1).minus(f),p+r,1),E.precision=r+4,E.rounding=1,f=f.ln(),E.precision=r,E.rounding=v,f.times(.5))):new E(NaN)},A.inverseSine=A.asin=function(){var r,v,p,f=this,E=f.constructor;return f.isZero()?new E(f):(r=f.abs().cmp(1),v=E.precision,p=E.rounding,r!==-1?r===0?((r=s0(E,v+4,p).times(.5)).s=f.s,r):new E(NaN):(E.precision=v+6,E.rounding=1,f=f.div(new E(1).minus(f.times(f)).sqrt().plus(1)).atan(),E.precision=v,E.rounding=p,f.times(2)))},A.inverseTangent=A.atan=function(){var r,v,p,f,E,m,M,R,D,U=this,F=U.constructor,t=F.precision,s=F.rounding;if(U.isFinite()){if(U.isZero())return new F(U);if(U.abs().eq(1)&&t+4<=b)return(M=s0(F,t+4,s).times(.25)).s=U.s,M}else{if(!U.s)return new F(NaN);if(t+4<=b)return(M=s0(F,t+4,s).times(.5)).s=U.s,M}for(F.precision=R=t+10,F.rounding=1,r=p=Math.min(28,R/d0+2|0);r;--r)U=U.div(U.times(U).plus(1).sqrt().plus(1));for(j=!1,v=Math.ceil(R/d0),f=1,D=U.times(U),M=new F(U),E=U;r!==-1;)if(E=E.times(D),m=M.minus(E.div(f+=2)),E=E.times(D),(M=m.plus(E.div(f+=2))).d[v]!==void 0)for(r=v;M.d[r]===m.d[r]&&r--;);return p&&(M=M.times(2<<p-1)),j=!0,g0(M,F.precision=t,F.rounding=s,!0)},A.isFinite=function(){return!!this.d},A.isInteger=A.isInt=function(){return!!this.d&&k0(this.e/d0)>this.d.length-2},A.isNaN=function(){return!this.s},A.isNegative=A.isNeg=function(){return this.s<0},A.isPositive=A.isPos=function(){return 0<this.s},A.isZero=function(){return!!this.d&&this.d[0]===0},A.lessThan=A.lt=function(r){return this.cmp(r)<0},A.lessThanOrEqualTo=A.lte=function(r){return this.cmp(r)<1},A.logarithm=A.log=function(r){var v,p,f,E,m,M,R,D,U=this.constructor,F=U.precision,t=U.rounding;if(r==null)r=new U(10),v=!0;else{if(p=(r=new U(r)).d,r.s<0||!p||!p[0]||r.eq(1))return new U(NaN);v=r.eq(10)}if(p=this.d,this.s<0||!p||!p[0]||this.eq(1))return new U(p&&!p[0]?-1/0:this.s!=1?NaN:p?0:1/0);if(v)if(1<p.length)m=!0;else{for(E=p[0];E%10==0;)E/=10;m=E!==1}if(j=!1,M=e0(this,R=F+5),f=v?x1(U,R+10):e0(r,R),C((D=K(M,f,R,1)).d,E=F,t))do if(M=e0(this,R+=10),f=v?x1(U,R+10):e0(r,R),D=K(M,f,R,1),!m){+w(D.d).slice(E+1,E+15)+1==1e14&&(D=g0(D,F+1,0));break}while(C(D.d,E+=10,t));return j=!0,g0(D,F,t)},A.minus=A.sub=function(r){var v,p,f,E,m,M,R,D,U,F,t,s=this,h=s.constructor;if(r=new h(r),!s.d||!r.d)return s.s&&r.s?s.d?r.s=-r.s:r=new h(r.d||s.s!==r.s?s:NaN):r=new h(NaN),r;if(s.s!=r.s)return r.s=-r.s,s.plus(r);if(U=s.d,t=r.d,R=h.precision,D=h.rounding,!U[0]||!t[0]){if(t[0])r.s=-r.s;else{if(!U[0])return new h(D===3?-0:0);r=new h(s)}return j?g0(r,R,D):r}if(p=k0(r.e/d0),s=k0(s.e/d0),U=U.slice(),m=s-p){for(M=(F=m<0)?(v=U,m=-m,t.length):(v=t,p=s,U.length),m>(f=Math.max(Math.ceil(R/d0),M)+2)&&(m=f,v.length=1),v.reverse(),f=m;f--;)v.push(0);v.reverse()}else{for((F=(f=U.length)<(M=t.length))&&(M=f),f=0;f<M;f++)if(U[f]!=t[f]){F=U[f]<t[f];break}m=0}for(F&&(v=U,U=t,t=v,r.s=-r.s),M=U.length,f=t.length-M;0<f;--f)U[M++]=0;for(f=t.length;m<f;){if(U[--f]<t[f]){for(E=f;E&&U[--E]===0;)U[E]=z0-1;--U[E],U[f]+=z0}U[f]-=t[f]}for(;U[--M]===0;)U.pop();for(;U[0]===0;U.shift())--p;return U[0]?(r.d=U,r.e=I1(U,p),j?g0(r,R,D):r):new h(D===3?-0:0)},A.modulo=A.mod=function(r){var v,p=this,f=p.constructor;return r=new f(r),!p.d||!r.s||r.d&&!r.d[0]?new f(NaN):!r.d||p.d&&!p.d[0]?g0(new f(p),f.precision,f.rounding):(j=!1,f.modulo==9?(v=K(p,r.abs(),0,3,1)).s*=r.s:v=K(p,r,0,f.modulo,1),v=v.times(r),j=!0,p.minus(v))},A.naturalExponential=A.exp=function(){return B0(this)},A.naturalLogarithm=A.ln=function(){return e0(this)},A.negated=A.neg=function(){var r=new this.constructor(this);return r.s=-r.s,g0(r)},A.plus=A.add=function(r){var v,p,f,E,m,M,R,D,U=this,F=U.constructor;if(r=new F(r),!U.d||!r.d)return U.s&&r.s?U.d||(r=new F(r.d||U.s===r.s?U:NaN)):r=new F(NaN),r;if(U.s!=r.s)return r.s=-r.s,U.minus(r);if(R=U.d,D=r.d,m=F.precision,M=F.rounding,!R[0]||!D[0])return D[0]||(r=new F(U)),j?g0(r,m,M):r;if(F=k0(U.e/d0),U=k0(r.e/d0),R=R.slice(),f=F-U){for(E=f<0?(p=R,f=-f,D.length):(p=D,U=F,R.length),f>(E=(F=Math.ceil(m/d0))>E?F+1:E+1)&&(f=E,p.length=1),p.reverse();f--;)p.push(0);p.reverse()}for((E=R.length)-(f=D.length)<0&&(f=E,p=D,D=R,R=p),v=0;f;)v=(R[--f]=R[f]+D[f]+v)/z0|0,R[f]%=z0;for(v&&(R.unshift(v),++U),E=R.length;R[--E]==0;)R.pop();return r.d=R,r.e=I1(R,U),j?g0(r,m,M):r},A.precision=A.sd=function(r){var v;if(r!==void 0&&r!==!!r&&r!==1&&r!==0)throw Error(T0+r);return this.d?(v=n0(this.d),r&&this.e+1>v&&(v=this.e+1)):v=NaN,v},A.round=function(){var r=this.constructor;return g0(new r(this),this.e+1,r.rounding)},A.sine=A.sin=function(){var r,v,p=this,f=p.constructor;return p.isFinite()?p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+Math.max(p.e,p.sd())+d0,f.rounding=1,p=function(E,m){var M,R=m.d.length;if(R<3)return u1(E,2,m,m);M=16<(M=1.4*Math.sqrt(R))?16:0|M,m=u1(E,2,m=m.times(1/x(5,M)),m);for(var D,U=new E(5),F=new E(16),t=new E(20);M--;)D=m.times(m),m=m.times(U.plus(D.times(F.times(D).minus(t))));return m}(f,q(f,p)),f.precision=r,f.rounding=v,g0(2<Z?p.neg():p,r,v,!0)):new f(NaN)},A.squareRoot=A.sqrt=function(){var r,v,p,f,E,m,M=this,R=M.d,D=M.e,U=M.s,F=M.constructor;if(U!==1||!R||!R[0])return new F(!U||U<0&&(!R||R[0])?NaN:R?M:1/0);for(j=!1,f=(U=Math.sqrt(+M))==0||U==1/0?(((v=w(R)).length+D)%2==0&&(v+="0"),U=Math.sqrt(v),D=k0((D+1)/2)-(D<0||D%2),new F(v=U==1/0?"5e"+D:(v=U.toExponential()).slice(0,v.indexOf("e")+1)+D)):new F(U.toString()),p=(D=F.precision)+3;;)if(f=(m=f).plus(K(M,m,p+2,1)).times(.5),w(m.d).slice(0,p)===(v=w(f.d)).slice(0,p)){if((v=v.slice(p-3,p+1))!="9999"&&(E||v!="4999")){+v&&(+v.slice(1)||v.charAt(0)!="5")||(g0(f,D+1,1),r=!f.times(f).eq(M));break}if(!E&&(g0(m,D+1,0),m.times(m).eq(M))){f=m;break}p+=4,E=1}return j=!0,g0(f,D,F.rounding,r)},A.tangent=A.tan=function(){var r,v,p=this,f=p.constructor;return p.isFinite()?p.isZero()?new f(p):(r=f.precision,v=f.rounding,f.precision=r+10,f.rounding=1,(p=p.sin()).s=1,p=K(p,new f(1).minus(p.times(p)).sqrt(),r+10,0),f.precision=r,f.rounding=v,g0(Z==2||Z==4?p.neg():p,r,v,!0)):new f(NaN)},A.times=A.mul=function(r){var v,p,f,E,m,M,R,D,U,F=this.constructor,t=this.d,s=(r=new F(r)).d;if(r.s*=this.s,!(t&&t[0]&&s&&s[0]))return new F(!r.s||t&&!t[0]&&!s||s&&!s[0]&&!t?NaN:t&&s?0*r.s:r.s/0);for(p=k0(this.e/d0)+k0(r.e/d0),(D=t.length)<(U=s.length)&&(m=t,t=s,s=m,M=D,D=U,U=M),m=[],f=M=D+U;f--;)m.push(0);for(f=U;0<=--f;){for(v=0,E=D+f;f<E;)R=m[E]+s[f]*t[E-f-1]+v,m[E--]=R%z0|0,v=R/z0|0;m[E]=(m[E]+v)%z0|0}for(;!m[--M];)m.pop();return v?++p:m.shift(),r.d=m,r.e=I1(m,p),j?g0(r,F.precision,F.rounding):r},A.toBinary=function(r,v){return $(this,2,r,v)},A.toDecimalPlaces=A.toDP=function(r,v){var p=this.constructor,f=new p(this);return r===void 0?f:(S(r,0,E1),v===void 0?v=p.rounding:S(v,0,8),g0(f,r+f.e+1,v))},A.toExponential=function(E,v){var p=this,f=p.constructor,E=E===void 0?C1(p,!0):(S(E,0,E1),v===void 0?v=f.rounding:S(v,0,8),C1(p=g0(new f(p),E+1,v),!0,E+1));return p.isNeg()&&!p.isZero()?"-"+E:E},A.toFixed=function(r,v){var p=this,f=p.constructor,E=r===void 0?C1(p):(S(r,0,E1),v===void 0?v=f.rounding:S(v,0,8),C1(E=g0(new f(p),r+p.e+1,v),!1,r+E.e+1));return p.isNeg()&&!p.isZero()?"-"+E:E},A.toFraction=function(r){var v,p,f,E,m,M,R,D,U,F,t=this,s=t.d,h=t.constructor;if(!s)return new h(t);if(D=p=new h(1),f=R=new h(0),U=(m=(v=new h(f)).e=n0(s)-t.e-1)%d0,v.d[0]=l0(10,U<0?d0+U:U),r==null)r=0<m?v:D;else{if(!(M=new h(r)).isInt()||M.lt(D))throw Error(T0+M);r=M.gt(v)?0<m?v:D:M}for(j=!1,M=new h(w(s)),U=h.precision,h.precision=m=s.length*d0*2;F=K(M,v,0,1,1),(E=p.plus(F.times(f))).cmp(r)!=1;)p=f,f=E,D=R.plus(F.times(E=D)),R=E,v=M.minus(F.times(E=v)),M=E;return E=K(r.minus(p),f,0,1,1),R=R.plus(E.times(D)),p=p.plus(E.times(f)),R.s=D.s=t.s,t=K(D,f,m,1).minus(t).abs().cmp(K(R,p,m,1).minus(t).abs())<1?[D,f]:[R,p],h.precision=U,j=!0,t},A.toHexadecimal=A.toHex=function(r,v){return $(this,16,r,v)},A.toNearest=function(r,v){var p=(f=this).constructor,f=new p(f);if(r==null){if(!f.d)return f;r=new p(1),v=p.rounding}else{if(r=new p(r),v===void 0?v=p.rounding:S(v,0,8),!f.d)return r.s?f:r;if(!r.d)return r.s&&(r.s=f.s),r}return r.d[0]?(j=!1,f=K(f,r,0,v,1).times(r),j=!0,g0(f)):(r.s=f.s,f=r),f},A.toNumber=function(){return+this},A.toOctal=function(r,v){return $(this,8,r,v)},A.toPower=A.pow=function(r){var v,p,f,E,m,M,R=this,D=R.constructor,U=+(r=new D(r));if(!(R.d&&r.d&&R.d[0]&&r.d[0]))return new D(l0(+R,U));if((R=new D(R)).eq(1))return R;if(f=D.precision,m=D.rounding,r.eq(1))return g0(R,f,m);if((v=k0(r.e/d0))>=r.d.length-1&&(p=U<0?-U:U)<=9007199254740991)return E=Y(D,R,p,f),r.s<0?new D(1).div(E):g0(E,f,m);if((M=R.s)<0){if(v<r.d.length-1)return new D(NaN);if(!(1&r.d[v])&&(M=1),R.e==0&&R.d[0]==1&&R.d.length==1)return R.s=M,R}return(v=(p=l0(+R,U))!=0&&isFinite(p)?new D(p+"").e:k0(U*(Math.log("0."+w(R.d))/Math.LN10+R.e+1)))>D.maxE+1||v<D.minE-1?new D(0<v?M/0:0):(j=!1,D.rounding=R.s=1,p=Math.min(12,(v+"").length),(E=B0(r.times(e0(R,f+p)),f)).d&&C((E=g0(E,f+5,1)).d,f,m)&&+w((E=g0(B0(r.times(e0(R,(v=f+10)+p)),v),v+5,1)).d).slice(f+1,f+15)+1==1e14&&(E=g0(E,f+1,0)),E.s=M,j=!0,g0(E,f,D.rounding=m))},A.toPrecision=function(E,v){var p=this,f=p.constructor,E=E===void 0?C1(p,p.e<=f.toExpNeg||p.e>=f.toExpPos):(S(E,1,E1),v===void 0?v=f.rounding:S(v,0,8),C1(p=g0(new f(p),E,v),E<=p.e||p.e<=f.toExpNeg,E));return p.isNeg()&&!p.isZero()?"-"+E:E},A.toSignificantDigits=A.toSD=function(r,v){var p=this.constructor;return r===void 0?(r=p.precision,v=p.rounding):(S(r,1,E1),v===void 0?v=p.rounding:S(v,0,8)),g0(new p(this),r,v)},A.toString=function(){var r=this.constructor,r=C1(this,this.e<=r.toExpNeg||this.e>=r.toExpPos);return this.isNeg()&&!this.isZero()?"-"+r:r},A.truncated=A.trunc=function(){return g0(new this.constructor(this),this.e+1,1)},A.valueOf=A.toJSON=function(){var r=this.constructor,r=C1(this,this.e<=r.toExpNeg||this.e>=r.toExpPos);return this.isNeg()?"-"+r:r};var K=function(r,v,p,f,E,m){var M,R,D,U,F,t,s,h,y,L,X,A0,Q,Y0,E0,U0,R1,t1,S1,x0=r.constructor,P=r.s==v.s?1:-1,V1=r.d,X1=v.d;if(!(V1&&V1[0]&&X1&&X1[0]))return new x0(r.s&&v.s&&(V1?!X1||V1[0]!=X1[0]:X1)?V1&&V1[0]==0||!X1?0*P:P/0:NaN);for(R=m?(F=1,r.e-v.e):(m=z0,k0(r.e/(F=d0))-k0(v.e/F)),t1=X1.length,U0=V1.length,y=(P=new x0(P)).d=[],D=0;X1[D]==(V1[D]||0);D++);if(X1[D]>(V1[D]||0)&&R--,p==null?(Q=p=x0.precision,f=x0.rounding):Q=E?p+(r.e-v.e)+1:p,Q<0)y.push(1),t=!0;else{if(Q=Q/F+2|0,D=0,t1==1){for(X1=X1[U=0],Q++;(D<U0||U)&&Q--;D++)Y0=U*m+(V1[D]||0),y[D]=Y0/X1|0,U=Y0%X1|0;t=U||D<U0}else{for(1<(U=m/(X1[0]+1)|0)&&(X1=S0(X1,U,m),V1=S0(V1,U,m),t1=X1.length,U0=V1.length),X=(L=V1.slice(0,E0=t1)).length;X<t1;)L[X++]=0;for((S1=X1.slice()).unshift(0),R1=X1[0],X1[1]>=m/2&&++R1;U=0,(M=h0(X1,L,t1,X))<0?(A0=L[0],1<(U=(A0=t1!=X?A0*m+(L[1]||0):A0)/R1|0)?(M=h0(s=S0(X1,U=m<=U?m-1:U,m),L,h=s.length,X=L.length))==1&&(U--,y0(s,t1<h?S1:X1,h,m)):(U==0&&(M=U=1),s=X1.slice()),(h=s.length)<X&&s.unshift(0),y0(L,s,X,m),M==-1&&(M=h0(X1,L,t1,X=L.length))<1&&(U++,y0(L,t1<X?S1:X1,X,m)),X=L.length):M===0&&(U++,L=[0]),y[D++]=U,M&&L[0]?L[X++]=V1[E0]||0:(L=[V1[E0]],X=1),(E0++<U0||L[0]!==void 0)&&Q--;);t=L[0]!==void 0}y[0]||y.shift()}if(F==1)P.e=R,r0=t;else{for(D=1,U=y[0];10<=U;U/=10)D++;P.e=D+R*F-1,g0(P,E?p+P.e+1:p,f,t)}return P};function S0(r,v,p){var f,E=0,m=r.length;for(r=r.slice();m--;)f=r[m]*v+E,r[m]=f%p|0,E=f/p|0;return E&&r.unshift(E),r}function h0(r,v,p,f){var E,m;if(p!=f)m=f<p?1:-1;else for(E=m=0;E<p;E++)if(r[E]!=v[E]){m=r[E]>v[E]?1:-1;break}return m}function y0(r,v,p,f){for(var E=0;p--;)r[p]-=E,E=r[p]<v[p]?1:0,r[p]=E*f+r[p]-v[p];for(;!r[0]&&1<r.length;)r.shift()}function g0(r,v,p,f){var E,m,M,R,D,U,F,t,s=r.constructor;t:if(v!=null){if(!(F=r.d))return r;for(E=1,R=F[0];10<=R;R/=10)E++;if((m=v-E)<0)m+=d0,D=(U=F[t=0])/l0(10,E-(M=v)-1)%10|0;else if((t=Math.ceil((m+1)/d0))>=(R=F.length)){if(!f)break t;for(;R++<=t;)F.push(0);U=D=0,M=(m%=d0)-d0+(E=1)}else{for(U=R=F[t],E=1;10<=R;R/=10)E++;D=(M=(m%=d0)-d0+E)<0?0:U/l0(10,E-M-1)%10|0}if(f=f||v<0||F[t+1]!==void 0||(M<0?U:U%l0(10,E-M-1)),D=p<4?(D||f)&&(p==0||p==(r.s<0?3:2)):5<D||D==5&&(p==4||f||p==6&&(0<m?0<M?U/l0(10,E-M):0:F[t-1])%10&1||p==(r.s<0?8:7)),v<1||!F[0])return F.length=0,D?(v-=r.e+1,F[0]=l0(10,(d0-v%d0)%d0),r.e=-v||0):F[0]=r.e=0,r;if(m==0?(F.length=t,R=1,t--):(F.length=t+1,R=l0(10,d0-m),F[t]=0<M?(U/l0(10,E-M)%l0(10,M)|0)*R:0),D)for(;;){if(t==0){for(m=1,M=F[0];10<=M;M/=10)m++;for(M=F[0]+=R,R=1;10<=M;M/=10)R++;m!=R&&(r.e++,F[0]==z0&&(F[0]=1));break}if(F[t]+=R,F[t]!=z0)break;F[t--]=0,R=1}for(m=F.length;F[--m]===0;)F.pop()}return j&&(r.e>s.maxE?(r.d=null,r.e=NaN):r.e<s.minE&&(r.e=0,r.d=[0])),r}function C1(r,v,p){if(!r.isFinite())return i0(r);var f,E=r.e,m=w(r.d),M=m.length;return v?(p&&0<(f=p-M)?m=m.charAt(0)+"."+m.slice(1)+a0(f):1<M&&(m=m.charAt(0)+"."+m.slice(1)),m=m+(r.e<0?"e":"e+")+r.e):E<0?(m="0."+a0(-E-1)+m,p&&0<(f=p-M)&&(m+=a0(f))):M<=E?(m+=a0(E+1-M),p&&0<(f=p-E-1)&&(m=m+"."+a0(f))):((f=E+1)<M&&(m=m.slice(0,f)+"."+m.slice(f)),p&&0<(f=p-M)&&(E+1===M&&(m+="."),m+=a0(f))),m}function I1(r,v){var p=r[0];for(v*=d0;10<=p;p/=10)v++;return v}function x1(r,v,p){if(g<v)throw j=!0,p&&(r.precision=p),Error(o1);return g0(new r(G0),v,1,!0)}function s0(r,v,p){if(b<v)throw Error(o1);return g0(new r(N0),v,p,!0)}function n0(r){var v=r.length-1,p=v*d0+1;if(v=r[v]){for(;v%10==0;v/=10)p--;for(v=r[0];10<=v;v/=10)p++}return p}function a0(r){for(var v="";r--;)v+="0";return v}function Y(r,v,p,f){var E,m=new r(1),M=Math.ceil(f/d0+4);for(j=!1;;){if(p%2&&o0((m=m.times(v)).d,M)&&(E=!0),(p=k0(p/2))===0){p=m.d.length-1,E&&m.d[p]===0&&++m.d[p];break}o0((v=v.times(v)).d,M)}return j=!0,m}function C0(r){return 1&r.d[r.d.length-1]}function m1(r,v,p){for(var f,E=new r(v[0]),m=0;++m<v.length;){if(!(f=new r(v[m])).s){E=f;break}E[p](f)&&(E=f)}return E}function B0(r,v){var p,f,E,m,M,R,D,U=0,F=0,t=0,s=r.constructor,h=s.rounding,y=s.precision;if(!r.d||!r.d[0]||17<r.e)return new s(r.d?r.d[0]?r.s<0?0:1/0:1:r.s?r.s<0?0:r:NaN);for(D=v??(j=!1,y),R=new s(.03125);-2<r.e;)r=r.times(R),t+=5;for(D+=f=Math.log(l0(2,t))/Math.LN10*2+5|0,p=m=M=new s(1),s.precision=D;;){if(m=g0(m.times(r),D,1),p=p.times(++F),w((R=M.plus(K(m,p,D,1))).d).slice(0,D)===w(M.d).slice(0,D)){for(E=t;E--;)M=g0(M.times(M),D,1);if(v!=null)return s.precision=y,M;if(!(U<3&&C(M.d,D-f,h,U)))return g0(M,s.precision=y,h,j=!0);s.precision=D+=10,p=m=R=new s(1),F=0,U++}M=R}}function e0(r,v){var p,f,E,m,M,R,D,U,F,t,s,h=1,y=r,L=y.d,X=y.constructor,A0=X.rounding,Q=X.precision;if(y.s<0||!L||!L[0]||!y.e&&L[0]==1&&L.length==1)return new X(L&&!L[0]?-1/0:y.s!=1?NaN:L?0:y);if(F=v??(j=!1,Q),X.precision=F+=10,f=(p=w(L)).charAt(0),!(Math.abs(m=y.e)<15e14))return U=x1(X,F+2,Q).times(m+""),y=e0(new X(f+"."+p.slice(1)),F-10).plus(U),X.precision=Q,v==null?g0(y,Q,A0,j=!0):y;for(;f<7&&f!=1||f==1&&3<p.charAt(1);)f=(p=w((y=y.times(r)).d)).charAt(0),h++;for(m=y.e,1<f?(y=new X("0."+p),m++):y=new X(f+"."+p.slice(1)),D=M=y=K((t=y).minus(1),y.plus(1),F,1),s=g0(y.times(y),F,1),E=3;;){if(M=g0(M.times(s),F,1),w((U=D.plus(K(M,new X(E),F,1))).d).slice(0,F)===w(D.d).slice(0,F)){if(D=D.times(2),m!==0&&(D=D.plus(x1(X,F+2,Q).times(m+""))),D=K(D,new X(h),F,1),v!=null)return X.precision=Q,D;if(!C(D.d,F-10,A0,R))return g0(D,X.precision=Q,A0,j=!0);X.precision=F+=10,U=M=y=K(t.minus(1),t.plus(1),F,1),s=g0(y.times(y),F,1),E=R=1}D=U,E+=2}}function i0(r){return String(r.s*r.s/0)}function H0(r,v){var p,f,E;for(0<(f=(v=-1<(p=v.indexOf("."))?v.replace(".",""):v).search(/e/i))?(p<0&&(p=f),p+=+v.slice(f+1),v=v.substring(0,f)):p<0&&(p=v.length),f=0;v.charCodeAt(f)===48;f++);for(E=v.length;v.charCodeAt(E-1)===48;--E);if(v=v.slice(f,E)){if(E-=f,r.e=p=p-f-1,r.d=[],f=(p+1)%d0,p<0&&(f+=d0),f<E){for(f&&r.d.push(+v.slice(0,f)),E-=d0;f<E;)r.d.push(+v.slice(f,f+=d0));v=v.slice(f),f=d0-v.length}else f-=E;for(;f--;)v+="0";r.d.push(+v),j&&(r.e>r.constructor.maxE?(r.d=null,r.e=NaN):r.e<r.constructor.minE&&(r.e=0,r.d=[0]))}else r.e=0,r.d=[0];return r}function u1(r,v,p,f,E){var m,M,R,D,U=r.precision,F=Math.ceil(U/d0);for(j=!1,D=p.times(p),R=new r(f);;){if(M=K(R.times(D),new r(v++*v++),U,1),R=E?f.plus(M):f.minus(M),f=K(M.times(D),new r(v++*v++),U,1),(M=R.plus(f)).d[F]!==void 0){for(m=F;M.d[m]===R.d[m]&&m--;);if(m==-1)break}m=R,R=f,f=M,M=m}return j=!0,M.d.length=F+1,M}function x(r,v){for(var p=r;--v;)p*=r;return p}function q(r,v){var p=v.s<0,f=s0(r,r.precision,1),E=f.times(.5);if((v=v.abs()).lte(E))return Z=p?4:1,v;if((r=v.divToInt(f)).isZero())Z=p?3:2;else{if((v=v.minus(r.times(f))).lte(E))return Z=C0(r)?p?2:3:p?4:1,v;Z=C0(r)?p?1:4:p?3:2}return v.minus(f).abs()}function $(r,v,p,f){var E,m,M,R,D,U,F,t,s=r.constructor,h=p!==void 0;if(h?(S(p,1,E1),f===void 0?f=s.rounding:S(f,0,8)):(p=s.precision,f=s.rounding),r.isFinite()){for(h?(E=2,v==16?p=4*p-3:v==8&&(p=3*p-2)):E=v,0<=(M=(U=C1(r)).indexOf("."))&&(U=U.replace(".",""),(t=new s(1)).e=U.length-M,t.d=V(C1(t),10,E),t.e=t.d.length),m=R=(F=V(U,10,E)).length;F[--R]==0;)F.pop();if(F[0]){if(M<0?m--:((r=new s(r)).d=F,r.e=m,F=(r=K(r,t,p,f,0,E)).d,m=r.e,D=r0),M=F[p],t=E/2,D=D||F[p+1]!==void 0,D=f<4?(M!==void 0||D)&&(f===0||f===(r.s<0?3:2)):t<M||M===t&&(f===4||D||f===6&&1&F[p-1]||f===(r.s<0?8:7)),F.length=p,D)for(;++F[--p]>E-1;)F[p]=0,p||(++m,F.unshift(1));for(R=F.length;!F[R-1];--R);for(M=0,U="";M<R;M++)U+=m0.charAt(F[M]);if(h){if(1<R)if(v==16||v==8){for(M=v==16?4:3,--R;R%M;R++)U+="0";for(R=(F=V(U,E,v)).length;!F[R-1];--R);for(M=1,U="1.";M<R;M++)U+=m0.charAt(F[M])}else U=U.charAt(0)+"."+U.slice(1);U=U+(m<0?"p":"p+")+m}else if(m<0){for(;++m;)U="0"+U;U="0."+U}else if(++m>R)for(m-=R;m--;)U+="0";else m<R&&(U=U.slice(0,m)+"."+U.slice(m))}else U=h?"0p+0":"0";U=(v==16?"0x":v==2?"0b":v==8?"0o":"")+U}else U=i0(r);return r.s<0?"-"+U:U}function o0(r,v){return r.length>v&&(r.length=v,1)}function F0(r){return new this(r).abs()}function D0(r){return new this(r).acos()}function c0(r){return new this(r).acosh()}function l1(r,v){return new this(r).plus(v)}function Z0(r){return new this(r).asin()}function i1(r){return new this(r).asinh()}function P1(r){return new this(r).atan()}function T(r){return new this(r).atanh()}function H(r,v){r=new this(r),v=new this(v);var p,f=this.precision,E=this.rounding,m=f+4;return r.s&&v.s?r.d||v.d?!v.d||r.isZero()?(p=v.s<0?s0(this,f,E):new this(0)).s=r.s:!r.d||v.isZero()?(p=s0(this,m,1).times(.5)).s=r.s:p=v.s<0?(this.precision=m,this.rounding=1,p=this.atan(K(r,v,m,1)),v=s0(this,m,1),this.precision=f,this.rounding=E,r.s<0?p.minus(v):p.plus(v)):this.atan(K(r,v,m,1)):(p=s0(this,m,1).times(0<v.s?.25:.75)).s=r.s:p=new this(NaN),p}function f0(r){return new this(r).cbrt()}function v0(r){return g0(r=new this(r),r.e+1,2)}function u0(r){if(!r||typeof r!="object")throw Error(c1+"Object expected");for(var v,p,f=r.defaults===!0,E=["precision",1,E1,"rounding",0,8,"toExpNeg",-R0,0,"toExpPos",0,R0,"maxE",0,R0,"minE",-R0,0,"modulo",0,9],m=0;m<E.length;m+=3)if(v=E[m],f&&(this[v]=W[v]),(p=r[v])!==void 0){if(!(k0(p)===p&&E[m+1]<=p&&p<=E[m+2]))throw Error(T0+v+": "+p);this[v]=p}if(v="crypto",f&&(this[v]=W[v]),(p=r[v])!==void 0){if(p!==!0&&p!==!1&&p!==0&&p!==1)throw Error(T0+v+": "+p);if(p){if(typeof crypto>"u"||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(K0);this[v]=!0}else this[v]=!1}return this}function b0(r){return new this(r).cos()}function O0(r){return new this(r).cosh()}function M0(r,v){return new this(r).div(v)}function P0(r){return new this(r).exp()}function I0(r){return g0(r=new this(r),r.e+1,3)}function d1(){var r,v,p=new this(0);for(j=!1,r=0;r<arguments.length;)if((v=new this(arguments[r++])).d)p.d&&(p=p.plus(v.times(v)));else{if(v.s)return j=!0,new this(1/0);p=v}return j=!0,p.sqrt()}function j0(r){return r instanceof a||r&&r.name==="[object Decimal]"||!1}function v1(r){return new this(r).ln()}function U1(r,v){return new this(r).log(v)}function i2(r){return new this(r).log(2)}function Q1(r){return new this(r).log(10)}function e2(){return m1(this,arguments,"lt")}function j1(){return m1(this,arguments,"gt")}function o2(r,v){return new this(r).mod(v)}function p2(r,v){return new this(r).mul(v)}function A2(r,v){return new this(r).pow(v)}function c2(r){var v,p,f,E,m=0,M=new this(1),R=[];if(r===void 0?r=this.precision:S(r,1,E1),f=Math.ceil(r/d0),this.crypto)if(crypto.getRandomValues)for(v=crypto.getRandomValues(new Uint32Array(f));m<f;)429e7<=(E=v[m])?v[m]=crypto.getRandomValues(new Uint32Array(1))[0]:R[m++]=E%1e7;else{if(!crypto.randomBytes)throw Error(K0);for(v=crypto.randomBytes(f*=4);m<f;)214e7<=(E=v[m]+(v[m+1]<<8)+(v[m+2]<<16)+((127&v[m+3])<<24))?crypto.randomBytes(4).copy(v,m):(R.push(E%1e7),m+=4);m=f/4}else for(;m<f;)R[m++]=1e7*Math.random()|0;for(f=R[--m],r%=d0,f&&r&&(E=l0(10,d0-r),R[m]=(f/E|0)*E);R[m]===0;m--)R.pop();if(m<0)R=[p=0];else{for(p=-1;R[0]===0;p-=d0)R.shift();for(f=1,E=R[0];10<=E;E/=10)f++;f<d0&&(p-=d0-f)}return M.e=p,M.d=R,M}function L2(r){return g0(r=new this(r),r.e+1,this.rounding)}function q2(r){return(r=new this(r)).d?r.d[0]?r.s:0*r.s:r.s||NaN}function F1(r){return new this(r).sin()}function _1(r){return new this(r).sinh()}function r2(r){return new this(r).sqrt()}function B2(r,v){return new this(r).sub(v)}function n2(r){return new this(r).tan()}function v2(r){return new this(r).tanh()}function g1(r){return g0(r=new this(r),r.e+1,1)}return(a=function r(v){var p,f,E;function m(M){var R,D,U,F=this;if(!(F instanceof m))return new m(M);if(M instanceof(F.constructor=m))return F.s=M.s,void(j?!M.d||M.e>m.maxE?(F.e=NaN,F.d=null):M.e<m.minE?(F.e=0,F.d=[0]):(F.e=M.e,F.d=M.d.slice()):(F.e=M.e,F.d=M.d&&M.d.slice()));if((U=typeof M)=="number"){if(M===0)return F.s=1/M<0?-1:1,F.e=0,void(F.d=[0]);if(M<0?(M=-M,F.s=-1):F.s=1,M===~~M&&M<1e7){for(R=0,D=M;10<=D;D/=10)R++;return void(j?m.maxE<R?(F.e=NaN,F.d=null):R<m.minE?(F.e=0,F.d=[0]):(F.e=R,F.d=[M]):(F.e=R,F.d=[M]))}return 0*M!=0?(M||(F.s=NaN),F.e=NaN,void(F.d=null)):H0(F,M.toString())}if(U!="string")throw Error(T0+M);return(D=M.charCodeAt(0))===45?(M=M.slice(1),F.s=-1):(D===43&&(M=M.slice(1)),F.s=1),(h1.test(M)?H0:function(t,s){var h,y,L,X,A0,Q,Y0,E0;if(s==="Infinity"||s==="NaN")return+s||(t.s=NaN),t.e=NaN,t.d=null,t;if(A1.test(s))E0=16,s=s.toLowerCase();else if(Q0.test(s))E0=2;else{if(!f1.test(s))throw Error(T0+s);E0=8}for(X=0<=(L=(s=0<(L=s.search(/p/i))?(Q=+s.slice(L+1),s.substring(2,L)):s.slice(2)).indexOf(".")),h=t.constructor,X&&(L=(A0=(s=s.replace(".","")).length)-L,y=Y(h,new h(E0),L,2*L)),L=E0=(Y0=V(s,E0,z0)).length-1;Y0[L]===0;--L)Y0.pop();return L<0?new h(0*t.s):(t.e=I1(Y0,E0),t.d=Y0,j=!1,X&&(t=K(t,y,4*A0)),Q&&(t=t.times(Math.abs(Q)<54?l0(2,Q):a.pow(2,Q))),j=!0,t)})(F,M)}if(m.prototype=A,m.ROUND_UP=0,m.ROUND_DOWN=1,m.ROUND_CEIL=2,m.ROUND_FLOOR=3,m.ROUND_HALF_UP=4,m.ROUND_HALF_DOWN=5,m.ROUND_HALF_EVEN=6,m.ROUND_HALF_CEIL=7,m.ROUND_HALF_FLOOR=8,m.EUCLID=9,m.config=m.set=u0,m.clone=r,m.isDecimal=j0,m.abs=F0,m.acos=D0,m.acosh=c0,m.add=l1,m.asin=Z0,m.asinh=i1,m.atan=P1,m.atanh=T,m.atan2=H,m.cbrt=f0,m.ceil=v0,m.cos=b0,m.cosh=O0,m.div=M0,m.exp=P0,m.floor=I0,m.hypot=d1,m.ln=v1,m.log=U1,m.log10=Q1,m.log2=i2,m.max=e2,m.min=j1,m.mod=o2,m.mul=p2,m.pow=A2,m.random=c2,m.round=L2,m.sign=q2,m.sin=F1,m.sinh=_1,m.sqrt=r2,m.sub=B2,m.tan=n2,m.tanh=v2,m.trunc=g1,(v=v===void 0?{}:v)&&v.defaults!==!0)for(E=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],p=0;p<E.length;)v.hasOwnProperty(f=E[p++])||(v[f]=this[f]);return m.config(v),m}(W)).default=a.Decimal=a,G0=new a(G0),N0=new a(N0),typeof define=="function"&&define.amd?define(function(){return a}):typeof Z2<"u"&&Z2.exports?(typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"&&(A[Symbol.for("nodejs.util.inspect.custom")]=A.toString,A[Symbol.toStringTag]="Decimal"),Z2.exports=a):(B=B||(typeof self<"u"&&self&&self.self==self?self:window),p1=B.Decimal,a.noConflict=function(){return B.Decimal=p1,a},B.Decimal=a),a}(void 0)});typeof Z2<"u"&&(Z2.exports=_2),typeof Z2<"u"&&(_2=require("./nerdamer.core.js"),require("./Calculus.js")),function(){var B=_2.getCore(),a=B.PARSER,r0=B.groups.N,p1=B.groups.P,Z=B.groups.S,R0=B.groups.EX,E1=B.groups.FN,m0=B.groups.PL,G0=B.groups.CP,N0=B.groups.CB,W=B.Utils.keys,j=B.Utils.even,c1=B.Utils.variables,T0=B.Utils.format,o1=B.Utils.round,K0=B.Frac,k0=B.Utils.isInt,l0=B.Symbol,Q0=B.Settings.CONST_HASH,A1=B.Utils.importFunctions();B.Utils.evaluate;function f1(g,b,A){if(B.Utils.isSymbol(g))this.parse(g),this.variable=this.variable||b;else if(isNaN(g))typeof g=="string"&&this.parse(a.parse(g));else{if(A=A||0,b===void 0)throw new B.exceptions.InvalidVariableNameError("Polynomial expects a variable name when creating using order");this.coeffs=[],this.coeffs[A]=g,this.fill(g)}}function h1(){this.factors={},this.length=0}function z0(g,b,A){this.terms=b||[],this.coeff=g,this.map=A,this.sum=new B.Frac(0),this.image=void 0}f1.fromArray=function(g,b){if(b===void 0)throw new B.exceptions.InvalidVariableNameError("A variable name must be specified when creating polynomial from array");var A=new f1;return A.coeffs=g,A.variable=b,A},f1.fit=function(g,b,A,w,S,C){var V=new Array(S+1),K=A-b;V[0]=b,K-=(V[S]=g)*Math.pow(w,S);for(var S0=S-1;0<S0;S0--){var h0=Math.pow(w,S0),y0=K/h0,y0=Math.sign(y0)*Math.floor(Math.abs(y0));K-=y0*h0,V[S0]=y0}if(K!==0)return null;for(S0=0;S0<V.length;S0++)V[S0]=new K0(V[S0]);return f1.fromArray(V,C)},f1.prototype={parse:function(g,b){if(this.variable=c1(g)[0],!g.isPoly())throw B.exceptions.NerdamerTypeError("Polynomial Expected! Received "+B.Utils.text(g));if(b=b||[],(g=g.power.absEquals(1)?g:a.expand(g)).group===B.groups.N)b[0]=g.multiplier;else if(g.group===B.groups.S)b[g.power.toDecimal()]=g.multiplier;else for(var A in g.symbols){var w=g.symbols[A],A=w.power;if(B.Utils.isSymbol(A))throw new B.exceptions.NerdamerTypeError("power cannot be a Symbol");A=w.group===r0?0:A.toDecimal(),w.symbols?this.parse(w,b):b[A]=w.multiplier}this.coeffs=b,this.fill()},fill:function(g){g=Number(g)||0;for(var b=this.coeffs.length,A=0;A<b;A++)this.coeffs[A]===void 0&&(this.coeffs[A]=new K0(g));return this},trim:function(){for(var g=this.coeffs.length;g--;){var b=this.coeffs[g],A=b.equals(0);if(!b||!A||g===0)break;this.coeffs.pop()}return this},modP:function(g){for(var b=this.coeffs.length,A=0;A<b;A++){var w=this.coeffs[A];if(w<0){for(var S,C=A;C<b;C++)if(0<this.coeffs[C]){S=this.coeffs[C];break}if(S){for(;A<C;C--)this.coeffs[C]=this.coeffs[C].subtract(new K0(1)),this.coeffs[C-1]=this.coeffs[C-1].add(new K0(g));w=this.coeffs[A]}}var V,K=w.mod(g),S0=w.subtract(K).divide(g);S0.equals(0)||(w=(w=this.coeffs[V=A+1]||new K0(0)).add(S0),this.coeffs[V]=new K0(w),this.coeffs[A]=new K0(K))}return this},add:function(g){for(var b=Math.max(this.coeffs.length,g.coeffs.length),A=0;A<b;A++){var w=this.coeffs[A]||new K0(0),S=g.coeffs[A]||new K0(0);this.coeffs[A]=w.add(S)}return this},subtract:function(g){for(var b=Math.max(this.coeffs.length,g.coeffs.length),A=0;A<b;A++){var w=this.coeffs[A]||new K0(0),S=g.coeffs[A]||new K0(0);this.coeffs[A]=w.subtract(S)}return this},divide:function(g){for(var b=this.variable,A=B.Utils.arrayClone(this.coeffs),w=B.Utils.arrayClone(g.coeffs),S=A.length,C=w.length-1,V=[],K=0;K<S;K++){var S0=S-(K+1),h0=S0-C,y0=A[S0].divide(w[C]);if(h0<0)break;V[h0]=y0;for(var g0=0;g0<=C;g0++)A[g0+h0]=A[g0+h0].subtract(w[g0].multiply(y0))}return g=f1.fromArray(A,b||"x").trim(),[f1.fromArray(V,b||"x"),g]},multiply:function(g){for(var b=this.coeffs.length,A=g.coeffs.length,w=[],S=0;S<b;S++)for(var C=this.coeffs[S],V=0;V<A;V++){var K=S+V,S0=g.coeffs[V],h0=w[K]||new K0(0);w[K]=h0.add(C.multiply(S0))}return this.coeffs=w,this},isZero:function(){for(var g=this.coeffs.length,b=0;b<g;b++)if(!this.coeffs[b].equals(0))return!1;return!0},sub:function(g){for(var b=new K0(0),A=this.coeffs.length,w=0;w<A;w++){var S=this.coeffs[w];S.equals(0)||(b=b.add(S.multiply(new K0(Math.pow(g,w)))))}return b},clone:function(){var g=new f1;return g.coeffs=this.coeffs,g.variable=this.variable,g},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var g=this.lc(),b=this.coeffs.length,A=0;A<b;A++)this.coeffs[A]=this.coeffs[A].divide(g);return this},gcd:function(g){if(this.coeffs.length-1<g.coeffs.length-1)return g.gcd(this);for(var b=this;!g.isZero();){var A=g.clone();g=(b=b.clone()).divide(A)[1],b=A}var w=B.Math2.QGCD.apply(null,b.coeffs);if(!w.equals(1))for(var S=b.coeffs.length,C=0;C<S;C++)b.coeffs[C]=b.coeffs[C].divide(w);return b},diff:function(){for(var g=[],b=this.coeffs.length,A=1;A<b;A++)g.push(this.coeffs[A].multiply(new K0(A)));return this.coeffs=g,this},integrate:function(){for(var g=[0],b=this.coeffs.length,A=0;A<b;A++){var w=new K0(A+1);g[w]=this.coeffs[A].divide(w)}return this.coeffs=g,this},gcf:function(g){for(var b=[],A=0;A<this.coeffs.length;A++){var w=this.coeffs[A];w.equals(0)||b.indexOf(w)!==-1||b.push(w)}var S=[B.Math2.QGCD.apply(void 0,b),function(C){for(var V=0;V<C.length;V++)if(!C[V].equals(0))return V}(this.coeffs)].toDecimal();return g&&((g=[])[S[1]-1]=S[0],S=f1.fromArray(g,this.variable).fill()),S},quad:function(g){var b=[];if(3<this.coeffs.length)throw new Error("Cannot calculate quadratic order of "+(this.coeffs.length-1));if(this.coeffs.length===0)throw new Error("Polynomial array has no terms");var A=this.coeffs[2]||0,w=this.coeffs[1]||0,S=w*w-4*A*this.coeffs[0];return S<0&&!g||(b[0]=(-w+Math.sqrt(S))/(2*A),b[1]=(-w-Math.sqrt(S))/(2*A)),b},squareFree:function(){for(var g=this.clone(),b=1,A=g.clone().diff(),w=g.clone().gcd(A),S=g.divide(w)[0],C=f1.fromArray([new K0(1)],g.variable);!w.equalsNumber(1);){var V=S.gcd(w),K=S.divide(V)[0];if(!K.equalsNumber(1)&&1<b){for(var S0=K.clone(),h0=1;h0<b;h0++)S0.multiply(K.clone());K=S0}C=C.multiply(K),b++,w=w.divide(S=V)[0]}return[C,S,b]},toSymbol:function(){var g=this.coeffs.length,b=this.variable;if(g===0)return new B.Symbol(0);for(var A=g-1,w="",S=0;S<g;S++){var C=S===A?"":"+",V=this.coeffs[S];V.equals(0)||(w+=V+"*"+b+"^"+S+C)}return a.parse(w)},equalsNumber:function(g){return this.trim(),this.coeffs.length===1&&this.coeffs[0].toDecimal()===String(g)},toString:function(){return this.toSymbol().toString()}},l0.prototype.coeffs=function(g,b){b&&!this.isPoly(!0)&&a.error("Polynomial expected when requesting coefficients with order"),g=g||[];var A,w=this.clone().distributeMultiplier();if(w.isComposite())for(var S in w.symbols)S=w.symbols[S],S.isComposite()?S.clone().distributeMultiplier().coeffs(g,b):b?g[S.isConstant()?0:S.power.toDecimal()]=S.multiplier:g.push(S.multiplier);else b?g[w.isConstant(!0)?0:w.power.toDecimal()]=w.multiplier:w.group===N0&&w.isImaginary()?(A=new l0(w.multiplier),w.each(function(V){(V.isConstant(!0)||V.imaginary)&&(A=a.multiply(A,V))}),g.push(A)):g.push(w.multiplier);if(b)for(var C=0;C<g.length;C++)g[C]===void 0&&(g[C]=new l0(0));return g},l0.prototype.tBase=function(g){if(g===void 0)throw new Error("Symbol.tBase requires a map object!");for(var b=[],A=this.collectSymbols(null,null,null,!0),w=A.length,S=0;S<w;S++){var C=A[S],V=C.group,K=new z0(C.multiplier,[],g);if(V===N0)for(var S0 in C.symbols){var h0=C.symbols[S0];K.terms[g[S0]]=h0.power}else K.terms[g[C.value]]=C.power;b.push(K.fill()),K.updateCount()}return b},l0.prototype.altVar=function(g){var b=this.multiplier.toString(),A=this.power.toString();return(b==="1"?"":b+"*")+g+(A==="1"?"":"^"+A)},l0.prototype.sameVars=function(g){if(!this.symbols&&this.group!==g.group)return!1;for(var b in this.symbols){var A=this.symbols[b],b=g.symbols[b];if(!b||A.value!==b.value)return!1}return!0},l0.prototype.groupTerms=function(g){var b,A,w;g=String(g);var S=[];return this.each(function(C){if(C.group===m0){w=C.groupTerms(g);for(var V=0;V<w.length;V++){var K=w[V];K&&(S[V]=K)}}else b=B.Utils.decompose_fn(C,g,!0),A=b.x.value===g?Number(b.x.power):0,S[A]=a.add(S[A]||new l0(0),b.a)}),S},l0.prototype.collectFactors=function(){var g=[];return this.group===N0?this.each(function(b){g.push(b.clone())}):g.push(this.clone()),g},h1.prototype.getNumberSymbolics=function(){var g=0;return this.each(function(b){b.isConstant(!0)||g++}),g},h1.prototype.add=function(g){if(g.equals(0))return this;if(g.equals(-1)&&0<this.length){var b=B.Utils.firstObject(this.factors,null,!0);return this.add(a.symfunction(B.Settings.PARENTHESIS,[b.obj]).negate()),delete this.factors[b.key],this.length--,this}if(g.group===N0){var A=this;g.multiplier.equals(1)||A.add(new l0(g.multiplier)),g.each(function(w){A.add(w)})}else{if(this.preAdd&&(g=this.preAdd(g)),b=(g=this.pFactor?a.pow(g,new l0(this.pFactor)):g).isConstant(),b&&g.equals(1))return this;b=b?g.value:g.text(),b in this.factors?(this.factors[b]=a.multiply(this.factors[b],g),this.factors[b].equals(1)&&(delete this.factors[b],this.length--)):(this.factors[b]=g,this.length++)}return this},h1.prototype.toSymbol=function(){for(var S=new l0(1),g=Object.values(this.factors).sort(function(C,V){return C.group>V.group}),b=0,A=g.length;b<A;b++)var w=g[b],w=w.power.equals(1)&&w.fname!==""?a.symfunction(B.PARENTHESIS,[w]):w,S=a.multiply(S,w);return S=S.fname===""?l0.unwrapPARENS(S):S},h1.prototype.merge=function(g){for(var b in g)b in this.factors?this.factors[b]=a.multiply(this.factors[b],g[b]):this.factors[b]=g[b];return this},h1.prototype.each=function(g){for(var b in this.factors){var A=this.factors[b];A.fname===B.PARENTHESIS&&A.isLinear()&&(A=A.args[0]),g.call(this,A,b)}return this},h1.prototype.count=function(){return W(this.factors).length},h1.prototype.clean=function(){try{var g=B.Settings.CONST_HASH;this.factors[g].lessThan(0)&&(this.factors[g].equals(-1)?delete this.factors[g]:this.factors[g].negate(),this.each(function(b){b.negate()}))}catch{}},h1.prototype.toString=function(){return this.toSymbol().toString()},z0.prototype.updateCount=function(){this.count=this.count||0;for(var g=0;g<this.terms.length;g++)this.terms[g].equals(0)||this.count++;return this},z0.prototype.getVars=function(){for(var g=[],b=0;b<this.terms.length;b++){var A=this.terms[b];this.getRevMap(),A.equals(0)||g.push(this.rev_map[b])}return g.join(" ")},z0.prototype.len=function(){return this.count===void 0&&this.updateCount(),this.count},z0.prototype.toSymbol=function(g){g=g||this.getRevMap();for(var b=new l0(this.coeff),A=0;A<this.terms.length;A++){var w=g[A],S=this.terms[A];S.equals(0)||w===Q0||((w=new l0(w)).power=S,b=a.multiply(b,w))}return b},z0.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var g,b={};for(g in this.map)b[this.map[g]]=g;return this.rev_map=b},z0.prototype.generateImage=function(){return this.image=this.terms.join(" "),this},z0.prototype.getImg=function(){return this.image||this.generateImage(),this.image},z0.prototype.fill=function(){for(var g=this.map.length,b=0;b<g;b++)this.terms[b]===void 0?this.terms[b]=new B.Frac(0):this.sum=this.sum.add(this.terms[b]);return this},z0.prototype.divide=function(g){for(var b=this.coeff.divide(g.coeff),A=this.terms.length,w=new z0(b,[],this.map),S=0;S<A;S++)w.terms[S]=this.terms[S].subtract(g.terms[S]),w.sum=w.sum.add(w.terms[S]);return w},z0.prototype.multiply=function(g){for(var b=this.coeff.multiply(g.coeff),A=this.terms.length,w=new z0(b,[],this.map),S=0;S<A;S++)w.terms[S]=this.terms[S].add(g.terms[S]),w.sum=w.sum.add(w.terms[S]);return w},z0.prototype.isZero=function(){return this.coeff.equals(0)},z0.prototype.toString=function(){return"{ coeff: "+this.coeff.toString()+", terms: ["+this.terms.join(",")+"]: sum: "+this.sum.toString()+", count: "+this.count+"}"},B.Utils.toMapObj=function(g){for(var b=0,A={},w=0;w<g.length;w++){var S=g[w];A[S]===void 0&&(A[S]=b,b++)}return A.length=b,A},B.Utils.filledArray=function(g,b,A){for(var w=[];b--;)w[b]=A?new A(g):g;return w},B.Utils.arrSum=function(g){for(var b=0,A=g.length,w=0;w<A;w++)b+=g[w];return b},B.Utils.haveIntersection=function(g,b){var A;return b.length>g.length&&(A=b,b=g,g=A),g.some(function(w){return-1<b.indexOf(w)})},B.Utils.subFunctions=function(g,b){b=b||{};var A=[];return g.each(function(w){var S,C;w.group===E1||w.previousGroup===E1?(S=B.Utils.text(w,"hash"),(C=b[S])||(C=w.fname+W(b).length,b[S]=C),A.push(w.altVar(C))):w.group===N0||w.group===m0||w.group===G0?A.push(B.Utils.subFunctions(w,b)):A.push(w.text())}),g.group===G0||g.group===m0?g.altVar(B.Utils.inBrackets(A.join("+"))):g.group===N0?g.altVar(B.Utils.inBrackets(A.join("*"))):g.text()},B.Utils.getFunctionsSubs=function(g){var b,A={};for(b in g)A[g[b]]=a.parse(b);return A};var d0=B.Algebra={version:"1.4.6",proots:function(g,b){b=b||7;function A(C0,m1,B0){for(var e0=function($,u1){var x=$.slice(0);if($.unshift(u1),100<u1)throw new B.exceptions.ValueLimitExceededError("This utility accepts polynomials of degree up to 100. ");var q=[],$={};for($.Degree=u1,g0=0;g0<u1;g0++)q.push(0);var o0=q.slice(0);function F0(v0,u0,b0,O0,M0,P0){M0[0]=P0.b=O0[0],M0[1]=P0.a=-(u0*P0.b)+O0[1];for(var I0=2;I0<v0;I0++)M0[I0]=-(u0*P0.a+b0*P0.b)+O0[I0],P0.b=P0.a,P0.a=M0[I0]}function D0(v0,u0,b0,O0,M0,P0,I0,d1,j0){var v1=new Object,U1=3;return v1.b=v1.a=0,F0(u0,I0,d1,P0,j0,v1),M0.c=v1.a,M0.d=v1.b,Math.abs(M0.c)<=100*v0*Math.abs(P0[u0-1])&&Math.abs(M0.d)<=100*v0*Math.abs(P0[u0-2])||(M0.h=d1*O0,Math.abs(M0.d)>=Math.abs(M0.c)?(U1=2,M0.e=b0/M0.d,M0.f=M0.c/M0.d,M0.g=I0*O0,M0.a3=M0.e*(M0.g+b0)+M0.h*(O0/M0.d),M0.a1=-b0+M0.f*O0,M0.a7=M0.h+(M0.f+I0)*b0):(U1=1,M0.e=b0/M0.c,M0.f=M0.d/M0.c,M0.g=M0.e*I0,M0.a3=M0.e*b0+(M0.g+M0.h/M0.c)*O0,M0.a1=-(b0*(M0.d/M0.c))+O0,M0.a7=M0.g*M0.d+M0.h*M0.f+b0)),U1}function c0(v0,u0,b0,O0,M0,P0,I0,d1,j0){if(b0!=3)if(O0=b0==1?M0:O0,Math.abs(P0.a1)>10*v0*Math.abs(O0))for(P0.a7/=P0.a1,P0.a3/=P0.a1,I0[0]=j0[0],I0[1]=-(j0[0]*P0.a7)+j0[1],v1=2;v1<u0;v1++)I0[v1]=-(j0[v1-1]*P0.a7)+d1[v1-2]*P0.a3+j0[v1];else for(I0[0]=0,I0[1]=-(j0[0]*P0.a7),v1=2;v1<u0;v1++)I0[v1]=-(j0[v1-1]*P0.a7)+d1[v1-2]*P0.a3;else{I0[1]=I0[0]=0;for(var v1=2;v1<u0;v1++)I0[v1]=d1[v1-2]}}function l1(v0,u0,b0,O0,M0,P0,I0,d1,j0,v1,U1,i2,Q1,e2,j1,o2,p2){var A2;u0.b=u0.a=0,v0!=3&&(d1=v0!=2?(A2=b0+Q1*I0+i2*v1,d1+(Q1+e2*v1)*j0):(A2=(b0+U1)*v1+i2,(v1+Q1)*d1+e2*j0),j0=-(j1[o2-1]/p2[o2]),(A2=-(M0=e2*(j1=-(j1[o2-2]+j0*p2[o2-1])/p2[o2])*O0-((p2=j0*P0)+(o2=j0*j0*M0)))+d1+j0*A2)!=0&&(u0.a=-(Q1*(o2+p2)+e2*(j0*O0+j1*P0))/A2+Q1,u0.b=e2*(1+M0/A2)))}function Z0(v0,u0,b0,O0){var M0,P0,I0;(O0.sr=O0.si=O0.lr=O0.li=0)!=v0?b0!=0?(M0=u0/2,P0=Math.abs(M0)<Math.abs(b0)?(I0=-(I0=0<=b0?v0:-v0)+M0*(M0/Math.abs(b0)),Math.sqrt(Math.abs(I0))*Math.sqrt(Math.abs(b0))):(I0=-v0/M0*(b0/M0)+1,Math.sqrt(Math.abs(I0))*Math.abs(M0)),0<=I0?(O0.lr=(-M0+(P0=0<=M0?-P0:P0))/v0,O0.sr=O0.lr!=0?b0/O0.lr/v0:O0.sr):(O0.lr=O0.sr=-M0/v0,O0.si=Math.abs(P0/v0),O0.li=-O0.si)):O0.lr=-u0/v0:O0.sr=u0!=0?-b0/u0:O0.sr}function i1(v0,u0,b0,O0,M0,P0,I0,d1,j0,v1,U1,i2){var Q1,e2,j1,o2,p2,A2,c2,L2,q2,F1,_1,r2,B2,n2,v2,g1,r,v,p,f,E,m,M,R,D,U=new Object,F=new Object,t=new Array(u0),s=new Array(u0),h=1;for(i2.NZ=0,o2=j1=.25,p2=O0,L2=M0,U.b=U.a=0,F0(j0,U1,M0,d1,v1,U),Q1=U.a,e2=U.b,F.h=F.g=F.f=F.e=F.d=F.c=F.a7=F.a3=F.a1=0,M=D0(v0,I0,Q1,e2,F,P0,U1,M0,t),f=0;f<b0;f++){if(v=1,c0(v0,I0,M,Q1,e2,F,P0,t,v1),l1(M=D0(v0,I0,Q1,e2,F,P0,U1,M0,t),U,Q1,F.a1,F.a3,F.a7,e2,F.c,F.d,F.f,F.g,F.h,U1,M0,P0,I0,d1),v2=U.a,r=g1=U.b,F1=P0[I0-1]!=0?-(d1[I0]/P0[I0-1]):0,_1=B2=1,f!=0&&M!=3&&(R=(n2=(B2=r!=0?Math.abs((r-L2)/r):B2)<c2?B2*c2:1)<o2?1:0,(E=(r2=(_1=F1!=0?Math.abs((F1-p2)/F1):_1)<A2?_1*A2:1)<j1?1:0)||R)){for(p=0;p<I0;p++)s[p]=P0[p];for(q2=F1,m=D=0;;){if(!v||(v=0)!=0||!E||R&&!(r2<n2)){if(function(y,L,X,A0,Q,Y0,E0,U0,R1,t1,S1,x0){var P,V1,X1,N1,y1,L1,O1,g2,S2,s2=new Object,G1=0,e=0;X.NZ=0,N1=A0,L1=Q;do{if(s2.li=s2.lr=s2.si=s2.sr=0,Z0(1,N1,L1,s2),X.szr=s2.sr,X.szi=s2.si,X.lzr=s2.lr,X.lzi=s2.li,Math.abs(Math.abs(X.szr)-Math.abs(X.lzr))>.01*Math.abs(X.lzr))break;for(F0(E0,N1,L1,R1,Y0,U0),O1=Math.abs(-(X.szr*U0.b)+U0.a)+Math.abs(X.szi*U0.b),g2=Math.sqrt(Math.abs(L1)),P=2*Math.abs(Y0[0]),y1=-(X.szr*U0.b),S2=1;S2<L;S2++)P=P*g2+Math.abs(Y0[S2]);if(O1<=20*(P=(9*(P=P*g2+Math.abs(y1+U0.a))+2*Math.abs(y1)-7*(Math.abs(U0.a+y1)+g2*Math.abs(U0.b)))*y)){X.NZ=2;break}if(20<++G1)break;if(2<=G1&&X1<=.01&&V1<=O1&&!e){for(F0(E0,N1-=N1*(X1=X1<y?Math.sqrt(y):Math.sqrt(X1)),L1+=L1*X1,R1,Y0,U0),S2=0;S2<5;S2++)c0(y,L,D0(y,L,U0.a,U0.b,S1,x0,N1,L1,t1),U0.a,U0.b,S1,x0,t1,Y0);e=1,G1=0}}while(V1=O1,c0(y,L,D0(y,L,U0.a,U0.b,S1,x0,N1,L1,t1),U0.a,U0.b,S1,x0,t1,Y0),l1(D0(y,L,U0.a,U0.b,S1,x0,N1,L1,t1),U0,U0.a,S1.a1,S1.a3,S1.a7,U0.b,S1.c,S1.d,S1.f,S1.g,S1.h,N1,L1,x0,L,R1),y1=U0.a,(O1=U0.b)!=0&&(X1=Math.abs((-L1+O1)/O1),N1=y1,L1=O1),O1!=0)}(v0,I0,i2,v2,g1,v1,j0,U,d1,t,F,P0),Q1=U.a,e2=U.b,0<i2.NZ)return;if(h=D=1,o2*=.25,m||!E)h=0;else for(p=0;p<I0;p++)P0[p]=s[p]}if(h!=0){if(U.a=q2,h=function(y,L,X,A0,Q,Y0,E0,U0,R1){var t1,S1,x0,P,V1,X1,N1,y1,L1,O1,g2,S2=A0-1;for(L.NZ=g2=L1=0,N1=X.a;;){for(X1=Q[0],E0[0]=X1,O1=1;O1<Y0;O1++)E0[O1]=X1=X1*N1+Q[O1];for(x0=Math.abs(X1),P=Math.abs(N1),t1=.5*Math.abs(E0[0]),O1=1;O1<Y0;O1++)t1=t1*P+Math.abs(E0[O1]);if(x0<=20*y*(2*t1-x0)){L.NZ=1,L.szr=N1,L.szi=0;break}if(10<++g2)break;if(2<=g2&&Math.abs(y1)<=.001*Math.abs(-y1+N1)&&V1<x0){L1=1,L.a=N1;break}for(V1=x0,R1[0]=S1=U0[0],O1=1;O1<A0;O1++)R1[O1]=S1=S1*N1+U0[O1];if(Math.abs(S1)>10*Math.abs(U0[S2])*y)for(y1=-X1/S1,U0[0]=E0[0],O1=1;O1<A0;O1++)U0[O1]=y1*R1[O1-1]+E0[O1];else for(U0[0]=0,O1=1;O1<A0;O1++)U0[O1]=R1[O1-1];for(S1=U0[0],O1=1;O1<A0;O1++)S1=S1*N1+U0[O1];N1+=y1=Math.abs(S1)>10*Math.abs(U0[S2])*y?-X1/S1:0}return L1}(v0,i2,U,I0,d1,j0,v1,P0,t),q2=U.a,0<i2.NZ)return;if(m=1,j1*=.25,h!=0){v2=-(q2+q2),g1=q2*q2;continue}}for(p=0;p<I0;p++)P0[p]=s[p];if(!R||D)break}F0(j0,U1,M0,d1,v1,U),M=D0(v0,I0,Q1=U.a,e2=U.b,F,P0,U1,M0,t)}L2=r,p2=F1,c2=B2,A2=_1}}(function(v0,u0,b0,O0){for(var M0,P0,I0,d1,j0,v1,U1,i2,Q1,e2,j1,o2,p2,A2,c2=v0.Degree,L2=.017453292519943295,q2=Math.LN2,F1=v0.Degree+1,_1=new Array(F1),r2=new Array(F1),B2=new Array(F1),n2=new Array(F1),v2=new Object,g1=new Object,r=1;M0=r,1<(v1=1+(r/=2)););var v=Number.MIN_VALUE/M0,p=Math.cos(94*L2),f=Math.sin(94*L2),E=Math.sqrt(.5),m=-E;for(g1.NZ=Q1=0,g1.szr=g1.szi=g1.lzr=g1.lzi=0;u0[c2]==0;)b0[Q1]=O0[Q1]=0,c2--,Q1++;for(p2=c2+1;1<=c2;){if(c2<=2){c2<2?(b0[v0.Degree-1]=-(u0[1]/u0[0]),O0[v0.Degree-1]=0):(Z0(u0[v2.li=v2.lr=v2.si=v2.sr=0],u0[1],u0[2],v2),b0[v0.Degree-2]=v2.sr,O0[v0.Degree-2]=v2.si,b0[v0.Degree-1]=v2.lr,O0[v0.Degree-1]=v2.li);break}for(d1=0,j0=Number.MAX_VALUE,M=0;M<p2;M++)d1<(R=Math.abs(u0[M]))&&(d1=R),R!=0&&R<j0&&(j0=R);if(((j1=v/j0)<=1&&10<=d1||1<j1&&Number.MAX_VALUE/j1>=d1)&&(j1=j1==0?Number.MIN_VALUE:j1,j1=Math.floor(Math.log(j1)/q2+.5),(I0=Math.pow(2,j1))!=1))for(M=0;M<p2;M++)u0[M]*=I0;for(var M=0;M<p2;M++)r2[M]=Math.abs(u0[M]);r2[c2]=-r2[c2],o2=c2-1,R=Math.exp((Math.log(-r2[c2])-Math.log(r2[0]))/c2),D=R=r2[o2]!=0&&(D=-r2[c2]/r2[o2])<R?D:R;do for(var R,D=.1*(R=D),U=r2[0],M=1;M<p2;M++)U=U*D+r2[M];while(0<U);do for(var F=U=r2[0],M=1;M<c2;M++)F=R*F+(U=R*U+r2[M]);while(R-=P0=(U=R*U+r2[c2])/F,.005<Math.abs(P0/R));for(var t=R,M=1;M<c2;M++)_1[M]=(c2-M)*u0[M]/c2;for(_1[0]=u0[0],r=u0[c2],v1=u0[o2],A2=_1[o2]==0?1:0,e2=0;e2<5;e2++)if(U1=_1[o2],A2){for(M=0;M<o2;M++)_1[Q1=o2-M]=_1[Q1-1];A2=(_1[0]=0)==_1[o2]?1:0}else{for(var s=-r/U1,M=0;M<o2;M++)_1[Q1=o2-M]=s*_1[Q1-1]+u0[Q1];_1[0]=u0[0],A2=Math.abs(_1[o2])<=Math.abs(v1)*M0*10?1:0}for(M=0;M<c2;M++)n2[M]=_1[M];for(e2=1;e2<=20;e2++){if(i2=-f*m+p*E,m=f*E+p*m,i1(M0,F1,20*e2,i2=t*(E=i2),t,_1,c2,u0,p2,B2,-2*i2,g1),g1.NZ!=0){for(b0[Q1=v0.Degree-c2]=g1.szr,O0[Q1]=g1.szi,c2=(p2-=g1.NZ)-1,M=0;M<p2;M++)u0[M]=B2[M];g1.NZ!=1&&(b0[Q1+1]=g1.lzr,O0[Q1+1]=g1.lzi);break}for(M=0;M<c2;M++)_1[M]=n2[M]}if(20<e2){v0.Degree-=c2;break}}})($,x,o0,q);var P1=q.length;for(g0=0;g0<P1;g0++){var T=o1(q[g0],b+8),H=o1(o0[g0],b+8);H=2<b-String(H).length?H:o0[g0];var f0=T<0?"-":"";H===0&&(H=""),T===0&&(T=""),T=Math.abs(T)===1?f0+"i":T?T+"*i":"",T=H&&T?H+"+"+T:H+T,o0[g0]=T.replace(/\+\-/g,"-")}return o0}(C0,B0).concat(S),i0=0;i0<0;i0++)e0.unshift(0);return e0}var w,S=[];if(g instanceof l0&&g.isPoly()){if(g.distributeMultiplier(),g.group===m0&&(w=B.Utils.arrayMin(W(g.symbols)),w=g.symbols[w].clone().toUnitMultiplier(),g=a.expand(a.divide(g,w)),S.push(0)),g.group===B.groups.S)return[0];g.group===B.groups.PL&&(S0=W(g.symbols),C=B.Utils.arrayMin(S0),g=B.PARSER.divide(g,B.PARSER.parse(g.value+"^"+C)));for(var C=W(g.symbols).sort().pop(),V=g.group===B.groups.PL?g.symbols:g.symbols[C],K=V.group,S0=K===Z?[V.power.toDecimal()]:W(V.symbols),h0=[],y0=B.Utils.arrayMax(S0),g0=1;g0<=y0;g0++){var C1=0;S0.indexOf(g0+"")!==-1&&(C1=(K===Z?V:V.symbols[g0]).multiplier),h0.unshift(C1)}return h0.push(g.symbols[Q0].multiplier),V.group===Z&&(h0[0]=V.multiplier),A(h0,0,y0)}if(B.Utils.isArray(g)){for(var I1=g,h0=[],S0=[],x1=0,g0=0;g0<I1.length;g0++){for(var s0=I1[g0][0],n0=I1[g0][1],a0=n0-x1-1,Y=0;Y<a0;Y++)h0.unshift(0);h0.unshift(s0),n0!==0&&S0.push(n0),x1=n0}return A(h0,0,y0=Math.max.apply(void 0,S0))}throw new B.exceptions.NerdamerTypeError("Cannot calculate roots. Symbol must be a polynomial!")},roots:function(g){return g.isConstant(!0,!0)?B.Utils.nroots(g):(g=d0.proots(g).map(function(b){return a.parse(b)}),B.Vector.fromArray(g))},froot:function(g,b,A){return function(w){for(var S=A||B.Utils.build(B.Calculus.diff(g.clone())),C=g instanceof Function?g:B.Utils.build(g),V=!1,K=0;!V;){var S0=w-C(w)/S(w),h0=Math.abs(S0)-Math.abs(w);w=S0,Math.abs(h0)<1e-12?V=!0:1e4<K&&(V=!(w=null)),K++}return w}(Number(b))},quad:function(g,b,A){function w(S,C,V,K){return a.parse("-("+C+"+"+K+"*sqrt(("+C+")^2-4*("+S+")*("+V+")))/(2*"+S+")")}return[w(g,b,A,1),w(g,b,A,-1)]},sumProd:function(g,b){return d0.quad(-b,g,-1).map(function(A){return A.invert()})},coeffs:function(g,b,A){b=String(b),g=a.expand(g),A=A||[new l0(0)],g.group===R0&&g.contains(b,!0)&&a.error("Unable to get coefficients using expression "+g.toString());var w,S=c1(g);if(S.length!==1||S[0]!==b||g.isImaginary())b||a.error("Polynomial contains more than one variable. Please specify which variable is to be used!"),S.indexOf(b)===-1?A[0]=a.add(g,A[0]):(A=A||[new l0(0)],g.group===N0?((w=g.symbols[b])||a.error("Expression is not a polynomial!"),S=Number(w.power),((h0=a.divide(g.clone(),w.clone())).contains(b,!0)||S<0||!k0(S))&&a.error("Expression is not a polynomial!"),(S0=A[S])&&(h0=a.add(S0,h0)),A[S]=h0):g.group===G0&&g.each(function(y0){d0.coeffs(y0.clone(),b,A)},!0));else for(var C=new f1(g).coeffs.map(function(y0){return new l0(y0)}),V=0,K=C.length;V<K;V++){var S0,h0=C[V];(S0=A[V])&&(h0=a.add(S0,h0)),A[V]=h0}for(V=0,K=A.length;V<K;V++)A[V]===void 0&&(A[V]=new l0(0));return A},polyPowers:function(g,b,A){if(A=A||[],(C=g.group)===m0&&b===g.value)A=A.concat(W(g.symbols));else if(C===G0)for(var w in g.symbols){var S=g.symbols[w],C=S.group,w=S.value;C===Z&&b===w?A.push(S.power):C===m0||C===G0?A=d0.polyPowers(S,b,A):C===N0&&S.contains(b)?(S=S.symbols[b])&&A.push(S.power):C!==r0&&b===w||A.push(0)}else C===N0&&g.contains(b)&&A.push(B.Utils.decompose_fn(g,b,!0).x.power);return B.Utils.arrayUnique(A).sort()},Factor:{split:function(g){var b=new l0(1),A=new l0(1);return d0.Factor.factor(g,new h1).each(function(w){var S=a.parse(w);w.isConstant(!0)?b=a.multiply(b,S):A=a.multiply(A,S)}),[b,A]},mix:function(g,b){for(var A=W(g),w=A.length,S=[],C=0;C<w;C++){for(var V=A[C],K=g[V],S0=S.length,h0=0;h0<S0;h0++){var y0=S[h0]*V;S.push(y0),b&&S.push(-y0)}for(h0=1;h0<=K;h0++)S.push(Math.pow(V,h0))}return S},common:function(g,b){try{if(g.group===G0){for(var A=a.expand(g.clone(),!0).collectSymbols(null,null,function(y0,g0){return(g0.length||1)-(y0.length||1)}),w={},S=[],C=0;C<A.length;C++){var V=A[C];S.push(V.multiplier.clone()),V.each(function(y0){var g0=Number(y0.power);if(isNaN(g0))throw new Error("exiting");y0.value in w?(g0<w[y0.value][0]&&(w[y0.value][0]=g0),w[y0.value][1].push(y0)):w[y0.value]=[g0,[y0]]})}var K,S0=new l0(1);for(K in w)w[K][1].length===A.length&&(S0=a.multiply(S0,a.pow(new l0(K),new l0(w[K][0]))));var h0=B.Math2.QGCD.apply(null,S);if(!h0.equals(1))for(b.add(new l0(h0)),C=0;C<A.length;C++)A[C].multiplier=A[C].multiplier.divide(h0);if(!S0.equals(1))for(b.add(S0),g=new l0(0),C=0;C<A.length;C++)g=a.add(g,a.divide(A[C],S0.clone()))}}catch{}return g},zeroes:function(g,b){function A(){throw new B.exceptions.ValueLimitExceededError("Exiting")}try{for(var w,S,C,V=(g=a.expand(g.clone())).toString(),K=c1(g),S0=new l0(0),h0=[],y0=[],g0=0,C1=K.length;g0<K.length;g0++){for(var I1={},x1=0;x1<C1;x1++)g0!==x1&&(I1[K[x1]]=0);var s0,n0=(s0=a.parse(V,I1)).power;k0(n0)||A(),h0.push(s0),y0.push(s0.power)}for(B.Utils.allSame(y0)?(S=g.length,(C=h0.length)===2&&(w=new K0(y0[0]/(S-1))),C===3&&(w=new K0(y0[0]/Math.round((Math.sqrt(8*S-1)-3)/2)))):w=B.Math2.QGCD.apply(null,y0),k0(w)||A(),g0=0;g0<h0.length;g0++){var a0=h0[g0],Y=a0.power.clone().divide(w);a0.multiplier=new K0(Math.pow(a0.multiplier,1/Y)),a0.power=w.clone(),S0=a.add(S0,a0)}if(S0.group!==G0)return g;for(;;){var C0=d0.div(g.clone(),S0.clone());if(!C0[1].equals(0)||(g=C0[0],b.add(S0.clone()),g.equals(1)))break}}catch{}return g},factor:function(g,C){if(g.isConstant())return B.Math2.factor(g);var A,w,S=a.parse(g),C=d0.Factor._factor(S,C);return C.equals(g)||C.group===N0&&(A=new l0(1),g=a.parse(C.power),w=a.parse(C.multiplier),C.toUnitMultiplier(),C.multiplier.lessThan(0)&&(A.negate(),C.negate()),C.each(function(V){V=a.parse(d0.Factor._factor(V)),V.group===N0?(w=a.multiply(w,l0.create(V.multiplier)),V.each(function(K){K=a.parse(d0.Factor._factor(K)),A=a.multiply(A,K),K.group===N0&&(w=a.multiply(w,l0.create(K.multiplier)))})):A=a.multiply(A,V)}),C=a.pow(a.multiply(w,A),g)),C},quadFactor:function(g,b){if(g.isPoly()&&d0.degree(g.equals(2))){var A=B.Utils.variables(g)[0],w=d0.coeffs(g,A),S=d0.Factor._factor(w[2].clone());if(S.group===N0){var C=S.collectSymbols();if(2<C.length)return g;var K=a.multiply(a.parse(w[0]),a.parse(C[0])),V=a.parse(w[1]).negate(),S=a.parse(C[1]),K=d0.quad(S,V,K).filter(function(h0){if(B.Utils.isInt(h0))return h0});K.length===1&&(K=K[0],w=a.divide(w[0],a.parse(K)),B.Utils.isInt(w)&&(b.add(a.parse(T0("({0})*({1})+({2})",C[1],A,w))),b.add(a.parse(T0("({0})*({1})+({2})",C[0],A,K))),g=new l0(1)))}}return g},cubeFactor:function(g,b){var A,w,S,C,V,K;return!g.isComposite()||(K=g.collectSymbols()).length===2&&(A=K[0].sign(),w=K[0].clone().abs(),S=K[1].sign(),C=K[1].clone().abs(),w.isCube()&&C.isCube()&&(A<S&&([A,S]=[S,A],[w,C]=[C,w]),V=a.parse(w.getNth(3)),K=a.parse(C.getNth(3)),V=a.multiply(a.expand(a.pow(w.clone().toUnitMultiplier(),a.parse("1/3"))),V),K=a.multiply(a.expand(a.pow(C.clone().toUnitMultiplier(),a.parse("1/3"))),K),A===1&&S===-1?(b.add(a.parse(T0("(({0})-({1}))",V,K))),b.add(a.parse(T0("(({0})^2+({0})*({1})+({1})^2)",V,K))),g=l0(1)):A===1&&S===1&&(b.add(a.parse(T0("(({0})+({1}))",V,K))),b.add(a.parse(T0("(({0})^2-({0})*({1})+({1})^2)",V,K))),g=l0(1)))),g},_factor:function(g,b){var A;if(g.group,g.group===E1){var w=g.args[0];if(w.group===Z&&w.isSimple())return g}else if(g.group===Z&&g.isSimple())return g;g.group===G0&&(g.distributeMultiplier(!0),A=new l0(0),g.each(function($){($.group===G0&&$.power.greaterThan(1)||$.group===N0)&&($=a.expand($)),A=a.add(A,$)}),A.power=g.power,g=A),w=(g=g.group===E1&&g.fname!=="sqrt"?B.Utils.evaluate(g):g).clone();try{if(g.group===N0){var S=a.parse(g.power),C=d0.Simplify.strip(g.getDenom()),V=d0.Simplify.strip(g.getNum()),K=C.pop(),S0=V.pop();if(S0.equals(g))return g;var h0=d0.Factor.factor(S0),y0=d0.Factor.factor(K),g0=d0.Simplify.unstrip(V,h0),C1=d0.Simplify.unstrip(C,y0);return q=a.divide(g0,C1)}if(g.group===Z)return g;if(g.isConstant())return g.equals(1)?g.clone():B.Math2.factor(g);if(S=g.power.clone(),!k0(S)||S.lessThan(0)&&g.group===E1)return g;var I1=S.sign();g.toLinear(),b=b||new h1;var x1={};g=a.parse(B.Utils.subFunctions(g,x1)),0<W(x1).length&&(b.preAdd=function($){return a.parse($,B.Utils.getFunctionsSubs(x1))}),g.isLinear()||(b.pFactor=g.power.toString(),g.toLinear());var s0=c1(g);g.isImaginary()&&s0.push(B.Settings.IMAGINARY);var n0=1<s0.length;if(n0){var a0=!0,Y=!0;if(g.each(function($){$.group!==Z&&(a0=!1),$.multiplier.equals(1)||(Y=!1)}),a0&&Y)return a.pow(a.parse(g,B.Utils.getFunctionsSubs(x1)),a.parse(S))}var C0=new h1;g=d0.Factor.coeffFactor(g,C0),C0.each(function($){j(S)&&$.lessThan(0)&&$.negate(),I1<0&&$.invert(),b.add($)});var m1=new h1;if(g=d0.Factor.powerFactor(g,m1),m1.each(function($){I1<0&&$.invert(),b.add($)}),n0)g=d0.Factor.cubeFactor(g,b),g=d0.Factor.mfactor(g,b),b.each(function($){I1<0&&$.power.negate()});else{var B0=s0[0];g=d0.Factor.squareFree(g,b,B0);var e0=new h1;g=d0.Factor.trialAndError(g,e0,B0);var i0,H0=e0.toSymbol();if(H0.equals(w))return H0;for(i0 in e0.factors){var u1=e0.factors[i0];b.add(a.pow(u1,a.parse(S)))}g.equals(w)&&(g=d0.Factor.quadFactor(g,b))}g=a.parse(g,B.Utils.getFunctionsSubs(x1));var x=b.length===1;b.add(a.pow(g,a.parse(S)));var q=b.toSymbol();return q=x&&g.equals(1)&&q.isLinear()?a.pow(q,a.parse(S)):q}catch{return w}},reduce:function(g,b){if(g.group===G0&&g.length===2){var A=g.collectSymbols().sort(function(g0,C1){return C1.multiplier-g0.multiplier});if(A[0].power.equals(A[1].power)){var w=a.parse(A[0].power),S=A[0].clone().toLinear(),C=A[1].clone().toLinear();b.add(a.add(S.clone(),C.clone())),C.negate();for(var V=Number(w),y0=new l0(0),K=1;K<=V;K++)var S0=a.pow(S.clone(),a.subtract(w.clone(),new l0(K))),h0=a.pow(C.clone(),a.subtract(new l0(K),new l0(1))),y0=a.add(y0,a.multiply(S0,h0));return y0}}return g},squareFree:function(g,b,S){if(g.isConstant()||g.group===Z)return g;var w=new f1(g,S).squareFree(),S=w[2];return S===1?g:(g=w[1].toSymbol(),g.power=g.power.multiply(new K0(S)),b.add(d0.Factor.factor(g)),d0.Factor.squareFree(w[0].toSymbol(),b))},powerFactor:function(g,b){if(g.group!==m0||g.previousGroup===R0)return g;var A=W(g.symbols);if(!B.Utils.allNumeric(A))return g;var A=B.Utils.arrayMin(A),w=new l0(0),S=a.parse(g.value+"^"+A);return g.each(function(C){C=a.divide(C,S.clone()),w=a.add(w,C)}),b.add(S),w},coeffFactor:function(g,b){var A,w,S,C;return g.isComposite()&&((A=B.Math2.QGCD.apply(null,g.coeffs())).equals(1)?((w=function(V){var K;return V.group===N0?(K=0,V.each(function(S0){K+=S0.power})):K=Number(V.power),K})(C=(S=g.collectSymbols(null,null,null,!0).sort(function(V,K){return V.isConstant(!0)?1:K.power-V.power}))[0])>w(S[1])||S[1].isConstant(!0))&&C.multiplier.lessThan(0)&&(b.add(new l0(-1)),g.each(function(V){V.negate()},!0)):(g.each(function(V){V.isComposite()?V.each(function(K){K.multiplier=K.multiplier.divide(A)}):V.multiplier=V.multiplier.divide(A)}),g.updateHash()),b&&b.add(new l0(A))),g},trialAndError:function(g,b,A){var w=g.clone();try{var S=[];if(g.isConstant()||g.group===Z)return g;for(var C=new f1(g,A),V=C.coeffs[0],K=B.Math2.ifactor(V),S0=d0.proots(g),h0=0;h0<S0.length;h0++){var y0=S0[h0],g0=1;if(!isNaN(y0)){for(var C1 in K){var I1=B.Utils.round(Math.log(C1)/Math.log(Math.abs(y0)),8);if(k0(I1)){y0=C1,g0=I1;break}}var x1=new K0(y0),s0=[new K0(x1.num).negate()];s0[g0]=new K0(x1.den);var n0=f1.fromArray(s0,C.variable).fill(),a0=C.divide(n0);a0[1].equalsNumber(0)&&(C=a0[0],S.push(n0.toSymbol()))}}return C.equalsNumber(1)||(C=d0.Factor.search(C,b)),S.forEach(function(Y){b.add(Y)}),C.toSymbol()}catch{return w}},search:function(g,b,A){A=A||10;function w(C0,m1,B0,e0){return(B0=f1.fit(C0,m1,B0,A,e0,S))&&1<B0.coeffs.length&&(e0=g.divide(B0),e0[1].equalsNumber(0))?(b.add(B0.toSymbol()),[e0[0],B0]):null}var S=g.variable,C=g.coeffs[0],V=B.Math2.ifactor(C),K=g.lc(),S0=B.Math2.ifactor(K),h0=g.sub(A),y0=B.Math2.ifactor(h0),g0=d0.Factor.mix(y0,h0<0),C1=Math.ceil(g.coeffs.length/2),I1=K.lessThan(0),x1=C.lessThan(0);for(V[S0[1]=1]=1;C1--;)for(var s0 in S0)for(var n0 in V)for(var a0=0;a0<g0.length;a0++){var Y=w(s0,n0,g0[a0],C1);if(Y)return g=Y[0],g=B.Utils.isPrime(g.sub(A))?g:d0.Factor.search(g,b);Y||(I1&&x1?Y=w(-s0,-n0,g0[a0],C1):I1?Y=w(-s0,n0,g0[a0],C1):x1&&(Y=w(s0,-n0,g0[a0],C1)))}return g},mSqfrFactor:function(g,b){if(g.group!==E1)for(var A=c1(g).reverse(),w=0;w<A.length;w++)do if(A[w]!==g.value){var S=B.Calculus.diff(g,A[w]),C=d0.Factor.coeffFactor(S);if(C.equals(0))break;var V=!0;if(C.isConstant()&&g.isComposite()&&g.each(function(h0){h0.multiplier%C!=0&&(V=!1)},!0),V){var K=d0.div(g,C.clone()),S0=K[1].equals(0);if(g.equals(K[0])&&K[1].equals(0))break;if(K[0].isConstant()){b.add(K[0]);break}}else S0=!1;S0&&(b.add(K[0]),g=C)}else b.add(g),g=new l0(1);while(S0);return g},sqdiff:function(g,b){if(g.isConstant("all"))return g;try{var A,w,S,C,V,K=function(y0){return B.Utils.block("POSITIVE_MULTIPLIERS",function(){return l0.unwrapPARENS(A1.sqrt(A1.abs(y0)))},!0)},S0=B.Utils.separate(g.clone()),h0=[];for(A in S0)A!=="constants"&&h0.push(S0[A]);if(h0.sort(function(y0,g0){return g0.power-y0.power}),h0.length===2){if(V=h0.pop(),w=h0.pop(),j(V.power)&&j(w.power)&&V.sign()===w.sign()&&V.group===Z&&w.group===Z)throw new Error("Unable to factor");V.isComposite()&&w.power.equals(2)?(w=K(w),(S=d0.Factor.factor(a.add(V,S0.constants))).power.equals(2)&&(S.toLinear(),b.add(a.subtract(S.clone(),w.clone())),b.add(a.add(S,w)),g=new l0(1))):(V=V.powSimp(),w=w.powSimp(),V.group!==Z&&V.fname!==""||!V.power.equals(2)||w.group!==Z&&w.fname!==""||!w.power.equals(2)||S0.constants||(V.multiplier.lessThan(0)&&(C=w,w=V,V=C),V.multiplier.greaterThan(0)&&(V=K(V),w=K(w)),b.add(a.subtract(V.clone(),w.clone())),b.add(a.add(V,w)),g=new l0(1)))}}catch{}return g},mfactor:function(g,b){if(g.group===E1){var A,w;g.fname==="sqrt"?(A=new h1,w=d0.Factor.common(g.args[0].clone(),A),w=d0.Factor.coeffFactor(w,A),g=a.multiply(a.symfunction("sqrt",[w]),a.parse(g.multiplier)),A.each(function(m1){g=a.multiply(g,a.parse(B.Utils.format("sqrt({0})",m1)))})):b.add(g)}else{g=d0.Factor.mSqfrFactor(g,b);for(var S,C=c1(g),V=g.collectSymbols().map(function(m1){return l0.unwrapSQRT(m1)}),K={},S0={},h0=C.length,y0=V.length,g0=0;g0<h0;g0++){var C1=C[g0];K[C1]=new l0(0);for(var I1=0;I1<y0;I1++){var x1,s0=V[I1];s0.contains(C1)&&(x1=(s0.value===C1?s0:s0.symbols[C1]).power.toDecimal(),(!S0[C1]||x1<S0[C1])&&(S0[C1]=x1),K[C1]=a.add(K[C1],s0.clone()))}}for(S in K){var n0=a.parse(S+"^"+S0[S]),a0=a.divide(K[S],n0),Y=a.expand(a0);if(Y.equals(1)||(a0=d0.div(g.clone(),Y),a0[0].equals(0)))break;if(a0[1].equals(0)){var C0=!1;if(a0[0].each(function(m1){k0(m1.multiplier)||(C0=!0)}),C0){a0[1]=a.expand(a.multiply(a0[1],Y));break}}if(Y=k0(Y)&&Y.lessThan(0),a0[1].equals(0)&&!Y)return Y=d0.div(g.clone(),a0[0].clone()),(n0=Y[0]).equals(0)||(g=Y[1],n0.equals(-1)&&!g.equals(0))?g:(Y=a0[0],g.equals(Y)?(a0=d0.Factor.reduce(Y,b),g.equals(a0)?a0:d0.Factor.mfactor(a0,b)):(b.add(Y),g.equals(0)?n0:n0.isConstant("all")?(b.add(n0),n0):d0.Factor.mfactor(n0,b)))}}return g=d0.Factor.sqdiff(g,b),g=d0.Factor.zeroes(g,b)}},allLinear:function(g){for(var b=g.length,A=0;A<b;A++)if(!d0.isLinear(g[A]))return!1;return!0},isLinear:function(g){var b=!1,A=g.group;if(A===m0||A===G0)for(var w in b=!0,g.symbols){var S=g.symbols[w],w=S.group;if(w!==E1&&w!==R0||(b=!1),w===N0)b=c1(S).length===1;else if(w===m0||w===G0)b=d0.isLinear(S);else if(S.group!==r0&&S.power.toString()!=="1"){b=!1;break}}else A===Z&&g.power===1&&(b=!0);return b},gcd:function(){var g=arguments.length===1&&arguments[0]instanceof B.Vector?arguments[0].elements:B.Utils.arguments2Array(arguments);if(g.length===0)return new l0(1);if(g.length===1)return g[0];for(var b=[],A=!1,w=0;w<g.length;w++)if(g[w].group===E1&&g[w].fname==="gcd")(g=g.concat(arguments[w].args)).splice(w,1);else{var S=c1(g[w]);if(B.Utils.haveIntersection(S,b)){A=!0;break}b=b.concat(S)}if(A||b.length===0){if(g.every(function(V){return V.getDenom().equals(1)})){for(var C=g[0],w=1;w<g.length;w++)C=d0.gcd_(g[w],C);return C}return a.divide(d0.gcd.apply(null,g.map(function(V){return V.getNum()})),d0.lcm.apply(null,g.map(function(V){return V.getDenom()})))}return a.symfunction("gcd",g)},gcd_:function(g,b){if(g.group!==E1&&g.group!==p1||(g=B.Utils.block("PARSE2NUMBER",function(){return a.parse(g)})),b.group===E1&&(b=B.Utils.block("PARSE2NUMBER",function(){return a.parse(b)})),g.isConstant()&&b.isConstant())return new l0(B.Math2.QGCD(new K0(+g),new K0(+b)));var A=a.multiply(g.getDenom()||new l0(1),b.getDenom()||new l0(1)).invert();if(g=a.multiply(g.clone(),A.clone()),b=a.multiply(b.clone(),A.clone()),g=a.expand(g),b=a.expand(b),g.group===N0||b.group===N0){var w=a.divide(g.clone(),b.clone());if(!(S0=a.multiply(b.clone(),w.getDenom().invert())).equals(1))return S0}if(g.group===R0||b.group===R0){var w=new l0(B.Math2.GCD(g.multiplier,b.multiplier)),S=d0.gcd_(g.value===Q0?new l0(1):a.parse(g.value),b.value===Q0?new l0(1):a.parse(b.value)),C=d0.gcd_(a.parse(g.power),a.parse(b.power));return a.multiply(w,a.pow(S,C))}if(g.length<b.length&&(S0=g,g=b,b=S0),S=c1(g),C=c1(b),S.length===C.length&&S.length===1&&S[0]===C[0]||S.length===1&&C.length===0||S.length===0&&C.length===1)return g=new f1(g),b=new f1(b),a.divide(g.gcd(b).toSymbol(),A);var V,K=[];for(g.each(function(y0){K.push(y0.multiplier)}),b.each(function(y0){K.push(y0.multiplier)});!b.equals(0);){var S0=b.clone();if(g=g.clone(),V=d0.div(g,S0),b=V[1],V[0].equals(0))return a.divide(new l0(B.Math2.QGCD(g.multiplier,b.multiplier)),A);g=S0}var h0=B.Math2.QGCD.apply(void 0,K);return h0.equals(1)||g.each(function(y0){y0.multiplier=y0.multiplier.divide(h0)}),!g.equals(1)||g.isConstant()||b.isConstant()?a.divide(g,A):a.divide(a.symfunction("gcd",arguments),A)},lcm:function(){var g;arguments.length===1?arguments[0]instanceof B.Vector?g=arguments[0].elements:a.error("lcm expects either 1 vector or 2 or more arguments"):g=B.Utils.arguments2Array(arguments);var b=g.reduce(function(w,S){return a.multiply(w,S.clone())},new l0(1)),A=function(w,S){S=Number(S);for(var C,V,K=[],S0=Math.pow(2,w.length),h0=S;h0<S0;h0++){for(C=[],V=w.length-1;h0&1<<V&&C.push(w[V]),V--;);C.length===S&&K.push(C)}return K}(arguments,arguments.length-1).map(function(w){return w.reduce(function(S,C){return a.multiply(S,C.clone())},new l0(1))}),A=g.every(function(w){return B.Utils.isVariableSymbol(w)})?a.symfunction("gcd",B.Utils.arrayUnique(A)):d0.gcd.apply(null,A);return a.divide(b,A)},divide:function(g,b){var A=B.Algebra.Factor.factor(g.clone()),w=A.getDenom();return w.isConstant("all")?w=new l0(1):g=a.expand(l0.unwrapPARENS(a.multiply(A,w.clone()))),g=d0.div(g,b),b=a.divide(g[1],b),a.divide(a.add(g[0],b),w)},div:function(g,b){var A,w,S=[new l0(0),g.clone()];try{if(b.isConstant("all"))return g.each(function(O0){O0.multiplier=O0.multiplier.divide(b.multiplier)}),[g,new l0(0)];if(g=a.expand(g),b=a.expand(b),g.group===Z&&b.group===G0){var C=g.value,V=B.Utils.decompose_fn(b.clone(),C,!0);if(g.isLinear()&&V.x&&V.x.isLinear()&&b.isLinear()){var K=l0.create(g.multiplier);return[a.divide(K.clone(),V.a.clone()),a.divide(a.multiply(K,V.b),V.a).negate()]}}if(g.group===Z&&b.group===Z){var S0=a.divide(g.clone(),b.clone());return S0.isConstant()?[S0,new l0(0)]:[new l0(0),g.clone()]}var h0,y0,g0=g.hasFunc(),C1=b.hasFunc(),I1=!1;(g0||C1)&&(I1=!0,h0={},g=a.parse(B.Utils.subFunctions(g,h0)),b=a.parse(B.Utils.subFunctions(b,h0)),y0=B.Utils.getFunctionsSubs(h0));var x1=B.Utils.arrayUnique(c1(g).concat(c1(b)));if((g.isImaginary()||b.isImaginary())&&x1.push(B.Settings.IMAGINARY),x1.length===1)var s0=(f0=new f1(g).divide(new f1(b)))[0].toSymbol(),n0=f0[1].toSymbol();else{x1.push(Q0);var a0=function(O0){for(var I0=new l0(0),M0=0;M0<O0.length;M0++)var P0=O0[M0].toSymbol(),I0=a.add(I0,P0);return I0},Y=function(O0,M0){var P0,I0=Math.max.apply(null,O0.terms),d1=0;if(!M0){for(var j0=0;j0<O0.terms.length;j0++)if(O0.terms[j0].equals(I0)&&(P0=j0,d1++),1<d1)return}if(M0){for(j0=0;j0<O0.terms.length;j0++)if(O0.terms[j0].equals(I0)){P0=j0;break}}return[I0,P0,O0]},C0=function(O0,M0){var P0=O0[M0=M0||0],I0=O0.length;if(P0){for(var d1,j0=Y(P0),v1=M0+1;v1<I0;v1++){var U1=O0[v1],i2=P0.sum.equals(U1.sum);if(!i2&&j0)break;if(i2){for(var Q1,e2,j1,o2,p2=P0.terms.length,A2=0;A2<p2;A2++){var c2=P0.terms[A2],L2=U1.terms[A2];Q1!==void 0&&!c2.greaterThan(Q1)||(Q1=c2,j1=A2),e2!==void 0&&!L2.greaterThan(e2)||(e2=L2,o2=A2)}var q2=Q1.subtract(U1.terms[j1]),i2=e2.subtract(P0.terms[o2]);if(q2<i2){j0=[e2,o2,U1];break}if(i2<q2){j0=[Q1,j1,P0];break}}else if(j0=Y(U1))break;j0=Y(U1)}if(!j0)return Y(O0[0],!0);for(v1=0;v1<H0.length;v1++){var F1,_1=H0[v1].terms;if((F1=j0[1])===_1.length-1)return;if(!(d1=_1[F1]).equals(0))break}return d1.equals(0)?C0(O0,++M0):j0}},m1=B.Utils.toMapObj(x1),B0=function(O0,M0){return M0.sum.subtract(O0.sum)},e0=function(O0,M0){if(!O0||!M0)return!1;for(var P0=0;P0<O0.terms.length;P0++)if(O0.terms[P0].lessThan(M0.terms[P0]))return!1;return!0},i0=g.tBase(m1).sort(B0),H0=b.tBase(m1).sort(B0),u1=e0(i0[0],H0[0])&&i0[0].count>H0[0].count?H0:i0,x=C0(u1),q=[];if(x){var o0=x[1],$=function(j0,d1){var P0=j0.len(),I0=d1.len(),d1=d1.terms[o0],j0=j0.terms[o0];return P0<I0&&d1.greaterThan(j0)?I0-P0:d1.subtract(j0)},o0=function(O0,M0){for(var P0=[],I0=0;I0<O0.length;I0++)for(var d1=O0[I0],j0=0;j0<d1.terms.length;j0++){var v1=P0[j0],U1=d1.terms[j0];I0===0?P0[j0]=U1:v1&&!v1.equals(U1)&&(P0[j0]=void 0)}for(I0=0;I0<P0.length;I0++)if((d1=P0[I0])&&!d1.equals(0))return I0;return M0}(i0,o0);i0.sort($),H0.sort($);var F0=H0[0],D0=i0[0],c0=new z0(new K0(1),[],D0.map);if(F0.sum.greaterThan(D0.sum)&&1<D0.len())for(var l1=0;l1<D0.terms.length;l1++){var Z0=F0.terms[l1].subtract(D0.terms[l1]);if(Z0.equals(0))c0.terms[l1]=new K0(0);else{var i1=Z0.add(new K0(1));c0.terms[l1]=Z0;for(var P1=0;P1<i0.length;P1++)i0[P1].terms[l1]=i0[P1].terms[l1].add(i1)}}for(var T=e0(i0[0],H0[0]),H=0;T&&(w=H0,!(A=i0)[0].sum.equals(w[0].sum)||A.length>=w.length);){if(200<H++)throw new B.exceptions.InfiniteLoopError("Unable to compute!");var f0=i0[0].divide(H0[0]);for(q.push(f0),i0.shift(),l1=1;l1<H0.length;l1++){var v0=H0[l1].multiply(f0).generateImage(),u0=i0.length;for(u0===0&&(v0.coeff=v0.coeff.neg(),i0.push(v0),i0.sort($)),P1=0;P1<u0;P1++){var b0=i0[P1];if(b0.getImg()===v0.getImg()){b0.coeff=b0.coeff.subtract(v0.coeff),b0.coeff.equals(0)&&(B.Utils.remove(i0,P1),P1--);break}P1===u0-1&&(v0.coeff=v0.coeff.neg(),i0.push(v0),i0.sort($))}}if(!(T=e0(i0[0],H0[0]))&&i0.length>=H0.length){for(l1=1;l1<i0.length;l1++)if(T=e0(i0[l1],H0[0])){i0.unshift(B.Utils.remove(i0,l1));break}}}}s0=a0(q),n0=a0(i0),c0!==void 0&&(c0=c0.toSymbol(),s0=a.divide(s0,c0.clone()),n0=a.divide(n0,c0))}return I1&&(s0=a.parse(s0.text(),y0),n0=a.parse(n0.text(),y0)),[s0,n0]}catch{return S}},line:function(g,w,S){B.Utils.isArray(g)&&(g=B.Utils.convertToVector(g)),B.Utils.isArray(w)&&(w=B.Utils.convertToVector(w)),S=a.parse(S||"x"),B.Utils.isVector(g)&&B.Utils.isVector(w)||a.error('Line expects a vector! Received "'+g+'" & "'+w+'"');var C=a.subtract(w.e(1).clone(),g.e(1).clone()),w=a.subtract(w.e(2).clone(),g.e(2).clone()),C=a.divide(w,C),S=a.multiply(S,C.clone()),C=a.multiply(g.e(1).clone(),C);return a.add(a.subtract(S,C),g.e(2).clone())},PartFrac:{createTemplate:function(g,b,A,w){(g=d0.Factor.factor(g)).each(function(n0,a0){var Y;n0.group===E1&&n0.fname===""&&n0.args[0].group===Z&&(Y=n0.args[0],this.symbols?(delete this.symbols[a0],this.symbols[Y.value]=Y):g=n0.args[0])});for(var S=b.collectFactors(),C=[],V=[],K=new l0(1),S0=0;S0<S.length;S0++){var h0=l0.unwrapPARENS(S[S0]);if(h0.power.greaterThan(1))for(var y0=Number(h0.power),g0=h0.clone().toLinear(),C1=Number(d0.degree(g0,w)),I1=0;I1<y0;I1++){var x1=a.pow(g0.clone(),new l0(I1+1));A.push(x1.clone());var s0=a.divide(g.clone(),x1.clone());V.push(C1),C.push(s0)}else C1=Number(d0.degree(h0,w)),A.push(h0),s0=a.divide(g.clone(),h0.clone()),s0=a.expand(l0.unwrapPARENS(s0)),V.push(C1),C.push(s0)}return[A=A.map(function(n0){return a.multiply(n0,K.clone())}),C,V]},partfrac:function(g,b,A){var w=c1(g);b=b||a.parse(w[0]);try{var S,C,V,K,S0,h0,y0,g0,C1,I1,x1,s0,n0,a0,Y=a.expand(g.getNum()),C0=a.expand(g.getDenom().toUnitMultiplier());if(Y.multiplier=g.multiplier,V=Y.groupTerms(b),Number(d0.degree(Y,b))>=Number(d0.degree(C0,b))?(g0=(y0=d0.div(Y.clone(),a.expand(C0.clone())))[0],V=(Y=y0[1]).groupTerms(b)):g0=new l0(0),Number(d0.degree(C0,b))===1){var m1=a.divide(Y,C0);return A?[g0,m1]:a.add(g0,m1)}C=d0.Factor.factor(C0),x1=d0.PartFrac.createTemplate(C0.clone(),C,[],b),s0=x1[0],C1=x1[1],K=x1[2],h0=[V.length],S0=[],S=[],I1=[],C1.map(function(F0,D0){n0=s0[D0],a0=K[D0];for(var c0=0;c0<a0;c0++){S.push(n0.clone());var l1=l0.create(b,c0),Z0=a.expand(a.multiply(F0,l1.clone())).groupTerms(b),i1=Z0.length;h0.push(i1),S0.push(Z0),I1.push(l1.clone())}});for(var B0=B.Utils.arrayMax(h0),e0=new B.Matrix(B.Utils.fillHoles(V,B0)).transpose(),i0=new B.Matrix,H0=0;H0<S0.length;H0++)i0.elements.push(B.Utils.fillHoles(S0[H0],B0));var u1=a.multiply(i0.transpose().invert(),e0),x=A?[g0]:g0;return u1.each(function(F0,D0){D0=a.multiply(I1[D0],a.divide(F0,S[D0])),A?x.push(D0):x=a.add(x,D0)}),x}catch{try{if(g.isComposite()){var q={};g.each(function(Z0){var c0=Z0.getDenom(),l1=Z0.getNum(),Z0=q[c0];q[c0]=Z0?a.add(Z0,l1):l1});var $,o0=new l0(0);for($ in q)o0=a.add(o0,a.divide(q[$],a.parse($)));g=o0}}catch{}}return g}},degree:function(g,b,A){if(A=A||{nd:[],sd:[],depth:0},!b){var w=c1(g);if(1<w.length)throw new Error("You must specify the variable for multivariate polynomials!");if(w.length===0)return new l0(0);b=a.parse(w[0])}return w=g.group,g.isComposite()?((g=g.clone()).distributeExponent(),g.each(function(S){A.depth++,d0.degree(S,b,A),A.depth--})):g.group===N0?g.each(function(S){A.depth++,d0.degree(S,b,A),A.depth++}):w===R0&&g.value===b.value?A.sd.push(g.power.clone()):w===Z&&g.value===b.value?A.nd.push(a.parse(g.power)):A.nd.push(new l0(0)),g=0<A.nd.length?B.Utils.arrayMax(A.nd):void 0,A.depth===0&&0<A.sd.length?(g!==void 0&&A.sd.unshift(g),a.symfunction("max",A.sd)):B.Utils.isSymbol(g)?g:a.parse(g)},sqComplete:function(g,b,A){B.Utils.isSymbol(b)||(b=a.parse(b));var w,S,C,V,K,S0=function(h0){throw new B.exceptions.ValueLimitExceededError(h0=h0||"Stopping")};return g.isPoly(!0)||S0("Must be a polynomial!"),V=B.Utils.inBrackets,g=g.clone(),(w=B.Algebra.degree(g,b)).equals(2)||S0("Cannot complete square for degree "+w),K=(C=B.Algebra.coeffs(g,b))[2],S0=C[1].sign(),w=a.divide(C[1],new l0(2)),g=a.pow(w.clone(),new l0(2)),A?[K,w,S]:(K=A1.sqrt(K),g=a.divide(A1.sqrt(g),K.clone()),S=a.subtract(C[0],a.pow(g.clone(),new l0(2))),{a:g=a.parse(V(K.clone()+"*"+b+(S0<0?"-":"+")+g)),c:S,f:a.add(a.pow(g.clone(),new l0(2)),S.clone())})},Simplify:{strip:function(g){var b=a.parse(g.multiplier);g.toUnitMultiplier();var A=a.parse(g.power);return g.toLinear(),[b,A,g]},unstrip:function(w,b){var A=w[0],w=w[1];return a.multiply(A,a.pow(b,w))},complexSimp:function(w,S){var V=w.realpart(),C=w.imagpart(),A=S.realpart(),K=S.imagpart(),w=a.multiply(V.clone(),A.clone()),S=a.multiply(C.clone(),K.clone()),C=a.multiply(A.clone(),C),V=a.multiply(V,K.clone()),K=a.add(a.pow(A,new l0(2)),a.pow(K,new l0(2)));return a.divide(a.add(a.add(w,S),a.multiply(a.subtract(C,V),l0.imaginary())),K)},trigSimp:function(g){var b,A,w,S,C,V;return g.containsFunction(["cos","sin","tan"])&&(g=g.clone(),A=(g=(b=d0.Simplify.strip(g)).pop()).clone(),g.group===G0?(w=new l0(0),g.each(function(K){K=d0.Simplify.trigSimp(K.fnTransform()),w=a.add(w,K)},!0),A=a.pow(a.multiply(new l0(g.multiplier),w),new l0(g.power))):g.group===N0&&(S=g.getNum(),C=g.getDenom(),(A=S.fname==="sin"&&C.fname==="cos"&&S.args[0].equals(C.args[0])&&S.power.equals(C.power)?a.parse(B.Utils.format("({0})*({1})*tan({2})^({3})",C.multiplier,S.multiplier,S.args[0],S.power)):A).group===N0&&(V=new l0(1),A.each(function(K){K.fname==="tan"&&(K=a.parse(B.Utils.format("({0})*sin({1})^({2})/cos({1})^({2})",K.multiplier,d0.Simplify.simplify(K.args[0]),K.power))),V=a.multiply(V,K)}),A=V)),g=A=d0.Simplify.unstrip(b,A).distributeMultiplier()),g},fracSimp:function(g){var b=g.getDenom();if((g=(K=g.getNum()).isImaginary()&&b.isImaginary()?d0.Simplify.complexSimp(K,b):g).isComposite()){for(var A,w,S,C,V,K,S0=(g=1<g.power?a.expand(g):g).collectSymbols(),h0=S0.pop();S0.length;)V=S0.pop(),C=a.parse(h0.getDenom()),S=a.parse(V.getDenom()),A=h0.getNum(),w=V.getNum(),V=a.multiply(C.clone(),S.clone()),S=a.multiply(A,S),C=a.multiply(w,C),C=a.add(S,C),h0=a.divide(C,V);return b=a.expand(h0.getDenom()),(b=(K=a.expand(h0.getNum())).isImaginary()&&b.isImaginary()?d0.Simplify.complexSimp(K,b):a.divide(K,b)).equals(g)?g:d0.Simplify.simplify(b)}return g},ratSimp:function(g){var b,A;return g.group===N0&&(b=g.getDenom(),A=g.getNum().distributeMultiplier(),b=d0.Simplify.fracSimp(b),A=d0.Simplify.fracSimp(A),g=a.divide(A,b)),g},sqrtSimp:function(g,b){if(g.isSQRT()){var A,w,S=d0.Factor.factor(g.args[0].clone()),C=a.parse(S.multiplier),V=C.sign(),K=a.sqrt(C.abs());if(k0(K))return S.group===N0?(A=new l0(1),S.each(function(S0){var h0;S0.group===r0?(h0=a.sqrt(S0.clone()),k0(h0)?K=a.multiply(K,h0):A=a.multiply(A,S0)):A=a.multiply(A,S0)}),V=a.multiply(A,a.parse(V)),(w=a.sqrt(V.clone())).isImaginary&&(w=a.sqrt(a.expand(V.clone())))):w=a.sqrt(S.clone().toUnitMultiplier()),a.multiply(K,w)}else g.isComposite()&&g.isLinear()?(K=new l0(0),g.each(function(S0){K=a.add(K,d0.Simplify.sqrtSimp(S0))},!0),K=a.multiply(K,a.parse(g.multiplier))):g.group===N0&&(K=a.parse(g.multiplier),g.each(function(S0){S0=d0.Simplify.sqrtSimp(S0),K=a.multiply(K,S0)},!0),K=a.pow(K,a.parse(g.power)));return K||a.parse(g)},patternSub:function(g){var b={},A=function(S){var C=!1;return S.each(function(V){V.group===G0?C=!0:V.symbols&&(C=A(V))}),C},w=function(S){S.each(function(C){var V;!C.symbols&&C.group!==E1||(A(C)?w(C):b[C.value]||(V=B.Utils.getU(g),b[C.value]=V,g=g.sub(C.value,V)))},!0)};return w(g),[g,b]},simplify:function(g){var b=d0.Simplify.strip(g);if(g=b.pop(),(g=d0.Simplify.fracSimp(g)).isConstant()||g.group===B.groups.S)return b.push(g),d0.Simplify.unstrip(b,g);var A,w=g.clone(),w=d0.Simplify.trigSimp(w);return w=d0.Simplify.ratSimp(w),(w=d0.Factor.factor(w)).group===B.groups.CP&&w.isLinear()&&(g=w.multiplier.clone(),w.toUnitMultiplier(),A=new l0(0),w.each(function(S){S=d0.Simplify.simplify(S),A=a.add(A,S)}),(w=A).multiplier=A.multiplier.multiply(g)),d0.Simplify.unstrip(b,w)}},Classes:{Polynomial:f1,Factors:h1,MVTerm:z0}};B.Expression.prototype.simplify=function(){return d0.Simplify.simplify(this.symbol)},_2.useAlgebraDiv=function(){var g=d0.divideFn=a.divide,b=0;a.divide=function(A,w){return w=++b===1?B.Algebra.divide(A,w):g(A,w),b=0,w}},_2.useParserDiv=function(){d0.divideFn&&(a.divide=d0.divideFn),delete d0.divideFn},_2.register([{name:"factor",visible:!0,numargs:1,build:function(){return d0.Factor.factor}},{name:"simplify",visible:!0,numargs:1,build:function(){return d0.Simplify.simplify}},{name:"gcd",visible:!0,numargs:[1],build:function(){return d0.gcd}},{name:"lcm",visible:!0,numargs:[1],build:function(){return d0.lcm}},{name:"roots",visible:!0,numargs:-1,build:function(){return d0.roots}},{name:"divide",visible:!0,numargs:2,build:function(){return d0.divide}},{name:"div",visible:!0,numargs:2,build:function(){return d0.div}},{name:"partfrac",visible:!0,numargs:[1,2],build:function(){return d0.PartFrac.partfrac}},{name:"deg",visible:!0,numargs:[1,2],build:function(){return d0.degree}},{name:"coeffs",visible:!0,numargs:[1,2],build:function(){return function(){var g=d0.coeffs.apply(d0,arguments);return new B.Vector(g)}}},{name:"line",visible:!0,numargs:[2,3],build:function(){return d0.line}},{name:"sqcomp",visible:!0,numargs:[1,2],build:function(){return function(g,b){try{return b=b||c1(g)[0],d0.sqComplete(g.clone(),b).f}catch{return g}}}}]),_2.updateAPI()}(),typeof Z2<"u"&&_2===void 0&&(_2=require("./nerdamer.core.js"),require("./algebr.js")),function(){var B=_2.getCore(),a=B.PARSER,r0=B.Frac,p1=B.Settings,Z=B.Utils.isSymbol,o1=B.groups.FN,R0=B.Symbol,E1=B.Utils.text,m0=B.Utils.inBrackets,G0=B.Utils.isInt,N0=B.Utils.format,W=B.Utils.even,j=B.Utils.evaluate,c1=B.groups.N,T0=B.groups.S,o1=B.groups.FN,K0=B.groups.PL,k0=B.groups.CP,l0=B.groups.CB,Q0=B.groups.EX,A1=B.groups.P,f1=p1.LOG,h1="sqrt",z0="sin",d0="cos",g="tan",b="sec",A="csc",w="cot",S="asin",C="atan",V="sinh",K="cosh",S0="tanh";function h0(n0){this.message=n0||""}h0.prototype=new Error,R0.prototype.hasIntegral=function(){return this.containsFunction("integrate")},R0.prototype.fnTransform=function(){if(this.group!==o1)return this;var n0,a0,Y,C0=this.args[0],m1=new R0(this.multiplier),B0=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case V:Y=a.parse(N0("(e^({0})-e^(-({0})))/2",C0));break;case K:Y=a.parse(N0("(e^({0})+e^(-({0})))/2",C0));break;case S0:Y=a.parse(N0("(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))",C0));break;case g:Y=a.parse(N0("sin({0})/cos({0})",C0));break;case A:Y=a.parse(N0("1/sin({0})",C0));break;case b:Y=a.parse(N0("1/cos({0})",C0));break;default:Y=B0}else if(this.power.equals(2))switch(this.fname){case z0:Y=a.parse(N0("1/2-cos(2*({0}))/2",C0));break;case d0:Y=a.parse(N0("1/2+cos(2*({0}))/2",C0));break;case g:Y=a.parse(N0("sin({0})^2/cos({0})^2",C0));break;case K:Y=a.parse(N0("1/2+cosh(2*({0}))/2",C0));break;case V:Y=a.parse(N0("-1/2+cosh(2*({0}))/2",C0));break;case S0:Y=a.parse(N0("(1+cosh(2*({0})))/(-1+cosh(2*({0})))",C0));break;case b:Y=a.parse(N0("(1-cos(2*({0})))/(1+cos(2*({0})))+1",C0));break;default:Y=B0}else this.fname===b?Y=a.parse(N0("1/cos({0})^({1})",this.args[0],this.power)):this.fname===A?Y=a.parse(N0("1/sin({0})^({1})",this.args[0],this.power)):this.fname===g?Y=this.power.lessThan(0)?a.parse(N0("cos({0})^(-({1}))/sin({0})^({1})",this.args[0],this.power.negate())):a.parse(N0("sin({0})^({1})/cos({0})^({1})",this.args[0],this.power)):this.fname===z0&&this.power.lessThan(0)?Y=a.parse(N0("csc({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===d0&&this.power.lessThan(0)?Y=a.parse(N0("sec({0})^(-({1}))",this.args[0],this.power.negate())):this.fname===z0&&this.power.equals(3)?Y=a.parse(N0("(3*sin({0})-sin(3*({0})))/4",this.args[0])):this.fname===d0&&this.power.equals(3)?Y=a.parse(N0("(cos(3*({0}))+3*cos({0}))/4",this.args[0])):this.fname!==d0&&this.fname!==z0||!W(this.power)?Y=B0:(a0=this.power/2,n0=a.pow(this.clone().toLinear(),a.parse(2)).fnTransform(),a0=a.expand(a.pow(n0,a.parse(a0))),Y=new R0(0),a0.each(function(e0){e0=e0.fnTransform(),Y=a.add(Y,e0)},!0));return a.multiply(Y,m1)},R0.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===T0)return!1;if(this.fname&&(B.Utils.in_trig(this.fname)||B.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols){for(var n0 in this.symbols)if(this.symbols[n0].hasTrig())return!0}return!1},B.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},B.Utils.toCommonDenominator=function(n0){if(n0.isComposite()&&n0.isLinear()){var a0=new R0(n0.multiplier),Y=new R0(1),C0=new R0(0);return n0.each(function(m1){Y=a.multiply(Y,m1.getDenom())},!0),n0.each(function(e0){var B0=e0.getNum(),e0=e0.getDenom(),e0=a.multiply(B0,a.divide(Y.clone(),e0));C0=a.add(C0,e0)}),a.multiply(a0,B.Algebra.divide(a.expand(C0),a.expand(Y)))}return n0},B.Utils.in_inverse_trig=function(n0){return[S,"acos",C,"acsc","asec","acot"].indexOf(n0)!==-1},B.Utils.in_trig=function(n0){return[d0,z0,g,b,A,w].indexOf(n0)!==-1},B.Utils.in_htrig=function(n0){return[V,K,S0,"acsch","asech","acoth"].indexOf(n0)!==-1},B.Matrix.jacobian=function(n0,a0){var Y=new B.Matrix;return(a0=a0||B.Utils.arrayGetVariables(n0)).forEach(function(C0,m1){n0.forEach(function(B0,e0){B0=B.Calculus.diff(B0.clone(),C0),Y.set(e0,m1,B0)})}),Y},B.Matrix.prototype.max=function(){var n0=new R0(0);return this.each(function(a0){a0=a0.abs(),a0.gt(n0)&&(n0=a0)}),n0},B.Matrix.cMatrix=function(n0,a0){var Y=new B.Matrix;return a0.forEach(function(C0,m1){Y.set(m1,0,a.parse(n0))}),Y};var y0=B.Utils.all_functions=function(n0){for(var a0=0,Y=n0.length;a0<Y;a0++)if(n0[a0].group!==o1)return!1;return!0},g0=B.Utils.cosAsinBtranform=function(n0,a0){return n0=n0.args[0],a0=a0.args[0],a.parse(N0("(sin(({0})+({1}))-sin(({0})-({1})))/2",n0,a0))},C1=B.Utils.cosAsinAtranform=function(n0,a0){return Number(a0.power)!==1?a.multiply(n0,a0):(n0=n0.args[0],a.parse(N0("(sin(2*({0})))/2",n0)))},I1=B.Utils.cosAsinBtranform=function(n0,a0){return n0=n0.args[0],a0=a0.args[0],a.parse(N0("(cos(({0})+({1}))-cos(({0})-({1})))/2",n0,a0))},x1=B.Utils.trigTransform=function(n0){for(var a0,Y,C0,m1,B0={},e0=new R0(1),i0=0,H0=n0.length;i0<H0;i0++)(C0=n0[i0]).group===o1?(Y=C0.fname)===d0&&B0.sin?(a0=(B0.sin.args[0].toString()!==C0.args[0].toString()?g0:C1)(C0,B0.sin),delete B0.sin,e0=a.multiply(e0,a0)):Y===z0&&B0.cos?(a0=(B0.cos.args[0].toString()!==C0.args[0].toString()?g0:C1)(C0,B0.cos),delete B0.cos,e0=a.multiply(e0,a0)):Y===z0&&B0.sin?(a0=B0.sin.args[0].toString()!==C0.args[0].toString()?I1(C0,B0.sin):a.multiply(C0,B0.sin),delete B0.sin,e0=a0):B0[Y]=C0:e0=a.multiply(e0,C0);for(m1 in B0)e0=a.multiply(e0,B0[m1]);return e0};B.Settings.integration_depth=10,B.Settings.max_lim_depth=10;var s0=B.Calculus={version:"1.4.6",sum:function(n0,a0,Y,C0){if(a0.group!==B.groups.S)throw new B.exceptions.NerdamerTypeError("Index must be symbol. "+E1(a0)+" provided");var m1;return a0=a0.value,B.Utils.isNumericSymbol(Y)&&B.Utils.isNumericSymbol(C0)?(m1=C0-Y<200?"":"PARSE2NUMBER",Y=Number(Y),C0=Number(C0),B.Utils.block(m1,function(){for(var B0=n0.text(),e0={"~":!0},i0=new B.Symbol(0),H0=Y;H0<=C0;H0++){e0[a0]=new R0(H0);var u1=a.parse(B0,e0),i0=a.add(i0,u1)}return i0})):a.symfunction("sum",arguments)},product:function(n0,a0,Y,C0){if(a0.group!==B.groups.S)throw new B.exceptions.NerdamerTypeError("Index must be symbol. "+E1(a0)+" provided");return a0=a0.value,B.Utils.isNumericSymbol(Y)&&B.Utils.isNumericSymbol(C0)?B.Utils.block(C0-Y<200?"":"PARSE2NUMBER",function(){Y=Number(Y),C0=Number(C0.multiplier);for(var m1=n0.text(),B0={},e0=new B.Symbol(1),i0=Y;i0<=C0;i0++)B0[a0]=new R0(i0),e0=a.multiply(e0,a.parse(m1,B0));return e0}):a.symfunction("product",arguments)},diff:function(n0,a0,Y){if(B.Utils.isVector(n0)){var C0=new B.Vector([]);return n0.each(function(q){C0.elements.push(s0.diff(q,a0,Y))}),C0}if(B.Utils.isMatrix(n0)){var m1=new B.Matrix;return n0.each(function(q,$,o0){m1.set($,o0,s0.diff(q,a0,Y))}),m1}var B0,e0,i0=Z(a0)?a0.text():a0;return Y=Z(Y)?Y.multiplier:Y||1,i0===void 0&&(i0=B.Utils.variables(n0)[0]),n0.group===o1&&n0.fname===h1&&(e0=n0.args[0],B0=n0.power.clone(),e0.group===c1&&e0.group===A1||(e0.power=Z(e0.power)?a.multiply(e0.power,a.multiply(new R0(.5)),B0):e0.power.multiply(new r0(.5)).multiply(B0),e0.multiplier=e0.multiplier.multiply(n0.multiplier)),n0=e0),n0=n0.group!==o1||Z(n0.power)?u1(n0):(B0=u1(a.parse(n0)),e0=s0.diff(n0.args[0].clone(),i0),a.multiply(B0,e0)),n0=1<Y?s0.diff(n0,a0,--Y):n0;function H0(q){return q.value!==i0&&!q.contains(i0,!0)||(q.multiplier=q.multiplier.multiply(q.power),q.power=q.power.subtract(new r0(1)),q.power.equals(0)&&(q=R0(q.multiplier))),q}function u1(q){var $=q.group;if($===c1||$===T0&&q.value!==i0||$===A1)q=R0(0);else if($===T0)q=H0(q);else{if($===l0){var o0=q.multiplier.clone();q.toUnitMultiplier();var F0=a.multiply(function(P1){for(var T=P1.collectSymbols(),H=new R0(0),f0=T.length,v0=0;v0<f0;v0++){for(var u0=s0.diff(T[v0].clone(),i0),b0=0;b0<f0;b0++)v0!==b0&&(u0=a.multiply(u0,T[b0].clone()));H=a.add(H,u0)}return H}(q),H0(q));return F0.multiplier=F0.multiplier.multiply(o0),F0}if($===o1&&q.power.equals(1))switch(q.fname){case f1:D0=q.clone(),(q=q.args[0].clone()).power=q.power.negate(),q.multiplier=D0.multiplier.divide(q.multiplier);break;case d0:q.fname=z0,q.multiplier.negate();break;case z0:q.fname=d0;break;case g:q.fname=b,q.power=new r0(2);break;case b:q=x(q,g);break;case A:q=x(q,"-cot");break;case w:q.fname=A,q.multiplier.negate(),q.power=new r0(2);break;case S:q=a.parse("(sqrt(1-("+E1(q.args[0])+")^2))^(-1)");break;case"acos":q=a.parse("-(sqrt(1-("+E1(q.args[0])+")^2))^(-1)");break;case C:q=a.parse("(1+("+E1(q.args[0])+")^2)^(-1)");break;case"abs":o0=q.multiplier.clone(),q.toUnitMultiplier(),(l1=q.args[0].clone()).toUnitMultiplier(),(q=a.parse(m0(E1(q.args[0]))+"/abs"+m0(E1(l1)))).multiplier=o0;break;case"parens":q=R0(1);break;case"cosh":q.fname="sinh";break;case"sinh":q.fname="cosh";break;case S0:q.fname="sech",q.power=new r0(2);break;case"sech":q=x(q,"-tanh");break;case"csch":var c0=String(q.args[0]);return a.parse("-coth("+c0+")*csch("+c0+")");case"coth":return c0=String(q.args[0]),a.parse("-csch("+c0+")^2");case"asinh":q=a.parse("(sqrt(1+("+E1(q.args[0])+")^2))^(-1)");break;case"acosh":q=a.parse("(sqrt(-1+("+E1(q.args[0])+")^2))^(-1)");break;case"atanh":q=a.parse("(1-("+E1(q.args[0])+")^2)^(-1)");break;case"asech":c0=String(q.args[0]),q=a.parse("-1/(sqrt(1/("+c0+")^2-1)*("+c0+")^2)");break;case"acoth":q=a.parse("-1/(("+q.args[0]+")^2-1)");break;case"acsch":c0=String(q.args[0]),q=a.parse("-1/(sqrt(1/("+c0+")^2+1)*("+c0+")^2)");break;case"asec":c0=String(q.args[0]),q=a.parse("1/(sqrt(1-1/("+c0+")^2)*("+c0+")^2)");break;case"acsc":c0=String(q.args[0]),q=a.parse("-1/(sqrt(1-1/("+c0+")^2)*("+c0+")^2)");break;case"acot":q=a.parse("-1/(("+q.args[0]+")^2+1)");break;case"S":c0=String(q.args[0]),q=a.parse("sin((pi*("+c0+")^2)/2)");break;case"C":c0=String(q.args[0]),q=a.parse("cos((pi*("+c0+")^2)/2)");break;case"Si":c0=q.args[0],q=a.parse("sin("+c0+")/("+c0+")");break;case"Shi":c0=q.args[0],q=a.parse("sinh("+c0+")/("+c0+")");break;case"Ci":c0=q.args[0],q=a.parse("cos("+c0+")/("+c0+")");break;case"Chi":c0=q.args[0],q=a.parse("cosh("+c0+")/("+c0+")");break;case"Ei":c0=q.args[0],q=a.parse("e^("+c0+")/("+c0+")");break;case"Li":c0=q.args[0],q=a.parse("1/"+p1.LOG+"("+c0+")");break;case"erf":q=a.parse("(2*e^(-("+q.args[0]+")^2))/sqrt(pi)");break;case"atan2":var D0=String(q.args[0]),c0=String(q.args[1]);q=a.parse("("+c0+")/(("+c0+")^2+("+D0+")^2)");break;case"sign":q=new R0(0);break;case"sinc":q=a.parse(N0("(({0})*cos({0})-sin({0}))*({0})^(-2)",q.args[0]));break;case p1.LOG10:q=a.parse("1/(("+q.args[0]+")*"+p1.LOG+"(10))");break;default:q=a.symfunction("diff",[q,a0])}else if($===Q0||$===o1&&Z(q.power)){var F0=$===Q0?q.value:$===o1&&q.contains(i0)?q.fname+m0(E1(q.args[0])):q.value+m0(E1(q.args[0])),l1=(a.multiply(a.parse(f1+m0(F0)),q.power.clone()),s0.diff(a.multiply(a.parse(f1+m0(F0)),q.power.clone()),i0));q=a.multiply(q,l1)}else if($!==o1||q.power.equals(1)){if($===k0||$===K0){var Z0,$=q.clone(),i1=new R0(0);for(Z0 in q.symbols)i1=a.add(i1,s0.diff(q.symbols[Z0].clone(),i0));q=a.multiply(H0($),i1)}}else(l1=q.clone()).toLinear(),l1.toUnitMultiplier(),q=a.multiply(H0(q.clone()),u1(l1))}return q.updateHash(),q}function x(q,$,o0){return a.multiply(q,a.parse($+m0(o0||E1(q.args[0]))))}},integration:{u_substitution:function(H0,a0){function Y(o0,F0,D0){var c0=s0.diff(F0,a0),c0=D0?D0(o0,F0):a.divide(o0.clone(),c0);return c0.contains(a0,!0)?null:c0}function C0(o0,F0){return o0=s0.integrate(a.symfunction(o0,[new R0(u1)]),u1,0),(o0=o0.sub(new R0(u1),F0)).updateHash(),o0}var m1,B0=H0[0].clone(),e0=H0[1].clone(),i0=B0.group,H0=e0.group,u1="__u__";if(i0===o1&&H0!==o1)return(m1=Y(e0,(q=B0.args[0]).clone()))?a.multiply(m1,C0(B0.fname,q)):(m1=Y(e0,B0))?s0.integration.poly_integrate(B0):void 0;if(H0===o1&&i0!==o1){if(m1=Y(B0,(q=e0.args[0]).clone()))return a.multiply(m1,C0(e0.fname,q))}else{if(i0===o1&&H0===o1)return(m1=Y(B0.clone(),e0.clone()))||(m1=Y(e0.clone(),B0.clone()))?a.multiply(s0.integration.poly_integrate(e0),m1):void 0;if(i0===Q0&&H0!==Q0){if(!(m1=Y(e0,($=B0.power).clone()))){var x=s0.integration.decompose_arg($.clone(),a0),q=s0.diff(x[2].clone(),a0),q=s0.integration.decompose_arg(q.clone(),a0);if(a.multiply(x[1],q[1]).power.equals(e0.power))return q=a.divide(x[0].clone(),q[0].clone()),q=a.multiply(q.clone(),a.pow(new R0(B0.value),a.multiply(x[0],new R0(u1)))),q=a.multiply(q,new R0(u1)),s0.integration.by_parts(q,u1,0,{}).sub(u1,x[1].clone())}return x=s0.integrate(B0.sub($.clone(),new R0(u1)),u1,0),a.multiply(x.sub(new R0(u1),$),m1)}if(H0===Q0&&i0!==Q0)return m1=Y(B0,($=e0.power).clone()),x=s0.integrate(e0.sub($,new R0(u1)),u1,0),a.multiply(x.sub(new R0(u1),$),m1);if(B0.isComposite()||e0.isComposite()){var i0=function(D0,c0){return c0=s0.diff(c0,a0),D0=B.Algebra.Factor.factor(D0),c0=B.Algebra.Factor.factor(c0),a.divide(D0,c0)},x=B0.isComposite()?B0.clone().toLinear():B0.clone(),$=e0.isComposite()?e0.clone().toLinear():e0.clone();return(m1=Y(x.clone(),$.clone(),i0))?a.multiply(s0.integration.poly_integrate(e0),m1):(m1=Y($.clone(),x.clone(),i0))?a.multiply(s0.integration.poly_integrate(B0),m1):void 0}}},poly_integrate:function(C0){var a0=C0.power.toString(),Y=C0.multiplier.toDecimal(),C0=C0.toUnitMultiplier().toLinear();return Number(a0)===-1?a.multiply(new R0(Y),a.symfunction(f1,[C0])):a.parse(N0("({0})*({1})^(({2})+1)/(({2})+1)",Y,C0,a0))},stop:function(n0){throw B.Utils.warn(n0=n0||"Unable to compute integral!"),new h0(n0)},partial_fraction:function(n0,a0,Y,C0){var m1;return Z(a0)||(a0=a.parse(a0)),m1=new R0(0),(n0=B.Algebra.PartFrac.partfrac(n0,a0)).group===l0&&n0.isLinear()?(n0.each(function(B0){B0.isLinear()||s0.integration.stop()}),n0.each(function(B0){m1=a.add(m1,s0.integrate(B0,a0,Y,C0))})):m1=a.add(m1,s0.integrate(n0,a0,Y,C0)),m1},get_udv:function(n0){function a0(x){var q,$=x.group;$===o1?(q=x.fname,B.Utils.in_trig(q)||B.Utils.in_htrig(q)?Y[3].push(x):B.Utils.in_inverse_trig(q)?Y[1].push(x):q===f1?Y[0].push(x):s0.integration.stop()):$===T0||x.isComposite()&&x.isLinear()||$===l0&&x.isLinear()?Y[2].push(x):$===Q0||x.isComposite()&&!x.isLinear()?Y[4].push(x):s0.integration.stop()}var Y=[[],[],[],[],[]];n0.group===l0?n0.each(function(x){a0(R0.unwrapSQRT(x,!0))}):a0(n0);for(var C0,m1=new R0(1),B0=0;B0<5;B0++){var e0=Y[B0],i0=e0.length;if(0<i0){if(1<i0)for(var H0=new R0(1),u1=0;u1<i0;u1++)H0=a.multiply(H0,e0[u1].clone());else H0=e0[0].clone();C0?m1=a.multiply(m1,H0):(C0=H0).multiplier=C0.multiplier.multiply(n0.multiplier)}}return[C0,m1]},trig_sub:function(n0,a0,Y,C0,m1,B0){(m1=m1||s0.integration.decompose_arg(n0.clone().toLinear(),a0))[3],m1[2];var e0=m1[0],i0=m1[1];if(i0.power.equals(2)&&e0.greaterThan(0))return a0=B.Utils.getU(n0),m1=a.parse(g+m0(a0)),e0=a.parse(b+m0(a0)+"^2"),e0=a.multiply(n0.sub(i0,m1),e0),i0=s0.integrate(e0,a0,Y,C0).sub(m1,i0),B.Utils.clearU(m1),i0},by_parts:function(n0,a0,Y,C0){var m1,B0,e0,i0,H0,u1;return C0.previous=C0.previous||[],e0=(B0=s0.integration.get_udv(n0))[0],m1=B0[1],H0=(i0=R0.unwrapSQRT(a.expand(s0.diff(e0.clone(),a0)),!0)).clone().stripVar(a0),i0=a.divide(i0,H0.clone()),n0=s0.integrate(m1.clone(),a0,Y||0),i0=(B0=a.multiply(n0.clone(),i0)).toString(),C0.previous.indexOf(i0)!==-1&&B.Utils.in_trig(e0.fname)&&m1.isE()?(C0.is_cyclic=!0,new R0(1)):(C0.previous.push(i0),e0=a.multiply(e0,n0),n0=B0.multiplier.clone(),B0.toUnitMultiplier(),(H0=a.multiply(s0.integrate(B0.clone(),a0,Y,C0),H0)).multiplier=H0.multiplier.multiply(n0),H0=a.subtract(e0,H0),C0.is_cyclic&&(C0.previous.pop(),C0.previous.length===0&&(H0=a.expand(H0),u1=new R0(0),H0.each(function(x){x.contains(a0)||(u1=a.add(u1,x.clone()))}),H0=a.divide(a.subtract(H0,u1.clone()),a.subtract(new R0(1),u1)))),H0)},decompose_arg:B.Utils.decompose_fn},integrate:function(n0,a0,Y,C0){var m1;if(a0||(m1=B.Utils.variables(n0),a0=(a0=m1.length===1?m1[0]:a0)||"x"),B.Utils.isVector(n0)){var B0=new B.Vector([]);return n0.each(function(e0){B0.elements.push(s0.integrate(e0,a0))}),B0}return isNaN(a0)||a.error("variable expected but received "+a0),n0.isConstant(!0)?a.multiply(n0.clone(),a.parse(a0)):(C0=C0||{},B.Utils.block("PARSE2NUMBER",function(){Y=Y||0;var e0,i0=Z(a0)?a0.toString():a0,H0=(Q=R0.unwrapSQRT(n0.clone(),!0)).group;try{if(++Y>B.Settings.integration_depth&&s0.integration.stop("Maximum depth reached. Exiting!"),Q.contains(i0,!0)){if(H0===T0)e0=s0.integration.poly_integrate(Q,i0,Y);else if(H0===Q0)if(Q.previousGroup===o1&&Q.fname!=="sqrt"&&Q.fname!==p1.PARENTHESIS&&s0.integration.stop(),Q.contains(i0)&&Q.previousGroup!==o1)Q.power.contains(i0)?s0.integration.stop():((w1=s0.diff(Q.clone().toLinear(),i0)).contains(i0)&&s0.integration.stop(),e0=s0.integration.poly_integrate(Q,i0,Y));else{if((Z0=s0.diff(Q.power.clone(),i0)).contains(i0)){var u1=Z0.stripVar(i0);if((i1=a.divide(Z0.clone(),u1.clone())).group===T0&&i1.isLinear())return u1.multiplier=u1.multiplier.divide(new r0(2)),a.parse(N0("({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))",u1,i0,Q.multiplier));s0.integration.stop()}Q.isE()?Z0.isLinear()?e0=Q:Z0.isE()&&Z0.power.group===T0&&Z0.power.power.equals(1)?e0=a.multiply(a.symfunction("Ei",[Q.power.clone()]),Q.power):s0.integration.stop():(T=a.symfunction(f1,[a.parse(Q.value)]),e0=a.divide(Q,T)),e0=a.divide(e0,Z0)}else if(Q.isComposite()&&Q.isLinear()){var x=a.parse(Q.multiplier);Q.toUnitMultiplier(),e0=new R0(0),Q.each(function(s1){e0=a.add(e0,s0.integrate(s1,i0,Y))}),e0=a.multiply(x,e0)}else if(H0===k0)if((Q=Q.power.greaterThan(1)?a.expand(Q):Q).power.equals(1))e0=new R0(0),Q.each(function(s1){e0=a.add(e0,s0.integrate(s1,i0,Y))},!0);else{var q=Number(Q.power),x=Q.multiplier.clone();Q.toUnitMultiplier();var $,o0,F0,D0=Q.clone().toLinear(),c0=(z=s0.integration.decompose_arg(D0,i0))[3],l1=z[2],Z0=z[0],i1=z[1];if(q===-1&&i1.group!==K0&&i1.power.equals(2)){var P1,T,H,f0,v0,u0,b0,O0,M0,P0,I0,d1=!G0(c0)||0<c0;e0=i1.group===T0&&i1.power.equals(2)&&d1?(P1=function(Y1){var B1=new R0(1);return Y1.each(function(K1){B1=a.multiply(B1,K1.fname==="abs"?K1.args[0]:K1)}),B1},H=Z0.clone(),f0=c0.clone(),H=a.pow(H,new R0(.5)),f0=a.pow(f0,new R0(.5)),T=a.multiply(P1(f0),P1(H)),p2=a.symfunction(C,[a.divide(a.multiply(Z0,i1.toLinear()),T.clone())]),a.divide(p2,T)):i1.group===T0&&i1.isLinear()?a.divide(s0.integration.poly_integrate(Q),Z0):i1.power.equals(4)?(I0=m0,H=a.parse(h1+I0(Z0)+"*"+i0+"^2"),f0=a.parse(h1+I0(2)+"*"+I0(Z0)+"^"+I0("1/4")+"*"+I0(c0)+"^"+I0("1/4")+"*"+i0),v0=a.parse(h1+I0(c0)),c2=a.add(a.add(H.clone(),f0.clone()),v0.clone()),g1=a.add(a.subtract(H,f0),v0),u0=a.parse(h1+I0(2)+"*"+I0(c0)+"^"+I0("3/4")),b0=a.parse(h1+I0(c0)+"*"+I0(c0)+"^"+I0("1/4")+"*"+i0),O0=a.parse("2*"+I0(c0)+"*"+h1+I0(2)+"*"+I0(c0)+"^"+I0("1/4")),M0=a.divide(a.subtract(u0.clone(),b0.clone()),a.multiply(O0.clone(),g1)),P0=a.divide(a.add(u0,b0),a.multiply(O0,c2.clone())),a.add(s0.integrate(M0,i0,Y,C0),s0.integrate(P0,i0,Y,C0))):s0.integration.partial_fraction(Q,i0,Y)}else if(q===-.5)i1.group===T0&&i1.power.equals(2)&&l1.multiplier.lessThan(0)&&!c0.multiplier.lessThan(0)?(Z0.negate(),e0=c0.isConstant()&&Z0.isConstant()?(T=a.symfunction(h1,[Z0.clone()]),$=a.symfunction(h1,[a.multiply(Z0.clone(),c0)]),a.divide(a.symfunction(S,[a.divide(l1.toLinear(),$)]),T)):(o0=a.symfunction(h1,[Z0]),F0=a.multiply(o0.clone(),i1.clone().toLinear()),a.divide(a.symfunction(C,[a.divide(F0,a.symfunction(h1,[D0.clone()]))]),o0))):s0.integration.stop();else if(q===.5&&i1.power.equals(2)&&Z0.greaterThan(0))s0.integration.stop();else if(i1.isLinear()&&i1.group!==K0)e0=a.divide(s0.integration.poly_integrate(Q),Z0);else{if(i1.power.equals(2)&&Z0.greaterThan(0)){var j0=a.parse(h1+m0(Z0)),v1=a.parse(h1+m0(c0)),U1=a.multiply(j0.clone(),v1.clone()).invert(),i2=a.pow(c0,new R0(Q.power)),Q1=B.Utils.getU(Q);V0=a.multiply(U1,i1.clone().toLinear());var e2=a.parse(C+m0(V0)),j1=2*(Math.abs(Q.power)-1),o2=s0.integrate(a.parse(d0+m0(Q1)+"^"+j1));return B.Utils.clearU(Q1),a.multiply(o2.sub(Q1,e2),i2)}if(Q.group===l0||Q.power.lessThan(0)){var p2=Q.clone().toLinear(),A2=B.Algebra.Factor.factor(p2).toString()!==p2.toString();if(B.Algebra.degree(p2,a.parse(i0)).equals(2)&&!A2)try{var c2,L2,q2=B.Algebra.sqComplete(p2,i0);V0=B.Utils.getU(p2),c2=q2.f.sub(q2.a,V0),L2=a.pow(c2,a.parse(Q.power)),e0=s0.integrate(L2,V0).sub(V0,q2.a)}catch{s0.integration.stop()}else e0=s0.integration.partial_fraction(Q,i0,Y,C0)}else e0=s0.integration.by_parts(Q,i0,Y,C0)}e0.multiplier=e0.multiplier.multiply(x)}else if(H0===o1){var F1=Q.args[0],x=Q.multiplier.clone();Q.toUnitMultiplier();var _1,r2,B2,n2,v2,g1,r,v,p,Z0=(z=s0.integration.decompose_arg(F1,i0))[0],i1=z[1],f=Q.fname;if(f===f1||f===S||f==="acos"||f===C&&i1.isLinear()){var E,q=Q.power.toString();G0(q)&&(Y-=q),e0=F1.isComposite()?(V0=B.Utils.getU(Q),p2=a.pow(a.parse(f1+m0(V0)),new R0(q)),G1=s0.diff(F1,i0),E=a.multiply(p2,G1),o2=s0.integrate(E,V0,Y,C0),a.multiply(a.parse(x),o2.sub(V0,F1))):a.multiply(a.parse(x),s0.integration.by_parts(Q,i0,Y,C0))}else{if(f===g&&Q.power.lessThan(0))return(a1=Q.clone()).power.negate(),a1.fname=w,a.multiply(a.parse(x),s0.integrate(a1,i0,Y));if(!Z0.contains(i0,!0)&&Q.isLinear())if(f==="abs")(i1=a.divide(F1.clone(),Z0.clone())).group!==T0||i1.power.lessThan(0)?s0.integration.stop():e0=B.Utils.even(i1.power)?s0.integrate(F1,i0,Y):((p=s0.integrate(i1,i0,Y)).power=p.power.subtract(new r0(1)),a.multiply(a.multiply(a.symfunction("abs",[i1.toLinear()]),p),Z0));else{var m=Q.args[0].group,M=s0.integration.decompose_arg(F1,i0);switch((m!==k0&&m!==T0&&m!==l0||!M[1].power.equals(1)||F1.hasFunc())&&s0.integration.stop(),f){case d0:e0=a.symfunction(z0,[F1]);break;case z0:(e0=a.symfunction(d0,[F1])).negate();break;case g:e0=a.parse(N0(p1.LOG+"(sec({0}))",F1));break;case b:e0=a.parse(N0(p1.LOG+"(tan({0})+sec({0}))",F1));break;case A:e0=a.parse(N0("-"+p1.LOG+"(csc({0})+cot({0}))",F1));break;case w:e0=a.parse(N0(p1.LOG+"(sin({0}))",F1));break;case V:e0=a.symfunction(K,[F1]);break;case K:e0=a.symfunction(V,[F1]);break;case S0:e0=a.parse(N0(p1.LOG+"(cosh({0}))",F1));break;case"asec":case"acsc":case"acot":case"asech":case"acsch":case"acoth":e0=s0.integration.by_parts(Q,i0,Y,C0);break;case"sech":e0=a.parse(N0("atan(sinh({0}))",F1));break;case"csch":e0=a.parse(N0(p1.LOG+"(tanh(({0})/2))",F1));break;case"coth":e0=a.parse(N0(p1.LOG+"(sinh({0}))",F1));break;case"exp":e0=s0.integrate(a.parse(N0("e^({0})",F1)),i0,Y);break;case"S":var F1=Q.args[0].clone(),R=(N1=s0.integration.decompose_arg(F1,i0))[1],D=N1[0],U=N1[3];e0=a.parse(N0("(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)",D,U,i1));break;case"C":F1=Q.args[0].clone(),R=(N1=s0.integration.decompose_arg(F1,i0))[1],D=N1[0],U=N1[3],e0=a.parse(N0("(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)",D,U,R));break;case"erf":F1=Q.args[0].clone(),R=(N1=s0.integration.decompose_arg(F1,i0))[1],D=N1[0],e0=a.parse(N0("e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))",D,R,F1));break;case"sign":e0=a.multiply(Q.clone(),F1.clone());break;default:s0.integration.stop()}e0=a.divide(e0,Z0)}else i1.isLinear()?f===d0||f===z0?(q=Number(Q.power),e0=q<0?(Q.fname=f===z0?A:b,Q.invert().updateHash(),s0.integrate(Q,i0,Y)):(F1=Q.args[0],_1=Q.clone(),r2=Q.clone(),l=new R0((q-1)/q),B2=a.multiply(Z0.clone(),new R0(q)).invert(),_1.power=_1.power.subtract(new r0(1)),r2.power=r2.power.subtract(new r0(2)),w1=a.symfunction(f===d0?z0:d0,[F1.clone()]),f===z0&&w1.negate(),a.add(a.multiply(a.multiply(B2,_1),w1),a.multiply(l,s0.integrate(a.parse(r2),i0,Y))))):f===g||f===w?Q.args[0].isLinear(i0)&&(j1=Q.power.subtract(new r0(1)).toString(),D1=Q.clone().toUnitMultiplier(),v=a.parse(N0((f===w?"-":"")+"1/({2}*{0})*{3}({1})^({0})",j1,F1,Z0,f)),D1.power=D1.power.subtract(new r0(2)),D1.power.equals(0)&&(D1=a.parse(D1)),e0=a.subtract(v,s0.integrate(D1,i0,Y))):f===b||f===A?(n2=Q.power.subtract(new r0(1)).toString(),v2=Q.power.subtract(new r0(2)).toString(),g1=f===b?g:w,D1=Q.clone().toUnitMultiplier(),r=N0((f===A?"-":"")+"1/({0}*{1})*{4}({3})^({2})*{5}({3})",Z0,n2,v2,F1,f,g1),v=a.parse(r),D1.power=D1.power.subtract(new r0(2)),D1.power.equals(0)&&(D1=a.parse(D1)),e0=a.add(v,a.multiply(new R0(v2/n2),s0.integrate(D1,i0,Y)))):f!==K&&f!==V||!Q.power.equals(2)?s0.integration.stop():e0=s0.integrate(Q.fnTransform(),i0,Y):s0.integration.stop();e0.multiplier=e0.multiplier.multiply(x)}}else if(H0===K0)e0=s0.integration.partial_fraction(Q,i0,Y);else if(H0===l0){var F=(Q=Q.getDenom().group===T0?a.expand(Q):Q).stripVar(i0),t=a.divide(Q.clone(),F.clone());if(F.contains(i0)&&(t=a.multiply(t,F),F=new R0(1)),t.group!==l0){if(t.equals(1))return s0.integrate(a.expand(Q),i0,Y);t.clone().toLinear().isPoly(!0)&&1<B.Utils.variables(t).length&&(t=B.Algebra.Factor.factor(t)),e0=s0.integrate(t,i0,Y)}else{var s=t.collectSymbols().sort(function(s1,Y1){return s1.group===Y1.group?Number(s1.power)===Number(Y1.power)?s1<Y1?1:-1:Y1.power-s1.power:Y1.group-s1.group}).map(function(s1){return s1=R0.unwrapSQRT(s1,!0),s1.fname==="exp"?a.parse(N0("({1})*e^({0})",s1.args[0],s1.multiplier)):s1}),h=s.length;if(Q.power<0){if(h===2)return s0.integrate(a.expand(Q),i0,Y,C0)}else if(h===2){try{e0=s0.integration.u_substitution(s,i0)}catch{}if(!e0){var y,L,X,A0,Q,Y0,E0,U0,R1,t1,S1,x0,P,V1,X1,N1,y1,L1,O1,g2,S2,s2,G1,e,l,d,N,_,G,t0,q0=s[0].group,X0=s[1].group,i=s[0],u=s[1],O=i.fname,I=u.fname;if(Q=a.multiply(i.clone(),u.clone()),q0===o1&&X0===o1)if(O===f1||I===f1)e0=s0.integration.by_parts(Q.clone(),i0,Y,C0);else{s.sort(function(s1,Y1){return Y1.fname>s1.fname});var z,p0=i.args[0];p0.isLinear()&&(p0.group===k0||p0.group===l0||p0.group===T0)||s0.integration.stop(),i1=(z=s0.integration.decompose_arg(p0,i0))[1],Z0=z[0],i1.isLinear()||s0.integration.stop();var L0,e1=u.args[0];if(p0.equals(e1))if(O===z0&&I===d0||O===d0&&I===z0)if(i.power.lessThan(0)&&s0.integration.stop(),O===z0&&i.power.add(u.power).equals(0))i.fname=g,i.updateHash(),e0=s0.integrate(i,i0,Y);else if(W(i.power)&&I===d0&&u.power.lessThan(0)){var j1=Number(i.power)/2,$0=a.parse(N0("(1-cos({0})^2)^({1})",i.args[0],j1));e0=s0.integrate(a.expand(a.multiply($0,u.clone())),i0,Y,C0)}else if(W(i.power)&&I===z0&&u.power.lessThan(0))j1=Number(i.power)/2,$0=a.parse(N0("(1-sin({0})^2)^({1})",i.args[0],j1)),e0=s0.integrate(a.expand(a.multiply($0,u.clone())),i0,Y,C0);else{var V0,M1=B.Utils.even(i.power),W0=B.Utils.even(u.power);if(e0=new R0(0),M1&&W0){var T1=function(B1){var K1=B1.power/2,K1=B1.fname===d0?"((1/2)+(cos(2*("+B1.args[0]+"))/2))^"+K1:"((1/2)-(cos(2*("+B1.args[0]+"))/2))^"+K1;return a.parse(K1)},Z0=T1(i),c0=T1(u),w1=a.multiply(Z0,c0);return(a1=a.expand(w1)).each(function(B1){e0=a.add(e0,s0.integrate(B1,i0,Y))}),a.multiply(e0,F)}D1=M1?(V0=i,u):(V0=u,i);var a1,$1=V0.fname===d0?-1:1,J1=((j1=D1.power)-1)/2,H1=a.parse("(1-"+V0.fname+B.Utils.inBrackets(p0)+"^2)^"+J1);(a1=a.expand(a.multiply(new R0($1),a.multiply(V0.clone(),H1)))).each(function(s1){e0=a.add(e0,s0.integration.poly_integrate(s1.clone()))})}else O===b&&I===g&&i1.isLinear()&&u.isLinear()?e0=a.parse(N0("sec({0})^({1})/({1})",i.args[0],i.power)):O===g&&I===b&&i1.isLinear()?i.isLinear()&&u.isLinear()?e0=a.divide(a.symfunction(b,[p0.clone()]),Z0):W(i.power)?(q=Number(i.power)/2,w1=a.parse(N0("(sec({0})^2-1)^({1})",i.args[0],q)),e0=s0.integrate(a.expand(a.multiply(w1,u)),i0,Y)):s0.integration.stop():e0=O===b&&I===d0?(i.fname=d0,i.invert().updateHash(),s0.integrate(a.multiply(i,u),i0,Y)):O===z0&&I===A?(u.fname=z0,u.invert().updateHash(),s0.integrate(a.multiply(i,u),i0,Y)):(w1=O!==g||I!==d0&&I!==z0||!u.power.lessThan(0)?a.multiply(i.fnTransform(),u.fnTransform()):a.multiply(i.fnTransform(),u),s0.integrate(a.expand(w1),i0,Y));else O!==z0&&O!==d0||I!==z0&&I!==d0?s0.integration.stop():i.isLinear()&&u.isLinear()?e0=i.args[0].isLinear()&&u.args[0].isLinear()?(I===z0?(l1=i.args[0],L0=u.args[0]):(L0=i.args[0],l1=u.args[0]),p2=a.parse(N0("(sin(({1})+({0}))+sin(({1})-({0})))/2",l1.toString(),L0.toString())),s0.integrate(p2,i0,Y)):(Z1=x1(s),s0.integrate(a.expand(Z1),i0,Y)):(Z1=new R0(1),s.map(function(s1){s1=s1.fnTransform(),Z1=a.multiply(Z1,s1)}),w1=a.expand(Z1),(e0=s0.integrate(w1,i0,Y)).hasIntegral()&&(e0=s0.integrate(x1(Z1.collectSymbols()),i0,Y)))}else q0===o1&&X0===T0?(y=i.isLinear(),i.fname===d0&&y&&u.power.equals(-1)?e0=a.symfunction("Ci",[i.args[0]]):i.fname===d0&&u.power.equals(-1)?e0=s0.integrate(a.multiply(i.fnTransform(),u.clone()),i0,Y):i.fname===K&&y&&u.power.equals(-1)?e0=a.symfunction("Chi",[i.args[0]]):i.fname===K&&u.power.equals(-1)?e0=s0.integrate(a.multiply(i.fnTransform(),u.clone()),i0,Y):i.fname===z0&&y&&u.power.equals(-1)?e0=a.symfunction("Si",[i.args[0]]):i.fname===z0&&u.power.equals(-1)?e0=s0.integrate(a.multiply(i.fnTransform(),u.clone()),i0,Y):i.fname===V&&y&&u.power.equals(-1)?e0=a.symfunction("Shi",[i.args[0]]):i.fname===V&&u.power.equals(-1)?e0=s0.integrate(a.multiply(i.fnTransform(),u.clone()),i0,Y):i.fname===f1&&u.power.equals(-1)?e0=s0.integration.poly_integrate(i,i0,Y):i.fname==="erf"?u.power.equals(1)&&(D=(N1=s0.integration.decompose_arg(i.args[0],i0))[0],R=N1[1],F1=i.args[0].toString(),e0=a.parse(N0("(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)",D,R,F1))):e0=s0.integration.by_parts(Q,i0,Y,C0)):q0===Q0&&X0===T0?(i1=O===f1?s0.integration.decompose_arg(i.args[0],i0)[1]:null,e0=i.isE()&&(i.power.group===T0||i.power.group===l0)&&u.power.equals(-1)?a.symfunction("Ei",[i.power.clone()]):O===f1&&i1.value===u.value?s0.integration.poly_integrate(i,i0,Y):s0.integration.by_parts(Q,i0,Y,C0)):q0===K0&&X0===T0?(Q=u.value===i.value&&i.power.equals(-1)?(L=Math.min.apply(null,B.Utils.keys(i.symbols)),X=Math.min(L,u.power),(A0=u.clone()).power=new r0(X),u=a.divide(u,A0.clone()),w1=new R0(0),i.each(function(s1){w1=a.add(w1,a.divide(s1.clone(),A0.clone()))}),w1.multiplier=i.multiplier,a.divide(u,w1)):a.expand(Q),e0=s0.integration.partial_fraction(Q,i0,Y)):q0===k0&&X0===T0?(p2=i.clone().toLinear(),Y0=B.Algebra.degree(p2,a.parse(i0)).equals(1),i.power.equals(-.5)?(Z0=(z=s0.integration.decompose_arg(i.clone().toLinear(),i0))[0].negate(),i1=z[1],c0=z[3],S2=Number(i.power),s2=Number(u.power),G0(s2)&&B.Utils.even(s2)&&i1.power.equals(2)?(y1=a.divide(a.multiply(a.pow(c0.clone(),new R0(2)),a.symfunction(h1,[a.divide(c0.clone(),Z0.clone())])),a.pow(Z0.clone(),new R0(2))),y1=a.multiply(y1,a.symfunction(h1,[c0]).invert()),(E0=a.parse("sin(u)")).power=E0.power.multiply(u.power),o2=s0.integrate(E0,"u",Y),U0=a.parse("asin(sqrt("+Z0+"/"+c0+")*"+i0+")"),e0=a.multiply(y1,o2.sub(new R0("u"),U0))):S2===-.5&&(R1=function(s1,Y1){if(Y1=a.parse(s0.integrate(s1,i0,Y,C0).sub(i0,N0(Y1,i0))),!Y1.hasIntegral())return Y1},s2===-1?e0=R1(a.expand(a.expand(a.pow(a.multiply(i.invert(),u.invert()),new R0(2)))).invert(),"sqrt(1-1/({0})^2)"):s2===-2&&(e0=R1(a.sqrt(a.expand(a.divide(a.pow(Q,new R0(2)).invert(),a.pow(new R0(i0),new R0(2))).negate())).invert(),"sqrt(1-1/({0})^2)")))):i.power.equals(-1)&&u.isLinear()&&Y0?e0=s0.integration.partial_fraction(Q,i0,Y):!i.power.lessThan(0)&&G0(i.power)?(t1=a.expand(i),e0=new R0(0),t1.each(function(s1){s1.group===K0?s1.each(function(Y1){e0=a.add(e0,s0.integrate(a.multiply(u.clone(),Y1),i0,Y))}):e0=a.add(e0,s0.integrate(a.multiply(u.clone(),s1),i0,Y))})):i.power.lessThan(-2)?e0=s0.integration.by_parts(Q,i0,Y,C0):i.power.lessThan(0)&&u.power.greaterThan(1)?(Z0=(z=s0.integration.decompose_arg(i.clone().toLinear(),i0))[0].negate(),i1=z[1],c0=z[3],D0=i.clone().toLinear(),e0=i1.group!==K0&&i1.isLinear()?(q=Number(u.power),V0=new R0(G1="_u_"),S1=a.expand(a.divide(a.pow(a.subtract(V0.clone(),c0.clone()),new R0(q)),V0.clone())),(x0={})[G1]=D0,P=a.parse(S1,x0),s0.integrate(P,i0,0)):u.power.greaterThan(i1.power)||u.power.equals(i1.power)?(V1=new B.Algebra.Classes.Factors,i=B.Algebra.Factor.coeffFactor(i.invert(),V1),(X1=B.Algebra.divide(u,i)).group!==l0?(e0=new R0(0),X1.each(function(s1){e0=a.add(e0,s0.integrate(s1,i0,Y))}),V1.each(function(s1){e0=a.divide(e0,s1)}),a.expand(e0)):s0.integration.by_parts(Q,i0,Y,C0)):s0.integration.partial_fraction(Q,i0,Y)):i.power.den.equals(2)?(Z0=(N1=s0.integration.decompose_arg(i.clone().toLinear(),i0))[3],i1=N1[1],c0=N1[0],L0=N1[2],e0=i1.power.equals(2)&&c0.lessThan(0)?(Z0.equals(1)||(F=a.multiply(F,a.pow(Z0,new R0(2)))),V0=i0,y1=a.divide(a.pow(c0.clone().negate(),new R0(.5)),a.pow(Z0,new R0(.5))),G1=a.symfunction(d0,[new R0(V0)]),L1=a.pow(a.symfunction(d0,[new R0(V0)]),new R0(i.power.num)),O1=a.pow(a.symfunction(z0,[new R0(V0)]),new R0(u.power)),g2=a.multiply(a.multiply(L1,G1),O1),(o2=s0.integrate(g2,V0,Y)).sub(V0,a.symfunction(S,[a.multiply(new R0(i0),y1)]))):s0.integration.partial_fraction(Q,i0,Y,C0)):Y0&&(e0=s0.integration.partial_fraction(Q,i0,Y))):i.isComposite()&&u.isComposite()?(e0=new R0(0),i.power.greaterThan(0)&&u.power.greaterThan(0)?(a1=a.expand(Q)).each(function(s1){e0=a.add(e0,s0.integrate(s1,i0,Y))},!0):(S2=Number(i.power),s2=Number(u.power),S2<0&&0<s2&&(w1=i,i=u,u=w1),S2===-1&&s2===-1?e0=s0.integration.partial_fraction(Q,i0):i.each(function(s1){s1=a.multiply(s1,u.clone()),s1=s0.integrate(s1,i0,Y),e0=a.add(e0,s1)}))):q0===k0&&s[0].power.greaterThan(0)?(i=a.expand(i),e0=new R0(0),i.each(function(s1){e0=a.add(e0,s0.integrate(a.multiply(s1,u.clone()),i0,Y))},!0)):q0===o1&&X0===Q0&&B.Utils.in_htrig(i.fname)?(i=i.fnTransform(),e0=s0.integrate(a.expand(a.multiply(i,u)),i0,Y)):q0===o1&&X0===k0||X0===o1&&q0===k0?(X0===o1&&q0===k0&&(w1=i,i=u,u=w1),G1=R0.unwrapSQRT(s0.diff(i.clone(),i0),!0),e=R0.unwrapSQRT(u,!0),G1.power.equals(e.power)?(q=new R0(u.power),d=G1.clone().toLinear(),N=u.clone().toLinear(),(l=B.Algebra.divide(d.toLinear(),N)).isConstant()&&(_=a.pow(l,q.negate()),e0=a.multiply(_,s0.integration.poly_integrate(i.clone())))):e0=s0.integration.by_parts(Q,i0,Y,C0)):(G=i.clone().toLinear(),t0=u.clone().toLinear(),e0=q0===Q0&&X0===Q0&&i.power.contains(i0)&&u.power.contains(i0)&&!G.contains(i0)&&!t0.contains(i0)?a.parse(N0("(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))",G.toString(),t0.toString(),i.power.multiplier.toString(),u.power.multiplier.toString(),i0)):s0.integration.by_parts(Q,i0,Y,C0))}}else if(h===3&&(s[2].group===T0&&s[2].power.lessThan(2)||s[0].group===k0)){var D1,W1=s[0];W1.group===k0?(W1.power.greaterThan(1)&&(W1=a.expand(W1)),D1=a.multiply(s[1],s[2]),e0=new R0(0),W1.each(function(s1){s1=a.multiply(s1,D1.clone()),s1=s0.integrate(s1,i0,Y),e0=a.add(e0,s1)},!0)):e0=s0.integration.by_parts(Q,i0,Y,C0)}else if(y0(s)){for(var w1=new R0(1),t2=0,h=s.length;t2<h;t2++)w1=a.multiply(w1,s[t2].fnTransform());w1=a.expand(w1),e0=s0.integrate(w1,i0,Y)}else{var Z1=x1(s);e0=s0.integrate(a.expand(Z1),i0,Y)}}e0=a.multiply(e0,F)}}else e0=a.multiply(Q.clone(),a.parse(i0));if(e0)return e0}catch(s1){if(!(s1 instanceof h0||s1 instanceof B.exceptions.DivisionByZero))throw s1}return a.symfunction("integrate",[n0,a0])},!1))},defint:function(n0,a0,Y,C0){C0=C0||"x";function m1(u1,x,q){try{return a.parse(u1,x)}catch{return s0.Limit.limit(u1,C0,q)}}var B0,e0,i0=B.Utils.variables(n0),H0=n0.hasTrig();return i0.length!==1||C0||(C0=i0[0]),H0||(B0=s0.integrate(n0,C0)),H0||B0.hasIntegral()?i0.length===1&&a0.isConstant()&&Y.isConstant()?(e0=B.Utils.build(n0),new R0(B.Math2.num_integrate(e0,Number(a0),Number(Y)))):a.symfunction("defint",[n0,a0,Y,C0]):(e0={},(n0={})[C0]=Y,e0[C0]=a0,Y=m1(B0,n0,Y),a0=m1(B0,e0,a0),a.subtract(Y,a0))},Limit:{interval:function(n0,a0){return a.parse(N0("[{0}, {1}]",n0,a0))},diverges:function(){return s0.Limit.interval("-Infinity","Infinity")},divide:function(n0,a0,Y,C0,m1){if(!(m1++>p1.max_lim_depth)){n0.clone();var B0=a0.clone();if(a0.fname==="abs"){var e0=n0.sign(),i0=C0.sign();if(C0.isInfinity)return a.multiply(new R0(e0),new R0(i0));if(C0.equals(0)){var i0=a.parse(n0.multiplier),H0=a.parse(a0.multiplier);return a.divide(a.multiply(i0,s0.Limit.interval("-1","1")),H0)}s0.Limit.diverges()}var u1=function(c0){if(B.Utils.isVector(c0)){for(var l1=0;l1<c0.elements.length;l1++)if(!c0.elements[l1].isInfinity)return!1;return!0}return c0.isInfinity},x=function(c0,l1){return!B.Utils.isVector(c0)&&c0.equals(l1)};do var q,$,o0=j(s0.Limit.limit(n0.clone(),Y,C0,m1)),F0=j(s0.Limit.limit(a0.clone(),Y,C0,m1)),D0=u1(o0)&&u1(F0)||x(o0,0)&&x(F0,0);while(D0&&(q=s0.diff(n0.clone(),Y),$=s0.diff(a0.clone(),Y),n0=($=a.expand(a.divide(q,$))).getNum(),a0=$.getDenom()),D0);return H0=F0.equals(0),B0=Number(B0.power),C0.isConstant(!0)&&H0?R0.infinity(B.Utils.even(B0)&&o0.lessThan(0)?-1:void 0):H0?s0.Limit.diverges():a.divide(o0,F0)}},rewriteToLog:function(n0){var a0=n0.power.clone();return n0.toLinear(),a.pow(new R0("e"),a.multiply(a0,a.symfunction(p1.LOG+"",[n0])))},getSubbed:function(n0,a0,Y){var C0;n0.group===Q0&&(n0=s0.rewriteToLog(n0));try{C0=n0.sub(a0,Y)}catch{C0=n0}return C0},isInterval:function(n0){return B.Utils.isVector(n0)},isConvergent:function(n0){return!(s0.Limit.isInterval(n0)&&n0.elements[0].isInfinity&&n0.elements[1].isInfinity||n0.containsFunction("limit"))},limit:function(n0,a0,Y,C0){if(n0.isLinear()&&n0.isComposite()){var m1=new R0(0);return n0.each(function(e2){m1=a.add(m1,s0.Limit.limit(e2,a0,Y,C0))},!0),m1}if(n0=B.Algebra.Simplify.simplify(n0),C0=C0||1,!(C0++>p1.max_lim_depth)){var B0=a.parse(n0.multiplier);n0.toUnitMultiplier();try{if(n0.isConstant(!0))c0=n0;else{var e0={};e0[a0]=Y;try{var i0=a.parse(n0.sub(a0,Y),e0);(i0.isConstant(!0)||i0.isInfinity)&&(c0=i0)}catch{}if(!c0){var H0,u1=n0.getNum(),x=n0.getDenom();if(x.isConstant(!0)){if(n0.group===Q0){var q,$,o0,F0,D0,c0,l1=n0.clone().toLinear(),Z0=(n0.power.clone(),l1.getNum()),i1=l1.getDenom(),P1=B.Utils.decompose_fn(i1,a0,!0);c0=Z0.group===T0&&Z0.multiplier.isOne()&&P1.ax.group===T0&&P1.b.isConstant(!0)&&P1.a.isOne()&&P1.b.isConstant(!0)?a.parse(N0("(1/e^({0}))",P1.b)):($=(q=s0.Limit.rewriteToLog(n0.clone())).power.clone(),o0=q.clone().toLinear(),F0=s0.Limit.limit(o0,a0,Y,C0),D0=s0.Limit.limit($,a0,Y,C0),a.pow(F0,D0))}else if(n0.group===o1&&n0.args.length===1){var T,H=s0.Limit.limit(n0.args[0],a0,Y,C0);if(B.Utils.isVector(H))return c0=H.map(function(e2){return n0.clone().args[0]=e2,s0.Limit.limit(a.symfunction(n0.fname,[e2]),a0,Y,C0)}),a.multiply(B0,c0);if(H.isConstant(!0)){var f0=a.symfunction(n0.fname,[H]);try{j(f0),T=!0}catch{T=!1}}if(T)c0=f0;else if(s0.Limit.isConvergent(H))if(n0.fname===f1)switch(H.toString()){case"0":c0=R0.infinity().negate();break;case"Infinity":case"-Infinity":c0=R0.infinity()}else if(n0.fname!==d0&&n0.fname!==z0||!Y.isInfinity){if(n0.fname===g){var v0=n0.args[0],u0=v0.getNum(),b0=v0.getDenom(),O0=u0.toUnitMultiplier();(Y.isInfinity||O0.equals("pi")&&b0.equals(2))&&(c0=divergent())}else if(n0.fname===p1.FACTORIAL&&H.isInfinity)return R0.infinity()}else c0=s0.Limit.interval(-1,1)}else if(n0.group===T0){if(0<n0.power)return a.parse(n0,e0);c0=B.Utils.even(n0.power)?R0.infinity():s0.Limit.diverges()}else if(n0.group===l0){for(var l1=(d1=n0.collectSymbols().sort(function(j1,o2){return j1.group-o2.group})).pop(),M0=j(s0.Limit.limit(l1,a0,Y,C0));d1.length;){var P0=d1.pop(),I0=j(s0.Limit.limit(P0,a0,Y,C0));M0.isInfinity||!s0.Limit.isConvergent(M0)&&I0.equals(0)||M0.equals(0)&&s0.Limit.isConvergent(I0)?((P0=P0.containsFunction(f1)?[l1,l1=P0][0]:P0).invert(),M0=M0.isInfinity&&I0.isInfinity?R0.infinity():s0.Limit.divide(l1,P0,a0,Y,C0)):(M0=a.multiply(M0,I0),l1=a.multiply(l1,P0))}c0=M0}else if(n0.isComposite()){n0.isLinear()||(n0=a.expand(n0)),c0=new R0(0);for(var d1=n0.collectSymbols().sort(function(e2,j1){return j1.group-e2.group}),j0=[],v1=new R0(0),U1=0,i2=d1.length;U1<i2;U1++)(Q1=d1[U1].clone()).group===o1||Q1.group===l0&&Q1.hasFunc()?v1=a.add(v1,Q1):j0.push(Q1);for(j0.unshift(v1),j0.length!==1&&(d1=j0),U1=0,i2=d1.length;U1<i2;U1++){var Q1=d1[U1];try{H0=s0.Limit.limit(Q1,a0,Y,C0)}catch{H0=s0.Limit.diverges()}try{c0=a.add(c0,H0)}catch{if(C0++>p1.max_lim_depth)return;c0=s0.Limit.limit(s0.diff(n0,a0),a0,Y,C0)}}}}else c0=s0.Limit.divide(u1,x,a0,Y,C0)}}c0=c0||a.symfunction("limit",[n0,a0,Y])}catch{c0=a.symfunction("limit",[n0,a0,Y])}return a.multiply(B0,c0)}}},Fresnel:{S:function(n0){return n0.isConstant(!0)?s0.defint(a.parse("sin(pi*x^2/2)"),R0(0),n0,"x"):a.symfunction("S",arguments)},C:function(n0){return n0.isConstant(!0)?s0.defint(a.parse("cos(pi*x^2/2)"),R0(0),n0,"x"):a.symfunction("C",arguments)}}};_2.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return s0.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return s0.sum}},{name:"product",visible:!0,numargs:4,build:function(){return s0.product}},{name:"integrate",visible:!0,numargs:[1,2],build:function(){return s0.integrate}},{name:"defint",visible:!0,numargs:[3,4],build:function(){return s0.defint}},{name:"S",visible:!0,numargs:1,build:function(){return s0.Fresnel.S}},{name:"C",visible:!0,numargs:1,build:function(){return s0.Fresnel.C}},{name:"limit",visible:!0,numargs:[3,4],build:function(){return s0.Limit.limit}}]),_2.updateAPI()}(),typeof Z2<"u"&&(_2=require("./nerdamer.core.js"),require("./Calculus.js"),require("./algebr.js")),function(){var B,a=_2.getCore(),r0=a.PARSER,p1=a.Algebra,Z=a.Calculus,R0=Z.integration.decompose_arg,E1=a.Utils.evaluate,m0=a.Utils.remove,G0=a.Utils.format,N0=a.Utils.build,W=a.Utils.knownVariable,j=a.Symbol,c1=a.Utils.isSymbol,T0=a.Utils.variables,o1=a.groups.S,K0=a.groups.PL,k0=a.groups.CB,l0=a.groups.CP,Q0=a.groups.FN,A1=a.Settings,f1=a.Utils.range,h1=a.Utils.isArray;function z0(w,S){if(S.isConstant()&&w.isConstant()&&!w.equals(S)||w.equals(a.Settings.IMAGINARY)&&S.isConstant(!0)||S.equals(a.Settings.IMAGINARY)&&w.isConstant(!0))throw new a.exceptions.NerdamerValueError(w.toString()+" does not equal "+S.toString());this.LHS=w,this.RHS=S}a.Settings.SOLVE_RADIUS=1e3,a.Settings.ROOTS_PER_SIDE=10,a.Settings.make_pi_conversions=!1,a.Settings.STEP_SIZE=.1,a.Settings.EPSILON=1e-13,a.Settings.MAX_NEWTON_ITERATIONS=200,a.Settings.MAX_NON_LINEAR_TRIES=12,a.Settings.NON_LINEAR_JUMP_AT=50,a.Settings.NON_LINEAR_JUMP_SIZE=100,a.Settings.NON_LINEAR_START=.01,a.Settings.NEWTON_SLICES=200,a.Settings.NEWTON_EPSILON=2*Number.EPSILON,a.Settings.SOLUTION_PROXIMITY=1e-14,a.Settings.FILTER_SOLUTIONS=!0,a.Settings.MAX_SOLVE_DEPTH=10,a.Settings.ZERO_EPSILON=1e-9,a.Settings.MAX_BISECTION_ITER=2e3,a.Settings.BI_SECTION_EPSILON=1e-12,a.Symbol.prototype.hasTrig=function(){return this.containsFunction(["cos","sin","tan","cot","csc","sec"])},a.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var w in this.symbols){var S=this.symbols[w];if(S.group===K0&&S.hasNegativeTerms()||this.symbols[w].power.lessThan(0))return!0}return!1},z0.prototype={toString:function(){return this.LHS.toString()+"="+this.RHS.toString()},text:function(w){return this.LHS.text(w)+"="+this.RHS.text(w)},toLHS:function(w){var S=(C=(w=w===void 0)?this.removeDenom():this.clone()).LHS,C=C.RHS;return S.isConstant(!0)&&!C.isConstant(!0)&&([S,C]=[C,S]),C=r0.subtract(S,C),new z0(w?r0.expand(C):C,new j(0)).removeDenom().LHS},removeDenom:function(){var w=this.LHS.clone(),S=this.RHS.clone(),C=r0.multiply(w.getDenom(),S.getDenom());if(w=r0.expand(r0.multiply(w,C.clone())),(S=r0.expand(r0.multiply(S,C))).group===l0&&S.group!==l0&&(V=w,w=S,S=V),w.group===k0){var V=new j(w.multiplier),K=S.clone();w.each(function(g0){g0.power.lessThan(0)?K=r0.divide(K,g0):V=r0.multiply(V,g0)}),w=V,S=K}else if(w.group===l0)for(var S0 in w.symbols){var h0=w.symbols[S0];if(h0.group===k0){for(var y0 in h0.symbols)if(y0=h0.symbols[y0],y0.power.lessThan(0))return new z0(r0.expand(r0.multiply(y0.clone().toLinear(),w)),r0.expand(r0.multiply(y0.clone().toLinear(),S)))}}return new z0(w,S)},clone:function(){return new z0(this.LHS.clone(),this.RHS.clone())},sub:function(w,S){var C=this.clone();return C.LHS=C.LHS.sub(w.clone(),S.clone()),C.RHS=C.RHS.sub(w.clone(),S.clone()),C},isZero:function(){return a.Utils.evaluate(this.toLHS()).equals(0)},latex:function(w){return[this.LHS.latex(w),this.RHS.latex(w)].join("=")}},r0.equals=function(w,S){return new z0(w,S)},B=r0.functions.simplify[0],r0.functions.simplify[0]=function(w){return w instanceof z0?(w.LHS=B(w.LHS),w.RHS=B(w.RHS),w):B(w)},a.Expression.prototype.equals=function(w){return w instanceof a.Expression&&(w=w.symbol),new z0(this.symbol,w)},a.Expression.prototype.solveFor=function(w){var S;if(this.symbol instanceof z0){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(w))return new a.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(w))return new a.Expression(this.symbol.RHS);S=this.symbol.toLHS()}else S=this.symbol;return A(S,w).map(function(C){return new a.Expression(C)})},a.Expression.prototype.expand=function(){if(this.symbol instanceof z0){var w=this.symbol.clone();return w.RHS=r0.expand(w.RHS),w.LHS=r0.expand(w.LHS),new a.Expression(w)}return new a.Expression(r0.expand(this.symbol))},a.Expression.prototype.variables=function(){return this.symbol instanceof z0?a.Utils.arrayUnique(T0(this.symbol.LHS).concat(T0(this.symbol.RHS))):T0(this.symbol)};function d0(w,S){return r0.equals(w,S)}a.Equation=z0;var g=a.Utils.checkAll=function(w,S){for(var C=0;C<w.length;C++)if(S(w[C]))return!1;return!0},b=a.Solve={version:"2.0.3",solutions:[],solve:function(w,S){return S=A(w,String(S)),new a.Vector(S)},toLHS:function(w,S){return c1(w)?w:(w instanceof z0||((C=w.split("="))[1]=C[1]||"0",w=new z0(r0.parse(C[0]),r0.parse(C[1]))),w.toLHS(S));var C},solveCircle:function(w,S){for(var C=S.map(function(s0){return r0.parse(s0)}),V=[],K=[],S0=0;S0<w.length;S0++){for(var h0=[],y0=0;y0<C.length;y0++)h0.push(Number(a.Algebra.degree(w[S0],C[y0])));h0.push(a.Utils.arraySum(h0,!0)),V.push(h0)}var g0,C1,I1=w[0],x1=w[1];return V[0][2]>V[1][2]&&([x1,I1]=[I1,x1],[V[1],V[0]]=[V[0],V[1]]),V[0][0]===1&&V[0][2]===2&&V[1][0]===2&&V[1][2]===4&&(g0=S[0],C1=S[1],S=A(r0.parse(x1,W(g0,A(r0.parse(I1),g0)[0])),C1).map(function(s0){return s0.toString()}),x1=[A(r0.parse(I1,W(C1,S[0])))[0].toString()],S[1]&&x1.push(A(r0.parse(I1,W(C1,S[1])))[0].toString()),A1.SOLUTIONS_AS_OBJECT?((K={})[g0]=x1,K[C1]=S):(S.unshift(C1),x1.unshift(g0),K=[x1,S])),K},solveNonLinearSystem:function(w,S,C){if(S<0)return[];C=C===void 0?a.Settings.NON_LINEAR_START:C;var n0=a.Settings.MAX_NON_LINEAR_TRIES,V=Math.floor(n0/2);S=S===void 0?n0:S;var K,S0,h0,y0,g0,C1=a.Settings.NON_LINEAR_JUMP_AT,I1=a.Settings.NON_LINEAR_JUMP_SIZE,x1=!0,s0=a.Utils.arrayGetVariables(w),n0=a.Matrix.jacobian(w,s0,function(u1){return N0(u1,s0)},!0),a0=a.Settings.MAX_NEWTON_ITERATIONS,Y=w.map(function(u1){return N0(u1,s0)}),C0=n0.map(function(u1){return N0(u1,s0)},!0),m1=a.Matrix.cMatrix(0,s0),B0=a.Matrix.cMatrix(C,s0),e0=0;do{if(a0<e0)break;K=function(u1,x){return u1.map(function(q,$){return Number(x.get($,0))})}(s0,B0),y0=B0.clone(),Y.forEach(function(u1,x){B0.set(x,0,u1.apply(null,K))});var i0=new a.Matrix;if(C0.each(function(u1,x,q){u1=u1.apply(null,K),i0.set(x,q,u1)}),i0=i0.invert(),g0=(S0=r0.multiply(i0,B0).negate()).subtract(m1,function(u1){return r0.parse(Number(u1))}),m1=y0.add(S0,function(u1){return r0.parse(Number(u1))}),B0=m1,C1<=e0&&1<h0){S===V&&(C=0);var H0=V<S?1:-1;return n=S%Math.floor(V)+1,C+=H0*n*I1,b.solveNonLinearSystem(w,--S,C)}}while(H0=h0,e0++,h0=g0.max(),Number(h0)!==Number(H0)&&Number(h0)>=Number.EPSILON);return x1?b.systemSolutions(B0,s0,!0,function(u1){return a.Utils.round(Number(u1),14)}):[]},systemSolutions:function(w,S,C,V){var K=a.Settings.SOLUTIONS_AS_OBJECT?{}:[];return w.each(function(S0,h0){var y0=(C?r0.expand(S0):S0).valueOf();V&&(y0=V.call(S0,y0)),h0=S[h0],a.Settings.SOLUTIONS_AS_OBJECT?K[h0]=y0:K.push([h0,y0])}),K},solveSystemBySubstitution:function(w){var S=T0(w[0]),C=T0(w[1]);return w.length===2&&S.length===2&&a.Utils.arrayEqual(S,C)?b.solveCircle(w,S):[]},solveSystem:function(w,S){for(var C=0;C<w.length;C++)w[C]=b.toLHS(w[C]);var V,K=w.length,S0=new a.Matrix,h0=new a.Matrix,y0=!1;if(S===void 0){if(!p1.allLinear(w))try{return b.solveNonLinearSystem(w)}catch($){if($ instanceof a.exceptions.DivisionByZero)return b.solveSystemBySubstitution(w)}if((V=a.Utils.arrayGetVariables(w)).length===1){var g0,C1=0;do var I1=w[C1].clone();while(0<C1&&(I1=I1.sub(V[0],g0[0])),g0=A(I1,V[0]),++C1<w.length);return A1.SOLUTIONS_AS_OBJECT?(n0={})[V[0]]=g0:n0=g0.length===0?g0:[V[0],g0],n0}if(V.length<w.length){for(var x1=[],C1=w.length,C=0;C<C1-1;C++)x1.push(r0.parse(w[C]));var s0={},n0=b.solveSystem(x1,V);Array.isArray(n0)?n0.forEach(function($){s0[$[0]]=$[1]}):s0=n0;for(var a0=!0,C=C1-1;C<C1;C++)r0.parse(w[C],s0).equals(0)||(a0=!1);if(a0)return n0}for(C=0;C<V.length;C++)_2.setVar(V[C],"delete");for(C=0;C<K;C++){for(var I1=w[C],Y=0;Y<V.length;Y++){var C0=V[Y],m1=[];I1.each(function(o0){o0.contains(C0)&&(m1=m1.concat(o0.coeffs()))});var B0=a.Utils.arraySum(m1);S0.set(C,Y,B0)}var e0=I1.clone();V.map(function($){e0=e0.stripVar($,!0)}),h0.set(C,0,e0.negate())}}else for(V=S,y0=!0,C=0;C<K;C++){for(h0.set(C,0,new j(0)),I1=r0.expand(w[C]).collectSymbols(),Y=0;Y<S.length;Y++){S0.set(C,Y,new j(0));for(var C0=S[Y],i0=0;i0<I1.length;i0++){for(var H0,u1=I1[i0],x=!1,q=0;q<S.length;q++)u1.contains(S[q])&&(x&&a.err("Multiple variables found for term "+u1),x=!0);u1.contains(C0)&&(H0=R0(m0(I1,i0),C0),S0.set(C,Y,r0.add(S0.get(C,Y),H0[0])))}}for(i0=0;i0<I1.length;i0++)h0.set(C,0,r0.add(h0.get(C,0),I1[i0]))}if(V.length!==w.length||S0.determinant().equals(0))throw new a.exceptions.SolveError("System does not have a distinct solution");return n0=(S0=S0.invert()).multiply(h0),a.Utils.isArray(S)&&n0.each(function($){return $.negate()}),b.systemSolutions(n0,V,y0)},quad:function(w,S,C){return w=r0.subtract(r0.pow(S.clone(),j(2)),r0.multiply(r0.multiply(C.clone(),w.clone()),j(4))),w=r0.expand(w),w=r0.pow(w,j(.5)),C=r0.parse(r0.multiply(new j(2),C.clone())),[r0.parse(G0("(-({0})+({1}))/({2})",S,w,C)),r0.parse(G0("(-({0})-({1}))/({2})",S,w,C))]},cubic:function(w,S,C,V){return V=V.text(),C=C.text(),S=S.text(),w=`(-(${C})^3/(27*(${V})^3)+(${C})*(${S})/(6*(${V})^2)-(${w.text()})/(2*(${V})))`,S=`((${S})/(3*(${V}))-(${C})^2/(9*(${V})^2))`,C=`((${w})+sqrt((${w})^2+(${S})^3))^(1/3)+((${w})-sqrt((${w})^2+(${S})^3))^(1/3)-(${`(${C})/(3*(${V}))`})`,V="1/2+sqrt(3)/2*i",[r0.parse(C),r0.parse(`(${C})(${V})`),r0.parse(`(${C})(${V})^2`)]},quartic:function(w,S,C,V,K){var S0,h0,y0;return a.Utils.arrayUnique(T0(K).concat(T0(V)).concat(T0(C)).concat(T0(S)).concat(T0(w))).map(function(g0){}),K=K.toString(),V=V.toString(),C=C.toString(),S=S.toString(),w=w.toString(),S0=r0.parse(G0("(8*({0})*({2})-3*({1})^2)/(8*({0})^2)",K,V,C)).toString(),h0=r0.parse(G0("(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)",K,V,C,S)).toString(),y0=r0.parse(G0("12*({0})*({4})-3*({1})*({3})+({2})^2",K,V,C,S,w)).toString(),w=r0.parse(G0("2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})",K,V,C,S,w)).toString(),w=r0.parse(G0("((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)",y0,w)).toString(),o1=r0.parse(G0("(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)",K,S0,w,y0)).toString(),[r0.parse(G0("-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",K,V,S0,h0,o1)),r0.parse(G0("-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))",K,V,S0,h0,o1)),r0.parse(G0("-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",K,V,S0,h0,o1)),r0.parse(G0("-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))",K,V,S0,h0,o1))]},divideAndConquer:function(V,S){var C=[],V=a.Algebra.Factor.factor(V);return V.group===k0&&V.each(function(K){K=j.unwrapPARENS(K),C=C.concat(A(K,S))}),C},csolve:function(w,S){return a.Utils.block("IGNORE_E",function(){var C=[],V=a.Utils.decompose_fn(w,S,!0);if(V.x.group===o1)for(var K,S0=r0.parse(V.x.power),h0=Number(S0),y0=r0.pow(r0.divide(V.b.negate(),V.a),S0.invert()),y0=(V=j.toPolarFormArray(y0))[0],g0=(V[1],y0.toString()),C1=(S0.toString(),0);C1<h0;C1++)K=G0("({0})*e^(2*{1}*pi*{2}*{3})",g0,C1,S0,a.Settings.IMAGINARY),K=r0.parse(K),C.push(K);return C},!0)},getPoints:function(w,S,C){S=S||.01,C=C||[];var V=N0(w),K=Math.round(0),y0=V(K),S0=y0/Math.abs(y0),h0=a.Settings.ROOTS_PER_SIDE,y0=h0;return C.push(Math.floor(K/2)),C.push(Math.abs(K)),C.push(K),w.each(function(g0){g0.containsFunction(a.Settings.LOG)&&C.push(.1)}),w=f1(-a.Settings.SOLVE_RADIUS,K,S),K=f1(K,a.Settings.SOLVE_RADIUS,S),S=function(g0,C1){for(var I1,x1,s0,n0=[],a0=0,Y=g0.length;a0<Y;a0++)I1=g0[a0],s0=(x1=V(I1))/Math.abs(x1),isNaN(x1)||!isFinite(x1)||n0.length>C1||(s0!==S0&&n0.push(I1),S0=s0);C=C.concat(n0)},S(w,y0),S(K,h0),C},bisection:function(w,S){var C=w-1,V=w+1;if(Math.sign(S(C))!==Math.sign(S(V))){var K,S0,h0=0;do if(K=Math.abs(V-C),h0++>a.Settings.MAX_BISECTION_ITER||isNaN(K))return;while(S0=(C+V)/2,0<S(C)*S(S0)?C=S0:V=S0,K>=A1.EPSILON);var y0=(C+V)/2,w=S(y0);if(!isNaN(w)&&Math.abs(w)<=a.Settings.BI_SECTION_EPSILON)return a.Utils.round(y0,13)}},Newton:function(w,S,C){var V=a.Settings.MAX_NEWTON_ITERATIONS,K=0,S0=w;do{var y0=S(S0);if(S0===0&&y0===0){h0=0;break}if(V<++K)return;var h0=S0-y0/C(S0),y0=Math.abs(h0-S0),S0=h0}while(y0>A1.NEWTON_EPSILON);if(Math.abs(S(h0))<=A1.EPSILON)return h0},rewrite:function(w,S,C){var V,K;S=S||new j(0),w.isComposite()&&w.isLinear()?(V=[],K=[],w.each(function(g0){((g0=g0.clone()).fname==="sqrt"&&g0.contains(C)?V:K).push(g0)},!0),V.length===1&&(S=r0.expand(r0.pow(r0.subtract(S,a.Utils.arraySum(K)),new j(2))),w=r0.expand(r0.pow(j.unwrapSQRT(V[0]),new j(2))))):w=j.unwrapSQRT(r0.expand(w));var S0=0,h0=w.length;if(w.group===l0&&w.contains(C)&&w.isLinear()){w.distributeMultiplier();var y0=new j(0);return w.each(function(g0){g0.contains(C)?(S0++,y0=r0.add(y0,g0.clone())):S=r0.subtract(S,g0.clone())}),w=y0,S0!==h0?b.rewrite(w,S,C):[w,S]}if(w.group===k0&&w.contains(C)&&w.isLinear())return w.multiplier.lessThan(0)&&(w.multiplier=w.multiplier.multiply(new a.Frac(-1)),S.multiplier=S.multiplier.multiply(new a.Frac(-1))),S.equals(0)?new j(0):(y0=new j(1),w.each(function(g0){g0.contains(C)?y0=r0.multiply(y0,g0.clone()):S=r0.divide(S,g0.clone())}),b.rewrite(w=y0,S,C));if(!w.isLinear()&&w.contains(C))return h0=r0.parse(w.power.clone().invert()),w=r0.pow(w,h0.clone()),S=r0.pow(r0.expand(S),h0.clone()),b.rewrite(w,S,C);if(w.group===Q0||w.group===o1||w.group===K0)return[w,S]},sqrtSolve:function(w,S){var C=new j(0),V=new j(0);if(w.isComposite()&&(w.each(function(S0){S0.fname==="sqrt"&&S0.contains(S)?C=r0.add(C,S0.clone()):V=r0.add(V,S0.clone())}),!C.equals(0))){var K=r0.expand(r0.multiply(r0.parse(w.multiplier),r0.subtract(r0.pow(V,new j(2)),r0.pow(C,new j(2)))));return A(K,S).filter(function(S0){if(S0.isImaginary())return S0;var h0={};return h0[S]=S0,E1(w,h0).equals(0)?S0:void 0})}}},A=function(w,S,C,V,K){if(V=V||0,V++>A1.MAX_SOLVE_DEPTH)return C;if(w instanceof z0){if(w.isZero())return[new j(0)];if(w.LHS.equals(S)&&!w.RHS.contains(S))return[w.RHS];if(w.RHS.equals(S)&&!w.LHS.contains(S))return[w.LHS]}if(w instanceof a.Vector&&(w=w.elements),S=S||"x",h1(w))return b.solveSystem.apply(void 0,arguments);C=C||[];var S0={},C1={};if(C1[S]=0,c1(w)&&E1(w.getDenom(),C1).equals(0)===!0)return C;var h0=function(I0,d1){var j0,v1=c1(I0);I0===void 0||typeof I0=="number"&&isNaN(I0)||(h1(I0)?I0.forEach(function(U1){h0(U1)}):I0.valueOf()!=="null"&&(typeof a.Settings.PRE_ADD_SOLUTION=="function"&&(I0=a.Settings.PRE_ADD_SOLUTION(I0)),v1||(I0=r0.parse(I0)),a.Settings.make_pi_conversions&&d1&&(v1=(j0=r0.divide(I0.clone(),new j(Math.PI))).multiplier,d1=Math.abs(v1.num),v1=Math.abs(v1.den),d1<10&&v1<10&&(I0=r0.multiply(j0,new j("pi")))),j0=I0.toString(),S0[j0]||C.push(I0),S0[j0]=!0))};if(w.group===o1&&w.contains(S)){try{var I1={};I1[S]=0,E1(K,I1,"numer"),h0(new j(0))}catch{}return C}if(w.group===k0){var m1=w.getNum();if(m1.group!==k0)return A(m1,S,C,V,K);var y0=String(S);return m1.each(function(d1){d1.contains(y0)&&A(d1,S,C,V,w)}),C}w.group===Q0&&w.fname==="sqrt"&&(w=r0.pow(j.unwrapSQRT(w),new j(2)));var g0=(a.Utils.isSymbol(w)?w:b.toLHS(w,!1)).getNum(),C1=a.Utils.variables(g0),I1=C1.length;if((g0=a.Utils.isInt(g0.power)&&0<g0.power?r0.parse(g0).toLinear():g0).group===o1||g0.group===k0&&g0.contains(S))return[new j(0)];function x1(I0){var d1=new j(0),j0=new j(0);return I0.each(function(v1){v1.contains(S,!0)?d1=r0.add(d1,v1.clone()):j0=r0.subtract(j0,v1.clone())}),[d1,j0]}var s0,n0={},a0=function(I0){var d1=(I0=r0.expand(I0,{expand_denominator:!0,expand_functions:!0})).clone();if(I0.symbols)for(var j0 in I0.symbols){var v1=I0.symbols[j0],U1=v1.getDenom();if(!U1.isConstant(!0)&&I0.isComposite()){var i2=new j(0);return I0.each(function(c2){i2=r0.add(i2,r0.multiply(c2,U1.clone()))}),a0(r0.multiply(r0.parse(I0.multiplier),i2))}var Q1=R0(v1,S),e2=Q1[1].fname===a.Settings.SQRT,j1=j.unwrapSQRT(Q1[1]),j0=j1.power.clone();if(!c1(j0)&&!j0.equals(.5))if(j0.den.gt(1)){if(e2)return I0=r0.subtract(I0,v1.clone()),I0=r0.add(I0,r0.multiply(Q1[0].clone(),j1)),a0(I0);j1=n0[j0.den],n0[j0.den]=j1?j1++:1}else{if(j0.sign()===-1){var o2=r0.parse(S+"^"+Math.abs(j0));return I0.each(function(c2,L2){c2.contains(S)&&(I0.symbols[L2]=r0.multiply(c2,o2.clone()))}),n0={},a0(r0.parse(I0))}if(v1.group===K0&&(v1=a.Utils.arrayMin(a.Utils.keys(v1.symbols)),v1<0)){var o2=r0.parse(S+"^"+Math.abs(v1)),p2=new j(0);return d1.each(function(L2){p2=r0.add(p2,r0.multiply(L2.clone(),o2.clone()))},!0),p2}}}return I0};if(b.inverseFunctionSolve=function(I0,d1,j0){var v1=R0(d1.args[0],S);if(v1[1].group===o1)return r0.divide(r0.symfunction(I0,[r0.divide(j0,r0.parse(d1.multiplier))]),v1[0])},(g0=a0(g0)).equals(0))return[g0];var Y,C0,m1=a.Utils.keys(n0);if(m1.length===1&&(s0=m1[0],g0.each(function(I0,d1){var j0,v1;!I0.contains(S)||(I0=(v1=(j0=R0(I0,S))[1]).power).den.gt(1)&&(v1.power=I0.multiply(new a.Frac(s0)),g0.symbols[d1]=r0.multiply(v1,j0[0]))}),g0=r0.parse(g0)),h0(b.sqrtSolve(g0,S)),I1===1)if(g0.isPoly(!0)){var B0=new a.Algebra.Classes.Factors;if(a.Algebra.Factor.factor(g0,B0),1<B0.getNumberSymbolics())for(var e0 in B0.factors)h0(A(B0.factors[e0],S));else{var i0,H0,u1=(i0=a.Utils.getCoeffs(g0,S)).length-1,I1=!1;C1[0]===S&&(g(i0,function(d1){return d1.group!==a.groups.N})&&(C1=a.Algebra.proots(g0),g(C1,function(d1){return!a.Utils.isInt(d1)})&&(I1=!0,C1.map(function(d1){h0(new j(d1))}))),I1||((w=r0.parse(w))instanceof a.Equation&&(w=w.toLHS()),u1===1?h0(r0.divide(i0[0],i0[1].negate())):u1===2?h0(r0.expand(b.quad.apply(void 0,i0))):u1===3?(C=[],H0=a.Algebra.Factor.factor(w),0<(C=[]).length?h0(C):h0(b.cubic.apply(void 0,i0))):p1.proots(g0).map(h0)))}}else try{for(var x,q,$=g0.hasTrig(),o0=b.getPoints(g0,.1),F0=b.getPoints(g0,.05),D0=b.getPoints(g0,.01),i1=a.Utils.arrayUnique(o0.concat(F0).concat(D0)).sort(function(d1,j0){return d1-j0}),c0=N0(g0.clone()),l1=[],Z0=0;Z0<i1.length;Z0++)x=i1[Z0],(q=b.bisection(x,c0))!==void 0?h0(q,$):l1.push(x);var i1=l1,P1=Z.diff(g0.clone()),T=N0(P1);for(Z0=0;Z0<i1.length;Z0++)x=i1[Z0],h0(b.Newton(x,c0,T),$);C.sort()}catch(I0){console.log(I0)}else if(!g0.hasFunc(S)&&g0.isComposite())try{if((H0=a.Algebra.Factor.factor(g0.clone())).group===k0)H0.each(function(I0){h0(A(I0,S))});else{switch(u1=(i0=a.Utils.getCoeffs(g0,S)).length-1){case 0:var H,f0,v0,u0=(H=x1(g0))[0],b0=H[1];u0.group===a.groups.EX&&(v0=`${f0=a.Settings.LOG}((${b0})/(${u0.multiplier}))/${f0}(${u0.value})/${u0.power.multiplier}`,h0(r0.parse(v0)));break;case 1:h0(r0.divide(i0[0],i0[1].negate()));break;case 2:h0(b.quad.apply(void 0,i0));break;case 3:h0(b.cubic.apply(void 0,i0));break;case 4:h0(b.quartic.apply(void 0,i0));break;default:h0(b.csolve(g0,S)),C.length===0&&h0(b.divideAndConquer(g0,S))}C.length===0&&h0(A(H0,S,C,V))}}catch{}else try{var O0,M0=b.rewrite(g0,null,S),u0=M0[0],b0=M0[1];if(u0.group===Q0)u0.fname==="abs"?h0([b0.clone(),b0.negate()]):u0.fname==="sin"?h0(b.inverseFunctionSolve("asin",u0,b0)):u0.fname==="cos"?h0(b.inverseFunctionSolve("acos",u0,b0)):u0.fname==="tan"?h0(b.inverseFunctionSolve("atan",u0,b0)):u0.fname===a.Settings.LOG?(e0=(O0=R0(u0.args[0],S))[1]).group===o1&&(g0=new z0(e0,b0=r0.divide(r0.subtract(r0.pow(1<u0.args.length?u0.args[1]:new j("e"),r0.divide(b0,r0.parse(u0.multiplier))),O0[3]),O0[0])).toLHS(),h0(A(g0,S))):h0(r0.subtract(u0,b0));else{var P0=new z0(u0,b0).toLHS();if(P0.equals(g0))throw new Error("Stopping. No stop condition exists");h0(A(P0,S))}}catch{try{g0.group===k0?h0(0):g0.group===l0&&(u0=(H=x1(g0))[0],b0=H[1],u0.group===a.groups.EX&&u0.value===S&&(Y=u0.power.clone().invert(),h0(r0.pow(b0,Y))))}catch{}}return s0&&(C=C.map(function(I0){return r0.pow(I0,new j(s0))})),c1(w)&&(C0={},C=C.filter(function(I0){try{C0[S]=I0;var d1=Number(E1(w,C0));return isNaN(d1),!0}catch{return!1}})),C};_2.register([{name:"solveEquations",parent:"nerdamer",numargs:-1,visible:!0,build:function(){return A}},{name:"solve",parent:"Solve",numargs:2,visible:!0,build:function(){return a.Solve.solve}},{name:"setEquation",parent:"Solve",visible:!0,build:function(){return d0}}]),_2.updateAPI()}(),typeof Z2<"u"&&(_2=require("./nerdamer.core.js"),require("./Calculus"),require("./algebr.js")),function(){var B=_2.getCore(),a=B.PARSER,r0=B.Symbol,p1=B.Utils.format,Z=B.Utils.isVector,R0=B.Utils.isArray,E1=(B.Vector,B.groups.S),m0=(B.groups.EX,B.groups.CP),G0=B.groups.CB,N0=B.groups.FN;B.Settings.Laplace_integration_depth=40,r0.prototype.findFunction=function(j){if(this.group===N0&&this.fname===j)return this.clone();var c1;if(this.symbols){for(var T0 in this.symbols)if(c1=this.symbols[T0].findFunction(j))break}return c1};var W=B.Extra={version:"1.4.2",LaPlace:{transform:function(j,c1,T0){j=j.clone(),c1=c1.toString();var o1=(j=r0.unwrapSQRT(j,!0)).stripVar(c1),K0=j.group;if((j=a.divide(j,o1.clone())).isConstant()||!j.contains(c1,!0))l0=a.parse(p1("({0})/({1})",j,T0));else if(K0===E1&&B.Utils.isInt(j.power))var k0=String(j.power),l0=a.parse(p1("factorial({0})/({1})^({0}+1)",k0,T0));else if(j.group===E1&&j.power.equals(.5))l0=a.parse(p1("sqrt(pi)/(2*({0})^(3/2))",T0));else if(j.isComposite())l0=new r0(0),j.each(function(f1){l0=a.add(l0,W.LaPlace.transform(f1,c1,T0))},!0);else if(!j.isE()||j.power.group!==E1&&j.power.group!==G0)if(j.group!==N0||["sin","cos","sinh","cosh"].indexOf(j.fname)===-1||j.args[0].group!==E1&&j.args[0].group!==G0){var Q0,k0=B.Settings.integration_depth<B.Settings.Laplace_integration_depth;k0&&(Q0=B.Settings.integration_depth,B.Settings.integration_depth=B.Settings.Laplace_integration_depth),B.Utils.block("PARSE2NUMBER",function(){var h1=c1,z0=j.sub(c1,h1),z0=a.parse("e^(-"+T0+"*"+h1+")*"+z0);if((l0=B.Calculus.integrate(z0,h1)).hasIntegral())return a.symfunction("laplace",arguments);l0=l0.sub(c1,0),l0=(l0=a.expand(a.multiply(l0,new r0(-1)))).sub(h1,c1)},!1),l0=B.Utils.block("PARSE2NUMBER",function(){return a.parse(l0)},!0),k0&&(B.Settings.integration_depth=Q0)}else switch(A1=j.args[0].stripVar(c1),j.fname){case"sin":l0=a.parse(p1("({0})/(({1})^2+({0})^2)",A1,T0));break;case"cos":l0=a.parse(p1("({1})/(({1})^2+({0})^2)",A1,T0));break;case"sinh":l0=a.parse(p1("({0})/(({1})^2-({0})^2)",A1,T0));break;case"cosh":l0=a.parse(p1("({1})/(({1})^2-({0})^2)",A1,T0))}else{var A1=j.power.stripVar(c1);l0=a.parse(p1("1/(({1})-({0}))",A1,T0))}return a.multiply(l0,o1)},inverse:function(j,c1,T0){var o1=j.clone();return B.Utils.block("POSITIVE_MULTIPLIERS",function(){if((j=j.group===G0?B.Algebra.PartFrac.partfrac(a.expand(j),c1):j).group===E1||j.group===G0||j.isComposite()){var K0,k0,l0,Q0,A1,f1,h1,z0,d0,g,b,A,w,S,C,V=function(){(f1=a.multiply(f1,K0)).multiplier=f1.multiplier.multiply(j.multiplier),f1=a.divide(f1,Q0.a)},K=j.multiplier.clone();if(j.toUnitMultiplier(),K0=j.getNum(),(k0=j.getDenom().toUnitMultiplier()).group===m0?(A1=k0.power.clone(),k0.toLinear()):A1=new B.Frac(1),l0=c1.toString(),Q0=B.Utils.decompose_fn(k0,l0,!0),B.Utils.decompose_fn(a.expand(K0.clone()),l0,!0),K0.multiplier=K0.multiplier.multiply(K),(k0.group===E1||k0.group===G0)&&Q0.x.value===l0&&Q0.b.equals(0)&&B.Utils.isInt(Q0.x.power))A=Q0.x.power-1,w=B.Math2.factorial(A),f1=a.divide(a.pow(T0,new r0(A)),new r0(w)),V();else if(k0.group===m0&&A1.equals(1))Q0.x.group===B.groups.PL&&B.Algebra.degree(k0).equals(2)?(d0=B.Algebra.sqComplete(k0,l0),g=B.Utils.getU(k0),S=B.Utils.decompose_fn(d0.a,l0,!0).b,b=W.LaPlace.inverse(a.parse(`1/((${g})^2+(${d0.c}))`),g,T0),f1=a.multiply(b,a.parse(`(${K})*e^(-(${S})*(${T0}))`))):Q0.x.isLinear()&&!K0.contains(l0)?(T0=a.divide(T0,Q0.a.clone()),f1=a.parse(p1("(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))",T0,Q0.a,Q0.b,A1,w=(A=A1-1)===0||A===1?"1":`(${A1}-1)!`)),V()):Q0.x.group===E1&&Q0.x.power.equals(2)&&(K0.contains(l0)?(S=new r0(1),K0.group===G0&&(h1=new r0(1),K0.each(function(I1){I1.contains(l0)?h1=a.multiply(h1,I1):S=a.multiply(S,I1)}),K0=h1),d0=(z0=B.Utils.decompose_fn(K0,l0,!0)).a,g=z0.b,b=d0.containsFunction("sin"),A=d0.containsFunction("cos"),w=g.containsFunction("cos"),V=g.containsFunction("sin"),z0.x.value===l0&&z0.x.isLinear()&&!(b&&w||A||V)?f1=a.parse(p1("(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})",T0,z0.a,Q0.a,Q0.b)):b&&w&&(b=d0.findFunction("sin"),w=g.findFunction("cos"),b.args[0].equals(w.args[0])&&!b.args[0].contains(l0)&&(S0=a.divide(g,w.toUnitMultiplier()).toString(),w=b.args[0].toString(),C=Q0.b,b=a.divide(d0,b.toUnitMultiplier()),f1=a.parse(p1("(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))",T0,S,S0,w,C,b))))):f1=a.parse(p1("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))",T0,K0,Q0.a,Q0.b)));else if(Q0.x.power.num&&Q0.x.power.num.equals(3)&&Q0.x.power.den.equals(2)&&K0.contains("sqrt(pi)")&&!K0.contains(l0)&&K0.isLinear()){var S0=a.divide(K0.clone(),a.parse("sqrt(pi)"));f1=a.parse(p1("(2*({2})*sqrt({0}))/({1})",T0,Q0.a,S0,K0))}else if(A1.equals(2)&&Q0.x.power.equals(2))if(K0.contains(l0))if((z0=B.Utils.decompose_fn(a.expand(K0.clone()),l0,!0)).x.isComposite()){var h0=[],y0=K0.collectSymbols(function(I1){I1=r0.unwrapPARENS(I1);var x1=B.Utils.decompose_fn(I1,l0,!0);return x1.symbol=I1,x1}).sort(function(I1,x1){return I1=I1.x.value!==l0?0:I1.x.power,(x1.x.value!==l0?0:x1.x.power)-I1});S=new r0(-1);for(var g0=0;g0<y0.length;g0++){var C1=y0[g0];C1.x.value===l0?h0.push(C1):S=a.multiply(S,C1.symbol)}h0[0].x.power.equals(2)&&h0[1].x.power.equals(1)&&h0[1].b.equals(0)&&!h0[0].b.equals(0)&&(S0=h0[0].a.negate(),f1=a.parse(p1("-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2",T0,S,S0,h0[0].b,Q0.a,Q0.b)))}else z0.x.isLinear()?(S=a.divide(z0.a,new r0(2)),f1=a.parse(p1("(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))",T0,S,Q0.a,Q0.b))):z0.x.power.equals(2)&&(f1=z0.b.equals(0)?(S=a.divide(z0.a,new r0(2)),a.parse(p1("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",T0,S,Q0.a,Q0.b))):(S=a.divide(z0.a,new r0(2)),C=z0.b.negate(),a.parse(p1("-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2",T0,S,Q0.a,Q0.b,C))));else S=a.divide(K0,new r0(2)),f1=a.parse(p1("(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))",T0,S,Q0.a,Q0.b));else j.isComposite()&&(A1.equals(2)&&Q0.x.group===E1?f1=a.parse(`(${K})*(${T0})*e^(-(${Q0.b})*(${T0}))`):(f1=new r0(0),j.each(function(I1){f1=a.add(f1,W.LaPlace.inverse(I1,c1,T0))},!0)))}return f1=f1||a.symfunction("ilt",[o1,c1,T0])},!0)}},Statistics:{frequencyMap:function(j){for(var c1={},T0=0,o1=j.length;T0<o1;T0++){var K0=j[T0].toString();c1[K0]||(c1[K0]=0),c1[K0]++}return c1},sort:function(j){return j.sort(function(c1,T0){return c1.isConstant()&&T0.isConstant()||a.error("Unable to sort! All values must be numeric"),c1.multiplier.subtract(T0.multiplier)})},count:function(j){return new r0(j.length)},sum:function(j,c1){for(var k0=new r0(0),T0=0,o1=j.length;T0<o1;T0++)var K0=j[T0].clone(),k0=c1?a.add(a.pow(a.subtract(K0,c1.clone()),new r0(2)),k0):a.add(K0,k0);return k0},mean:function(){var j=[].slice.call(arguments);return Z(j[0])?W.Statistics.mean.apply(this,j[0].elements):a.divide(W.Statistics.sum(j),W.Statistics.count(j))},median:function(){var j=[].slice.call(arguments);if(Z(j[0]))return W.Statistics.median.apply(this,j[0].elements);try{var c1,T0,o1=W.Statistics.sort(j),K0=j.length;T0=B.Utils.even(K0)?(c1=K0/2,W.Statistics.mean(o1[c1-1],o1[c1])):o1[Math.floor(K0/2)]}catch{T0=a.symfunction("median",j)}return T0},mode:function(){var j=[].slice.call(arguments);if(Z(j[0]))return W.Statistics.mode.apply(this,j[0].elements);var c1=W.Statistics.frequencyMap(j);if(B.Utils.keys(c1).length===1)l0=j[0];else{var T0,o1={};for(T0 in c1){var K0,k0=c1[T0];k0 in o1?(K0=o1[k0],R0(K0)?K0.push(T0):o1[k0]=[T0,o1[k0]]):o1[k0]=T0}var j=o1[Math.max.apply(null,B.Utils.keys(o1))],l0=R0(j)?a.symfunction("mode",j.sort()):a.parse(j)}return l0},gVariance:function(j,c1){var T0=W.Statistics.mean.apply(W.Statistics,c1),T0=W.Statistics.sum(c1,T0);return a.multiply(j,T0)},variance:function(){var j=[].slice.call(arguments);if(Z(j[0]))return W.Statistics.variance.apply(this,j[0].elements);var c1=a.divide(new r0(1),W.Statistics.count(j));return W.Statistics.gVariance(c1,j)},sampleVariance:function(){var j=[].slice.call(arguments);if(Z(j[0]))return W.Statistics.sampleVariance.apply(this,j[0].elements);var c1=a.divide(new r0(1),a.subtract(W.Statistics.count(j),new r0(1)));return W.Statistics.gVariance(c1,j)},standardDeviation:function(){var j=[].slice.call(arguments);return Z(j[0])?W.Statistics.standardDeviation.apply(this,j[0].elements):a.pow(W.Statistics.variance.apply(W.Statistics,j),new r0(.5))},sampleStandardDeviation:function(){var j=[].slice.call(arguments);return Z(j[0])?W.Statistics.sampleStandardDeviation.apply(this,j[0].elements):a.pow(W.Statistics.sampleVariance.apply(W.Statistics,j),new r0(.5))},zScore:function(j,c1,T0){return a.divide(a.subtract(j,c1),T0)}},Units:{table:{foot:"12 inch",meter:"100 cm",decimeter:"10 cm"}}};_2.register([{name:"laplace",visible:!0,numargs:3,build:function(){return W.LaPlace.transform}},{name:"ilt",visible:!0,numargs:3,build:function(){return W.LaPlace.inverse}},{name:"mean",visible:!0,numargs:-1,build:function(){return W.Statistics.mean}},{name:"median",visible:!0,numargs:-1,build:function(){return W.Statistics.median}},{name:"mode",visible:!0,numargs:-1,build:function(){return W.Statistics.mode}},{name:"smpvar",visible:!0,numargs:-1,build:function(){return W.Statistics.sampleVariance}},{name:"variance",visible:!0,numargs:-1,build:function(){return W.Statistics.variance}},{name:"smpstdev",visible:!0,numargs:-1,build:function(){return W.Statistics.sampleStandardDeviation}},{name:"stdev",visible:!0,numargs:-1,build:function(){return W.Statistics.standardDeviation}},{name:"zscore",visible:!0,numargs:3,build:function(){return W.Statistics.zScore}}]),_2.updateAPI()}(),typeof Z2<"u"&&(Z2.exports=_2);const P3=document.querySelector("#lim"),E3=document.querySelector("#func"),q3=document.querySelector(".ma__ans");let l3=1;P3.addEventListener("change",()=>{P3.selectedIndex==0?l3=1:l3=-1;let B=E3.selectedIndex,a=E3.options[B].text;D3(a)});E3.addEventListener("change",()=>{let B=E3.selectedIndex,a=E3.options[B].text;D3(a)});function D3(B){if(!q6(B)){q3.textContent="Предела нет";return}let r0=I6(B);if(r0===1/0){q3.textContent="+ ∞";return}if(r0===-1/0){q3.textContent="- ∞";return}q3.textContent=r0}function q6(B){let a,r0,p1=0,Z=0;try{for(let R0=2;R0<=1e3;R0++){if(a=Number(M3(B,{x:R0*l3}).evaluate()),r0=Number(M3(B,{x:(R0+1)*l3}).evaluate()),isNaN(a))return 0;if(!isFinite(a))return 1;if(a>r0){if(p1=1,Z==1)return 0}else if(a<r0&&(Z=1,p1==1))return 0}}catch{return-1}return 1}function I6(B){let a,r0;if(a=Number(M3(B,{x:1e4*l3}).evaluate()),r0=Number(M3(B,{x:1e5*l3}).evaluate()),a-r0>.1)return-1/0;if(r0-a>.1)return 1/0;try{let p1=Number(M3(B,{x:1/0*l3}).evaluate());return isNaN(p1)?r0.toFixed(2):p1}catch{return r0.toFixed(2)}}const x6=document.querySelector(".nav__right"),C6=document.querySelector(".nav__left"),h3=document.querySelectorAll("section"),x3=document.querySelectorAll(".nav__list-el");let z2=0;x6.addEventListener("click",()=>{console.log(z2),h3[z2].classList.add("display-disactive"),x3[z2].classList.add("display-disactive"),z2++,z2>=h3.length&&(z2=0),console.log(z2),h3[z2].classList.remove("display-disactive"),x3[z2].classList.remove("display-disactive")});C6.addEventListener("click",()=>{console.log(z2),h3[z2].classList.add("display-disactive"),x3[z2].classList.add("display-disactive"),z2--,z2<0&&(z2=h3.length-1),console.log(z2),h3[z2].classList.remove("display-disactive"),x3[z2].classList.remove("display-disactive")})});export default O6();
